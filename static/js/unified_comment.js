// üéØ –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ "–ë–µ—Å–µ–¥–∫–∞"
// –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±–æ–π <form class="comment-form" action="..."> –≤–Ω—É—Ç—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü.
// –¢—Ä–µ–±—É–µ—Ç –∫–Ω–æ–ø–∫–∏ submit –≤–Ω—É—Ç—Ä–∏ —Ñ–æ—Ä–º—ã.

document.addEventListener('DOMContentLoaded', () => {
  document.body.addEventListener('submit', async (e) => {
    const form = e.target.closest('.comment-form');
    if (!form) return;
    e.preventDefault();

    const submitBtn = form.querySelector('[type="submit"]');
    const originalText = submitBtn ? submitBtn.innerHTML : '';
    if (submitBtn) {
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
    }

    const url = form.action;
    const formData = new FormData(form);

    // –ü–æ–ª—É—á–∞–µ–º CSRF-—Ç–æ–∫–µ–Ω (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: cookie, –∑–∞—Ç–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã)
    const getCookie = (name) => {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
      return '';
    };
    let csrfToken = getCookie('csrftoken');
    if (!csrfToken) {
      csrfToken = formData.get('csrfmiddlewaretoken') || '';
    }

    try {
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          ...(csrfToken ? { 'X-CSRFToken': csrfToken } : {}),
        },
        body: formData,
        credentials: 'same-origin',
      });

      let data;
      try {
        data = await response.json();
      } catch (parseErr) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
      }

      if (!response.ok || !data.success) {
        const errorMsg = (data && (data.errors || data.error || data.message)) ?
          (typeof data.errors === 'object' ? Object.values(data.errors).flat().join(' ') : data.errors) :
          '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è';
        alert(errorMsg);
        return;
      }

      // –£—Å–ø–µ—à–Ω–æ
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª html
      if (data.comments_html) {
        const container = document.getElementById('comments-container');
        if (container) container.innerHTML = data.comments_html;
      }

      // –°–∫—Ä–æ–ª–ª–∏–º –∫ –Ω–æ–≤–æ–º—É/–æ—Ç–≤–µ—Ç–Ω–æ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
      if (data.comment_id) {
        const newCommentEl = document.getElementById(`comment-${data.comment_id}`);
        if (newCommentEl) {
          newCommentEl.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      }

      form.reset();

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ hero-—Å–µ–∫—Ü–∏–∏ / –º–µ—Ç–∞-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
      if (data.comments_count !== undefined) {
        document.querySelectorAll('.js-comments-count').forEach(el => {
          el.textContent = data.comments_count;
        });
      }

      // –°–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –æ—Ç–≤–µ—Ç–µ –∏ –æ—á–∏—â–∞–µ–º parent_id
      const parentInput = form.querySelector('input[name="parent_id"]');
      if (parentInput) parentInput.value = '';
      const replyInfo = form.querySelector('#reply-info');
      if (replyInfo) replyInfo.style.display = 'none';
    } catch (err) {
      console.error(err);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è');
    } finally {
      if (submitBtn) {
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalText;
      }
    }
  });
});

// ==== –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ¬´–û—Ç–≤–µ—Ç–∏—Ç—å¬ª –∏ –æ—Ç–º–µ–Ω—ã –æ—Ç–≤–µ—Ç–∞ ====
// –†–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, –≥–¥–µ –≤ .comment-form –µ—Å—Ç—å —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ input[name="parent_id"]
// –∏ –±–ª–æ–∫ #reply-info —Å <span id="reply-author"> –∏ –∫–Ω–æ–ø–∫–æ–π #cancel-reply.

// –î–µ–ª–µ–≥–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –Ω–∞ –≤–µ—Å—å –¥–æ–∫—É–º–µ–Ω—Ç, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–±–æ—Ç–∞–ª –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
// –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ HTML (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ AJAX –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤).

document.addEventListener('click', (e) => {
  // –ö–Ω–æ–ø–∫–∞ ¬´–û—Ç–≤–µ—Ç–∏—Ç—å¬ª
  const replyBtn = e.target.closest('.reply-btn');
  if (replyBtn) {
    e.preventDefault();
    const commentId = replyBtn.dataset.commentId;
    const author = replyBtn.dataset.author || '';

    const form = document.querySelector('.comment-form');
    if (!form) return;

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º parent_id
    const parentInput = form.querySelector('input[name="parent_id"]');
    if (parentInput) parentInput.value = commentId;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ –æ —Ç–æ–º, –Ω–∞ —á–µ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–≤–µ—á–∞–µ–º
    const replyInfo = form.querySelector('#reply-info');
    const replyAuthorSpan = form.querySelector('#reply-author');
    if (replyInfo) replyInfo.style.display = 'block';
    if (replyAuthorSpan) replyAuthorSpan.textContent = author;

    // –°–∫—Ä–æ–ª–ª–∏–º —Ñ–æ—Ä–º—É –≤ –≤–∏–¥–∏–º—É—é –æ–±–ª–∞—Å—Ç—å –∏ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º textarea
    form.scrollIntoView({ behavior: 'smooth', block: 'center' });
    const textarea = form.querySelector('textarea[name="text"], textarea');
    if (textarea) textarea.focus();
    return;
  }

  // –ö–Ω–æ–ø–∫–∞ ¬´–û—Ç–º–µ–Ω–∏—Ç—å¬ª
  const cancelBtn = e.target.closest('#cancel-reply');
  if (cancelBtn) {
    e.preventDefault();
    const form = cancelBtn.closest('.comment-form');
    if (!form) return;

    const parentInput = form.querySelector('input[name="parent_id"]');
    if (parentInput) parentInput.value = '';

    const replyInfo = form.querySelector('#reply-info');
    if (replyInfo) replyInfo.style.display = 'none';
  }
});

// ==== –ü–û–î–ì–†–£–ó–ö–ê –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í ====

document.addEventListener('click', async (e) => {
  const loadMoreBtn = e.target.closest('.load-more-comments');
  if (!loadMoreBtn) return;

  e.preventDefault();
  const objectType = loadMoreBtn.dataset.objectType;
  const objectId = loadMoreBtn.dataset.objectId;
  let nextPage = parseInt(loadMoreBtn.dataset.nextPage || '2', 10);

  if (!objectType || !objectId) return;

  loadMoreBtn.disabled = true;
  loadMoreBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

  try {
    const params = new URLSearchParams({type: objectType, id: objectId, page: nextPage});
    const response = await fetch(`/ajax/comments/?${params.toString()}`, {
      method: 'GET',
      headers: {'X-Requested-With': 'XMLHttpRequest'},
      credentials: 'same-origin',
    });

    // –ù–æ–≤—ã–π –±–ª–æ–∫: –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç (404/500 –∏ —Ç.–¥.)
    if (!response.ok) {
      // –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑–¥—Ä–∞–∂–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (response.status === 404) {
        loadMoreBtn.remove();
      } else {
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
        loadMoreBtn.disabled = false;
      }
      return;
    }

    const data = await response.json();

    if (data.success) {
      const container = document.getElementById('comments-container');
      if (container) {
        container.insertAdjacentHTML('beforeend', data.comments_html);
      }
      if (data.has_next) {
        loadMoreBtn.dataset.nextPage = data.next_page;
        loadMoreBtn.disabled = false;
        loadMoreBtn.innerHTML = '<i class="fas fa-comments me-1"></i> –ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë';
      } else {
        loadMoreBtn.remove();
      }
    } else {
      alert(data.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      loadMoreBtn.disabled = false;
    }
  } catch (err) {
    console.error(err);
    alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    loadMoreBtn.disabled = false;
  }
});
