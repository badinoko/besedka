# Generated manually on 2025-05-29 23:50

from django.db import migrations, connection
from django.db.utils import OperationalError


def clean_notes_field_from_db(apps, schema_editor):
    """
    –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è notes –∏–∑ —Ç–∞–±–ª–∏—Ü—ã GrowLogEntry.
    –≠—Ç–æ –ø–æ–ª–µ –±—ã–ª–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–æ —Å activities –∏ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
    """
    with connection.cursor() as cursor:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª–µ notes –≤ —Ç–∞–±–ª–∏—Ü–µ growlogs_growlogentry (PostgreSQL —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
            cursor.execute("""
                SELECT column_name
                FROM information_schema.columns
                WHERE table_name = 'growlogs_growlogentry'
                AND column_name = 'notes'
            """)
            result = cursor.fetchone()

            if result:
                print("üìù –ü–æ–ª–µ 'notes' –Ω–∞–π–¥–µ–Ω–æ –≤ GrowLogEntry - —É–¥–∞–ª—è–µ–º...")

                # –í PostgreSQL –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç—å —Å—Ç–æ–ª–±–µ—Ü
                cursor.execute("ALTER TABLE growlogs_growlogentry DROP COLUMN IF EXISTS notes")

                print("‚úÖ –ü–æ–ª–µ 'notes' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ GrowLogEntry")
                print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–æ–ª–µ 'activities'")

            else:
                print("‚úÖ –ü–æ–ª–µ 'notes' —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ GrowLogEntry - –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ")

        except OperationalError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–î: {e}")
            # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é


def reverse_notes_cleanup(apps, schema_editor):
    """
    –û–±—Ä–∞—Ç–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è - –Ω–µ –¥–µ–ª–∞–µ–º –Ω–∏—á–µ–≥–æ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª–µ notes –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ
    """
    print("‚ö†Ô∏è –û–±—Ä–∞—Ç–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è: –ø–æ–ª–µ notes –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è (–æ–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ)")


class Migration(migrations.Migration):

    dependencies = [
        ("growlogs", "0011_final_notes_fix"),
    ]

    operations = [
        migrations.RunPython(clean_notes_field_from_db, reverse_notes_cleanup),
    ]
