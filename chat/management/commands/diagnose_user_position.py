from django.core.management.base import BaseCommand
from chat.models import Room, Message, UserChatPosition
from django.contrib.auth import get_user_model
from django.utils import timezone

User = get_user_model()

class Command(BaseCommand):
    help = '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ª–æ–≥–∏–∫–∏ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π'

    def handle(self, *args, **options):
        owner = User.objects.get(username='owner')

        # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É —á–∞—Ç—É
        for room_name in ['general', 'vip']:
            room = Room.objects.get(name=room_name)
            position, created = UserChatPosition.objects.get_or_create(
                user=owner,
                room=room
            )

            self.stdout.write(f"\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ß–ê–¢–ê '{room_name.upper()}':")
            self.stdout.write(f"‚îú‚îÄ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ: {room.messages.count()}")
            self.stdout.write(f"‚îú‚îÄ –ü–æ–∑–∏—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω–∞: {'–î–ê' if not created else '–¢–û–õ–¨–ö–û –ß–¢–û'}")
            self.stdout.write(f"‚îú‚îÄ last_read_at: {position.last_read_at}")
            self.stdout.write(f"‚îú‚îÄ last_message_id: {position.last_message_id}")
            self.stdout.write(f"‚îú‚îÄ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π unread_count: {position.unread_count}")

            # –í—ã—á–∏—Å–ª—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
            actual_unread = position.get_unread_messages_count()
            self.stdout.write(f"‚îú‚îÄ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π unread_count: {actual_unread}")

            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            first_unread = position.get_first_unread_message()
            if first_unread:
                self.stdout.write(f"‚îú‚îÄ –ü–µ—Ä–≤–æ–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ: {first_unread.content[:50]}...")
                self.stdout.write(f"‚îú‚îÄ –°–æ–∑–¥–∞–Ω–æ: {first_unread.created_at}")
            else:
                self.stdout.write(f"‚îú‚îÄ –ü–µ—Ä–≤–æ–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ: –ù–ï–¢")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è
            last_messages = room.messages.order_by('-created_at')[:3]
            self.stdout.write(f"‚îî‚îÄ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è:")
            for i, msg in enumerate(last_messages, 1):
                is_read = "‚úÖ –ü–†–û–ß–ò–¢–ê–ù–û" if position.last_read_at and msg.created_at <= position.last_read_at else "‚ùå –ù–ï–ü–†–û–ß–ò–¢–ê–ù–û"
                self.stdout.write(f"   {i}. {msg.content[:30]}... | {msg.created_at} | {is_read}")
