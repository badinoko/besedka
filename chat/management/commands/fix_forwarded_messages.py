from django.core.management.base import BaseCommand
from chat.models import Message

class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'

    def add_arguments(self, parser):
        parser.add_argument(
            '--confirm',
            action='store_true',
            help='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞',
        )

    def handle(self, *args, **options):
        # –ù–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ –Ω–æ –ù–ï –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞
        wrong_forwarded = Message.objects.filter(
            is_forwarded=True
        ).exclude(
            content__startswith='üì§ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ ¬´'
        ).exclude(
            content__startswith='–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ ¬´'
        )

        count = wrong_forwarded.count()
        self.stdout.write(f"–ù–∞–π–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–º–µ—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {count}")

        if count > 0:
            # –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
            for msg in wrong_forwarded[:5]:
                self.stdout.write(f"ID: {msg.id} - '{msg.content[:50]}...'")

                        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            if options['confirm']:
                confirm_action = True
            else:
                confirm = input(f"–ò—Å–ø—Ä–∞–≤–∏—Ç—å {count} —Å–æ–æ–±—â–µ–Ω–∏–π? (yes/no): ")
                confirm_action = confirm.lower() == 'yes'

            if confirm_action:
                # –ò—Å–ø—Ä–∞–≤–∏—Ç—å - —É–±—Ä–∞—Ç—å —Ñ–ª–∞–≥ is_forwarded –∏ –æ—á–∏—Å—Ç–∏—Ç—å original_message_id
                updated = wrong_forwarded.update(
                    is_forwarded=False,
                    original_message_id=None
                )

                self.stdout.write(self.style.SUCCESS(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {updated} —Å–æ–æ–±—â–µ–Ω–∏–π"))
            else:
                self.stdout.write("–û—Ç–º–µ–Ω–µ–Ω–æ")
        else:
            self.stdout.write("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
