from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
from chat.models import Room, Message
from users.models import User


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫'

    def add_arguments(self, parser):
        parser.add_argument(
            '--clear',
            action='store_true',
            help='–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö',
        )
        parser.add_argument(
            '--room',
            type=str,
            default='general',
            help='–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã (general/vip)',
        )

    def handle(self, *args, **options):
        room_name = options['room']

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            owner = User.objects.get(username='owner')
            test_user = User.objects.get(username='test_user')
        except User.DoesNotExist:
            self.stdout.write(
                self.style.ERROR('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ owner –∏–ª–∏ test_user')
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–æ–º–Ω–∞—Ç—É
        room, created = Room.objects.get_or_create(name=room_name)

        if options['clear']:
            deleted_count = Message.objects.filter(room=room).count()
            Message.objects.filter(room=room).delete()
            self.stdout.write(
                self.style.WARNING(f'–£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π')
            )

        # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        now = timezone.now()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_dates = [
            # –°–µ–≥–æ–¥–Ω—è - —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è
            (now - timedelta(hours=2), owner, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? (2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥)"),
            (now - timedelta(hours=1), test_user, "–û—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è –∫–∞–∫? (1 —á–∞—Å –Ω–∞–∑–∞–¥)"),
            (now - timedelta(minutes=30), owner, "–¢–æ–∂–µ —Ö–æ—Ä–æ—à–æ, —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º (30 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥)"),

            # –í—á–µ—Ä–∞
            (now - timedelta(days=1, hours=10), test_user, "–í—á–µ—Ä–∞ –±—ã–ª–∞ –æ—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞!"),
            (now - timedelta(days=1, hours=15), owner, "–î–∞, —è —Ç–æ–∂–µ –∑–∞–º–µ—Ç–∏–ª. –•–æ—Ä–æ—à–æ –ø–æ–≥—É–ª—è–ª–∏"),

            # –ü–æ–∑–∞–≤—á–µ—Ä–∞
            (now - timedelta(days=2, hours=9), owner, "–ü–æ–∑–∞–≤—á–µ—Ä–∞ –∫—É–ø–∏–ª –Ω–æ–≤—ã–µ —Å–µ–º–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ"),
            (now - timedelta(days=2, hours=14), test_user, "–ö–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ? –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"),

            # 3 –¥–Ω—è –Ω–∞–∑–∞–¥
            (now - timedelta(days=3, hours=12), test_user, "3 –¥–Ω—è –Ω–∞–∑–∞–¥ –Ω–∞—á–∞–ª –Ω–æ–≤—ã–π –≥—Ä–æ–≤-—Ä–µ–ø–æ—Ä—Ç"),

            # 4 –¥–Ω—è –Ω–∞–∑–∞–¥
            (now - timedelta(days=4, hours=8), owner, "4 –¥–Ω—è –Ω–∞–∑–∞–¥ –æ–±–Ω–æ–≤–∏–ª–∏ –¥–∏–∑–∞–π–Ω —Å–∞–π—Ç–∞"),

            # 5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
            (now - timedelta(days=5, hours=16), test_user, "5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –Ω–∞—à–µ–ª –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç —É–¥–æ–±—Ä–µ–Ω–∏—è"),

            # –ù–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥
            (now - timedelta(days=7, hours=11), owner, "–ù–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —á–∞—Ç–∞"),
            (now - timedelta(days=7, hours=20), test_user, "–î–∞, –ø–æ–º–Ω—é! –û—á–µ–Ω—å —É–¥–æ–±–Ω–∞—è —à—Ç—É–∫–∞"),

            # 10 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
            (now - timedelta(days=10, hours=13), owner, "10 –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –±—ã–ª–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –ø–æ —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤—É"),

            # 2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥
            (now - timedelta(days=14, hours=15), test_user, "2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥ –ø–æ–ª—É—á–∏–ª –æ—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–∂–∞–π!"),

            # –ú–µ—Å—è—Ü –Ω–∞–∑–∞–¥
            (now - timedelta(days=30, hours=12), owner, "–ú–µ—Å—è—Ü –Ω–∞–∑–∞–¥ –Ω–∞—á–∞–ª–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç"),
        ]

        created_messages = []

        for date, author, content in test_dates:
            message = Message.objects.create(
                room=room,
                author=author,
                content=content,
                created_at=date
            )
            created_messages.append(message)

        self.stdout.write(
            self.style.SUCCESS(
                f'–°–æ–∑–¥–∞–Ω–æ {len(created_messages)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–º–Ω–∞—Ç–µ "{room_name}"'
            )
        )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        self.stdout.write('\nüìÖ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:')
        for msg in created_messages:
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            diff = now - msg.created_at
            days = diff.days
            hours = diff.seconds // 3600

            if days == 0:
                time_str = f"{hours}—á –Ω–∞–∑–∞–¥"
            elif days == 1:
                time_str = "–≤—á–µ—Ä–∞"
            elif days <= 6:
                time_str = f"{days}–¥ –Ω–∞–∑–∞–¥"
            elif days <= 13:
                time_str = "–Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥"
            else:
                time_str = f"{days}–¥ –Ω–∞–∑–∞–¥"

            self.stdout.write(
                f"  ‚Ä¢ {msg.author.display_name}: {msg.content[:50]}... ({time_str})"
            )

        self.stdout.write(
            self.style.SUCCESS(
                f'\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–∞—Ç http://127.0.0.1:8001/chat/{room_name}/'
            )
        )
