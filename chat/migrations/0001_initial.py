# Generated by Django 4.2.21 on 2025-05-28 04:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(
                        default=False,
                        help_text="Чат между двумя пользователями",
                        verbose_name="Приватный чат",
                    ),
                ),
                (
                    "is_discussion",
                    models.BooleanField(
                        default=False,
                        help_text="Открытое обсуждение для сообщества",
                        verbose_name="Групповое обсуждение",
                    ),
                ),
                (
                    "muted",
                    models.BooleanField(
                        default=False,
                        help_text="Пользователи не будут получать уведомления",
                        verbose_name="Отключить уведомления",
                    ),
                ),
                (
                    "history_cleared",
                    models.BooleanField(
                        default=False,
                        help_text="Отображать сообщение об очистке истории",
                        verbose_name="История очищена",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="Изменено"),
                ),
                (
                    "connected_clients",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Пользователи онлайн в данный момент",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Подключенные пользователи",
                    ),
                ),
            ],
            options={
                "verbose_name": "Комната чата",
                "verbose_name_plural": "Комнаты чата",
                "ordering": ("-modified", "id"),
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название тега для категоризации",
                        max_length=124,
                        unique=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-дружественное название",
                        max_length=124,
                        unique=True,
                        verbose_name="Слаг",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Текст сообщения", verbose_name="Содержимое"
                    ),
                ),
                (
                    "unread",
                    models.BooleanField(
                        default=True,
                        help_text="Сообщение еще не прочитано",
                        verbose_name="Непрочитанное",
                    ),
                ),
                (
                    "is_edited",
                    models.BooleanField(
                        default=False,
                        help_text="Сообщение было отредактировано",
                        verbose_name="Отредактировано",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="Изменено"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        help_text="Пользователь, написавший сообщение",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Сообщение, на которое отвечает данное",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="chat.message",
                        verbose_name="Ответ на сообщение",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        help_text="Комната, в которой написано сообщение",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_messages",
                        to="chat.room",
                        verbose_name="Комната",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сообщение",
                "verbose_name_plural": "Сообщения",
                "ordering": ("-created",),
            },
        ),
        migrations.CreateModel(
            name="DiscussionRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "headline",
                    models.CharField(
                        help_text="Основная тема обсуждения",
                        max_length=220,
                        unique=True,
                        verbose_name="Заголовок",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Подробное описание темы обсуждения",
                        null=True,
                        verbose_name="Описание",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-дружественное название",
                        max_length=250,
                        unique=True,
                        verbose_name="Слаг",
                    ),
                ),
                (
                    "messages_dump",
                    models.TextField(
                        blank=True,
                        help_text="Содержимое всех сообщений для поиска",
                        null=True,
                        verbose_name="Дамп сообщений",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="Изменено"),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Пользователи, участвующие в обсуждении",
                        related_name="discussion_members",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Участники",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Пользователь, создавший обсуждение",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
                (
                    "room",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discussion_room",
                        to="chat.room",
                        verbose_name="Комната",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Теги для категоризации обсуждения",
                        to="chat.tag",
                        verbose_name="Теги",
                    ),
                ),
            ],
            options={
                "verbose_name": "Групповое обсуждение",
                "verbose_name_plural": "Групповые обсуждения",
                "ordering": ("-modified",),
            },
        ),
        migrations.CreateModel(
            name="Thread",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "room",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_thread",
                        to="chat.room",
                        verbose_name="Комната",
                    ),
                ),
                (
                    "user1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="chat_thread_first",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Первый пользователь",
                    ),
                ),
                (
                    "user2",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="chat_thread_second",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Второй пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Приватный чат",
                "verbose_name_plural": "Приватные чаты",
                "ordering": ("-room__modified",),
                "unique_together": {("user1", "user2")},
            },
        ),
    ]
