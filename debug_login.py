#!/usr/bin/env python
"""
–ü–û–î–†–û–ë–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–û–†–ú–´ –í–•–û–î–ê
"""

import requests
import re

def debug_login_form():
    """–ü–æ–¥—Ä–æ–±–Ω–æ –∏—Å—Å–ª–µ–¥—É–µ—Ç —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞"""

    session = requests.Session()

    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞...")

    try:
        response = session.get("http://127.0.0.1:8001/accounts/login/")

        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return

        content = response.text
        print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–∞, —Ä–∞–∑–º–µ—Ä: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")

        # –ò—â–µ–º —Ñ–æ—Ä–º—É
        form_match = re.search(r'<form[^>]*action="([^"]*)"[^>]*method="([^"]*)"[^>]*>(.*?)</form>', content, re.DOTALL | re.IGNORECASE)

        if not form_match:
            print("‚ùå –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        action = form_match.group(1)
        method = form_match.group(2)
        form_content = form_match.group(3)

        print(f"üìù –§–æ—Ä–º–∞ –Ω–∞–π–¥–µ–Ω–∞:")
        print(f"   Action: {action}")
        print(f"   Method: {method}")

        # –ò—â–µ–º –≤—Å–µ –ø–æ–ª—è input
        input_fields = re.findall(r'<input[^>]*name="([^"]*)"[^>]*(?:type="([^"]*)")?[^>]*>', form_content, re.IGNORECASE)

        print(f"\nüîß –ü–æ–ª—è —Ñ–æ—Ä–º—ã:")
        for name, input_type in input_fields:
            print(f"   {name}: {input_type or 'text'}")

        # –ò—â–µ–º CSRF —Ç–æ–∫–µ–Ω
        csrf_match = re.search(r'name="csrfmiddlewaretoken"[^>]*value="([^"]*)"', content)
        if csrf_match:
            csrf_token = csrf_match.group(1)
            print(f"\nüîë CSRF —Ç–æ–∫–µ–Ω: {csrf_token[:20]}...")
        else:
            print("\n‚ùå CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        test_variants = [
            {'login': 'owner', 'password': 'testpass123'},  # allauth –æ–±—ã—á–Ω–æ
            {'username': 'owner', 'password': 'testpass123'},  # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Django
            {'email': 'owner@test.com', 'password': 'testpass123'},  # –ø–æ email
        ]

        for i, variant in enumerate(test_variants, 1):
            print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –≤–∞—Ä–∏–∞–Ω—Ç {i}: {list(variant.keys())}")

            # –î–æ–±–∞–≤–ª—è–µ–º CSRF —Ç–æ–∫–µ–Ω
            login_data = variant.copy()
            login_data['csrfmiddlewaretoken'] = csrf_token

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
            login_response = session.post(
                f"http://127.0.0.1:8001{action}" if action.startswith('/') else f"http://127.0.0.1:8001/accounts/login/",
                data=login_data,
                headers={'Referer': 'http://127.0.0.1:8001/accounts/login/'},
                timeout=10,
                allow_redirects=False
            )

            print(f"   –°—Ç–∞—Ç—É—Å: {login_response.status_code}")

            if login_response.status_code == 302:
                redirect_url = login_response.headers.get('Location', '–Ω–µ —É–∫–∞–∑–∞–Ω')
                print(f"   ‚úÖ –£–°–ü–ï–•! –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {redirect_url}")
                return True
            elif login_response.status_code == 200:
                print("   ‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ (–æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)")
                # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
                if 'errorlist' in login_response.text.lower():
                    print("   üí° –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {login_response.status_code}")

        return False

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–û–†–ú–´ –í–•–û–î–ê")
    print("=" * 60)

    success = debug_login_form()

    if success:
        print("\nüéâ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –†–ê–ë–û–¢–ê–ï–¢!")
    else:
        print("\nüí• –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("- –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ allauth")
        print("- CSRF –ø—Ä–æ–±–ª–µ–º—ã")
        print("- –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
