#!/usr/bin/env python
"""
üöÄ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ê–ì–ê–ó–ò–ù–ê

–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
1. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É NONE NONE
2. üì¶ –ù–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É 10 —Å–∏–¥–±–∞–Ω–∫–∞–º–∏
3. üåø –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ—Ä—Ç–∞ –≤ —Å–∏–¥–±–∞–Ω–∫–∏
4. üé≠ –≠–º—É–ª–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
5. üìä –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏ –∏ –æ—Å—Ç–∞—Ç–∫–∏

–ó–∞–ø—É—Å–∫: python manage.py full_store_test
"""

from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction, models
from magicbeans_store.models import SeedBank, Strain, StockItem
import random

class Command(BaseCommand):
    help = 'üöÄ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º'

    def add_arguments(self, parser):
        parser.add_argument('--quick', action='store_true', help='–ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫')

    def handle(self, *args, **options):
        print("üöÄ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ê–ì–ê–ó–ò–ù–ê")
        print("=" * 60)

        # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º NONE NONE
        self.fix_none_none_issue()

        # 2. –ù–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã–º–∏
        self.populate_database()

        # 3. –≠–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        self.emulate_admin_work()

        # 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.show_final_stats()

    def fix_none_none_issue(self):
        """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É NONE NONE –≤ –¥—Ä–æ–ø–¥–∞—É–Ω–∞—Ö"""
        print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ 'NONE NONE'")
        print("-" * 40)

        User = get_user_model()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∏–º–µ–Ω
        users_without_names = User.objects.filter(
            models.Q(name__isnull=True) | models.Q(name='') | models.Q(name__startswith='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        )

        fixed_users = 0
        for user in users_without_names:
            if user.username == 'clean_admin':
                user.name = '–ß–∏—Å—Ç—ã–π –¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
            elif user.role == 'owner':
                user.name = '–í–ª–∞–¥–µ–ª–µ—Ü –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã'
            elif user.role == 'admin':
                user.name = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã'
            elif user.role == 'store_owner':
                user.name = '–í–ª–∞–¥–µ–ª–µ—Ü –ú–∞–≥–∞–∑–∏–Ω–∞'
            elif user.role == 'store_admin':
                user.name = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ú–∞–≥–∞–∑–∏–Ω–∞'
            else:
                user.name = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username.title()}'

            user.save()
            fixed_users += 1
            print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {user.username} -> {user.name}")

        if fixed_users == 0:
            print("   ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞")
        else:
            print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {fixed_users}")

    def populate_database(self):
        """–ù–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑—É 10 —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å–∏–¥–±–∞–Ω–∫–∞–º–∏"""
        print("\nüì¶ –ù–ê–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•")
        print("-" * 40)

        # 10 —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∏–¥–±–∞–Ω–∫–æ–≤
        seedbanks_data = [
            {
                'name': 'Barney\'s Farm',
                'description': '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –≥–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –≤ 1980 –≥–æ–¥—É. –ò–∑–≤–µ—Å—Ç–µ–Ω —Å–æ—Ä—Ç–∞–º–∏ LSD, Pineapple Express, Tangerine Dream.',
                'website': 'https://www.barneysfarm.com',
                'country': 'Netherlands'
            },
            {
                'name': 'Sweet Seeds',
                'description': '–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∞–≤—Ç–æ—Ü–≤–µ—Ç—É—â–∏—Ö –∏ —Ñ–µ–º–∏–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ–º–µ–Ω–∞—Ö. Dark Devil, Cream Caramel.',
                'website': 'https://www.sweetseeds.es',
                'country': 'Spain'
            },
            {
                'name': 'Royal Queen Seeds',
                'description': '–û–¥–∏–Ω –∏–∑ –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö —Å–∏–¥–±–∞–Ω–∫–æ–≤. White Widow, Amnesia Haze, Northern Light.',
                'website': 'https://www.royalqueenseeds.com',
                'country': 'Netherlands'
            },
            {
                'name': 'Sensi Seeds',
                'description': '–°—Ç–∞—Ä–µ–π—à–∏–π —Å–∏–¥–±–∞–Ω–∫ –≤ –º–∏—Ä–µ, –æ—Å–Ω–æ–≤–∞–Ω –≤ 1985. Skunk #1, Northern Lights, Big Bud.',
                'website': 'https://sensiseeds.com',
                'country': 'Netherlands'
            },
            {
                'name': 'Dinafem Seeds',
                'description': '–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫ —Å –æ—Ç–ª–∏—á–Ω–æ–π –≥–µ–Ω–µ—Ç–∏–∫–æ–π. Moby Dick, White Widow, Critical+.',
                'website': 'https://www.dinafem.org',
                'country': 'Spain'
            },
            {
                'name': 'Fast Buds',
                'description': '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∞–≤—Ç–æ—Ü–≤–µ—Ç–∞—Ö. Gorilla Glue Auto, GSC Auto.',
                'website': 'https://fastbuds.com',
                'country': 'USA'
            },
            {
                'name': 'Greenhouse Seeds',
                'description': '–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –Ω–∞–≥—Ä–∞–¥ –Ω–∞ Cannabis Cup. White Rhino, Super Silver Haze.',
                'website': 'https://greenhouseseeds.nl',
                'country': 'Netherlands'
            },
            {
                'name': 'Humboldt Seed Organization',
                'description': '–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–π—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ç–∏–∫–æ–π –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–π –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–∏. Blueberry Headband.',
                'website': 'https://humboldtseedorganization.com',
                'country': 'USA'
            },
            {
                'name': 'DNA Genetics',
                'description': '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫, —Å–æ–∑–¥–∞—Ç–µ–ª–∏ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã—Ö —Å–æ—Ä—Ç–æ–≤ LA Confidential, Chocolope.',
                'website': 'https://dnagenetics.com',
                'country': 'USA'
            },
            {
                'name': 'Pyramid Seeds',
                'description': '–ò—Å–ø–∞–Ω—Å–∫–∏–π —Å–∏–¥–±–∞–Ω–∫ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–µ–º–µ–Ω–∞–º–∏. Tutankhamon, Anesthesia.',
                'website': 'https://pyramidseeds.com',
                'country': 'Spain'
            }
        ]

        with transaction.atomic():
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
            StockItem.objects.all().delete()
            Strain.objects.all().delete()
            SeedBank.objects.all().delete()

            created_seedbanks = []
            for data in seedbanks_data:
                seedbank = SeedBank.objects.create(
                    name=data['name'],
                    description=data['description'],
                    website=data['website'],
                    is_active=True
                )
                created_seedbanks.append(seedbank)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω: {seedbank.name}")

            print(f"   üìä –°–æ–∑–¥–∞–Ω–æ —Å–∏–¥–±–∞–Ω–∫–æ–≤: {len(created_seedbanks)}")

            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ä—Ç–∞ –≤ –∫–∞–∂–¥—ã–π —Å–∏–¥–±–∞–Ω–∫
            self.add_strains_to_seedbanks(created_seedbanks)

    def add_strains_to_seedbanks(self, seedbanks):
        """–î–æ–±–∞–≤–ª—è–µ–º –ø–æ 2-3 —Å–æ—Ä—Ç–∞ –≤ –∫–∞–∂–¥—ã–π —Å–∏–¥–±–∞–Ω–∫"""
        print("\nüåø –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–û–†–¢–û–í")
        print("-" * 40)

        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–æ—Ä—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–¥–±–∞–Ω–∫–∞
        strains_data = {
            'Barney\'s Farm': [
                {'name': 'LSD', 'type': 'photoperiod', 'genetics': 'indica_dominant'},
                {'name': 'Pineapple Express', 'type': 'photoperiod', 'genetics': 'hybrid'},
                {'name': 'Tangerine Dream', 'type': 'autoflower', 'genetics': 'sativa_dominant'}
            ],
            'Sweet Seeds': [
                {'name': 'Dark Devil Auto', 'type': 'autoflower', 'genetics': 'indica_dominant'},
                {'name': 'Cream Caramel', 'type': 'photoperiod', 'genetics': 'indica_dominant'}
            ],
            'Royal Queen Seeds': [
                {'name': 'White Widow', 'type': 'photoperiod', 'genetics': 'hybrid'},
                {'name': 'Amnesia Haze', 'type': 'photoperiod', 'genetics': 'sativa_dominant'},
                {'name': 'Northern Light', 'type': 'photoperiod', 'genetics': 'indica_dominant'}
            ],
            'Sensi Seeds': [
                {'name': 'Skunk #1', 'type': 'photoperiod', 'genetics': 'hybrid'},
                {'name': 'Northern Lights', 'type': 'photoperiod', 'genetics': 'indica_dominant'}
            ],
            'Dinafem Seeds': [
                {'name': 'Moby Dick', 'type': 'photoperiod', 'genetics': 'sativa_dominant'},
                {'name': 'Critical+', 'type': 'photoperiod', 'genetics': 'indica_dominant'}
            ],
            'Fast Buds': [
                {'name': 'Gorilla Glue Auto', 'type': 'autoflower', 'genetics': 'hybrid'},
                {'name': 'GSC Auto', 'type': 'autoflower', 'genetics': 'hybrid'}
            ],
            'Greenhouse Seeds': [
                {'name': 'White Rhino', 'type': 'photoperiod', 'genetics': 'indica_dominant'},
                {'name': 'Super Silver Haze', 'type': 'photoperiod', 'genetics': 'sativa_dominant'}
            ],
            'Humboldt Seed Organization': [
                {'name': 'Blueberry Headband', 'type': 'photoperiod', 'genetics': 'hybrid'}
            ],
            'DNA Genetics': [
                {'name': 'LA Confidential', 'type': 'photoperiod', 'genetics': 'indica_dominant'},
                {'name': 'Chocolope', 'type': 'photoperiod', 'genetics': 'sativa_dominant'}
            ],
            'Pyramid Seeds': [
                {'name': 'Tutankhamon', 'type': 'photoperiod', 'genetics': 'sativa_dominant'},
                {'name': 'Anesthesia', 'type': 'photoperiod', 'genetics': 'indica_dominant'}
            ]
        }

        created_strains = []
        for seedbank in seedbanks:
            if seedbank.name in strains_data:
                for strain_data in strains_data[seedbank.name]:
                    strain = Strain.objects.create(
                        seedbank=seedbank,
                        name=strain_data['name'],
                        strain_type=strain_data['type'],
                        genetics=strain_data['genetics'],
                        description=f"–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Å–æ—Ä—Ç –æ—Ç {seedbank.name}",
                        is_active=True
                    )
                    created_strains.append(strain)
                    print(f"   ‚úÖ {seedbank.name}: {strain.name} ({strain.get_strain_type_display()})")

        print(f"   üìä –°–æ–∑–¥–∞–Ω–æ —Å–æ—Ä—Ç–æ–≤: {len(created_strains)}")
        return created_strains

    def emulate_admin_work(self):
        """–≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        print("\nüé≠ –≠–ú–£–õ–Ø–¶–ò–Ø –†–ê–ë–û–¢–´ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
        print("-" * 40)

        # 1. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–¥–±–∞–Ω–∫–æ–≤
        self.emulate_seedbank_operations()

        # 2. –†–∞–±–æ—Ç–∞ —Å —Å–æ—Ä—Ç–∞–º–∏
        self.emulate_strain_operations()

        # 3. –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        self.emulate_bulk_operations()

    def emulate_seedbank_operations(self):
        """–≠–º—É–ª–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–∏–¥–±–∞–Ω–∫–∞–º–∏"""
        print("\nüì¶ –û–ü–ï–†–ê–¶–ò–ò –° –°–ò–î–ë–ê–ù–ö–ê–ú–ò:")

        seedbanks = list(SeedBank.objects.all())

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∏–¥–±–∞–Ω–∫
        new_seedbank = SeedBank.objects.create(
            name='Test Seedbank',
            description='–¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–¥–±–∞–Ω–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏',
            website='https://test.com',
            is_active=True
        )
        print(f"   ‚ûï –î–û–ë–ê–í–õ–ï–ù: {new_seedbank.name}")

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        if seedbanks:
            edit_bank = seedbanks[0]
            old_description = edit_bank.description
            edit_bank.description = f"{old_description} [–û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–û]"
            edit_bank.save()
            print(f"   ‚úèÔ∏è –û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù: {edit_bank.name}")

        # –°–∫—Ä—ã–≤–∞–µ–º –æ–¥–∏–Ω —Å–∏–¥–±–∞–Ω–∫
        if len(seedbanks) > 1:
            hide_bank = seedbanks[1]
            hide_bank.is_active = False
            hide_bank.save()
            print(f"   üëÅÔ∏è –°–ö–†–´–¢: {hide_bank.name}")

        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–¥–±–∞–Ω–∫
        new_seedbank.delete()
        print(f"   üóëÔ∏è –£–î–ê–õ–ï–ù: Test Seedbank")

    def emulate_strain_operations(self):
        """–≠–º—É–ª–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–æ—Ä—Ç–∞–º–∏"""
        print("\nüåø –û–ü–ï–†–ê–¶–ò–ò –° –°–û–†–¢–ê–ú–ò:")

        strains = list(Strain.objects.all())

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–æ—Ä—Ç
        if SeedBank.objects.exists():
            first_bank = SeedBank.objects.first()
            new_strain = Strain.objects.create(
                seedbank=first_bank,
                name='Test Strain',
                strain_type='autoflower',
                genetics='hybrid',
                description='–¢–µ—Å—Ç–æ–≤—ã–π —Å–æ—Ä—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏',
                is_active=True
            )
            print(f"   ‚ûï –î–û–ë–ê–í–õ–ï–ù: {new_strain.name} ({first_bank.name})")

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–æ—Ä—Ç
        if strains:
            edit_strain = strains[0]
            old_description = edit_strain.description
            edit_strain.description = f"{old_description} [–û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–û]"
            edit_strain.save()
            print(f"   ‚úèÔ∏è –û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù: {edit_strain.name}")

        # –°–∫—Ä—ã–≤–∞–µ–º —Å–æ—Ä—Ç
        if len(strains) > 1:
            hide_strain = strains[1]
            hide_strain.is_active = False
            hide_strain.save()
            print(f"   üëÅÔ∏è –°–ö–†–´–¢: {hide_strain.name}")

        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–æ—Ä—Ç (–µ—Å–ª–∏ —Å–æ–∑–¥–∞–ª–∏)
        if 'new_strain' in locals():
            new_strain.delete()
            print(f"   üóëÔ∏è –£–î–ê–õ–ï–ù: Test Strain")

    def emulate_bulk_operations(self):
        """–≠–º—É–ª–∏—Ä—É–µ–º –º–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        print("\nüìä –ú–ê–°–°–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò:")

        # –ú–∞—Å—Å–æ–≤–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —Å–æ—Ä—Ç–æ–≤
        strains_to_hide = Strain.objects.filter(is_active=True)[:2]
        for strain in strains_to_hide:
            strain.is_active = False
            strain.save()
        print(f"   üëÅÔ∏è –ú–ê–°–°–û–í–û –°–ö–†–´–¢–û —Å–æ—Ä—Ç–æ–≤: {len(strains_to_hide)}")

        # –ú–∞—Å—Å–æ–≤–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        hidden_strains = Strain.objects.filter(is_active=False)
        for strain in hidden_strains:
            strain.is_active = True
            strain.save()
        print(f"   üëÅÔ∏è –ú–ê–°–°–û–í–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û —Å–æ—Ä—Ç–æ–≤: {len(hidden_strains)}")

    def show_final_stats(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
        print("-" * 40)

        seedbank_count = SeedBank.objects.count()
        active_seedbanks = SeedBank.objects.filter(is_active=True).count()

        strain_count = Strain.objects.count()
        active_strains = Strain.objects.filter(is_active=True).count()

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Å–æ—Ä—Ç–æ–≤
        auto_count = Strain.objects.filter(strain_type='autoflower').count()
        photo_count = Strain.objects.filter(strain_type='photoperiod').count()

        print(f"üå± –°–∏–¥–±–∞–Ω–∫–æ–≤: {seedbank_count} (–∞–∫—Ç–∏–≤–Ω—ã—Ö: {active_seedbanks})")
        print(f"üåø –°–æ—Ä—Ç–æ–≤: {strain_count} (–∞–∫—Ç–∏–≤–Ω—ã—Ö: {active_strains})")
        print(f"   üìä –ê–≤—Ç–æ—Ü–≤–µ—Ç—ã: {auto_count}")
        print(f"   üìä –§–æ—Ç–æ–ø–µ—Ä–∏–æ–¥–Ω—ã–µ: {photo_count}")

        print(f"\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"üîó –ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/store_admin/")
        print(f"üë§ –õ–æ–≥–∏–Ω: clean_admin / clean123")
