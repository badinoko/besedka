#!/usr/bin/env python
"""
üßπ –ú–û–©–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ò –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù–ö–ò

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
1. –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É "NONE NONE" —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
2. –£–¥–∞–ª—è–µ—Ç –í–°–ï —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
3. –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
4. –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –í–°–ï –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∫–∏
5. –°–∫—Ä—ã–≤–∞–µ—Ç/–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã
6. –£–¥–∞–ª—è–µ—Ç –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã

–ó–∞–ø—É—Å–∫: python manage.py power_admin_cleanup
"""

import webbrowser
import time
import random
from datetime import datetime
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction
from magicbeans_store.models import SeedBank, Strain, StockItem

class Command(BaseCommand):
    help = 'üßπ –ú–æ—â–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∫–∏'

    def add_arguments(self, parser):
        parser.add_argument('--clean-only', action='store_true', help='–¢–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∫–∞, –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
        parser.add_argument('--test-only', action='store_true', help='–¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏')

    def handle(self, *args, **options):
        base_url = 'http://127.0.0.1:8000'

        print("üßπ –ú–û–©–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ò –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù–ö–ò")
        print("=" * 60)

        # –§–ê–ó–ê 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not options.get('test_only'):
            self.fix_user_display()

        # –§–ê–ó–ê 2: –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not options.get('test_only'):
            self.cleanup_test_data()

        # –§–ê–ó–ê 3: –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        if not options.get('clean_only'):
            self.full_admin_testing(base_url)

    def fix_user_display(self):
        """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã NONE NONE –≤ –∞–¥–º–∏–Ω–∫–µ"""
        print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô (NONE NONE)")
        print("-" * 40)

        User = get_user_model()

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_fixed = 0
        for user in User.objects.all():
            if not user.name or user.name.strip() == "":
                if user.username == 'test_store_admin':
                    user.name = '–¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                elif user.username == 'demo_user':
                    user.name = '–î–µ–º–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                elif user.username == 'auto_admin':
                    user.name = '–ê–≤—Ç–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                else:
                    user.name = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username}'

                user.save()
                users_fixed += 1
                print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {user.username} -> {user.name}")

        if users_fixed == 0:
            print("   ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏–º–µ–Ω–∞")
        else:
            print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_fixed}")

    def cleanup_test_data(self):
        """–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        print("\nüóëÔ∏è –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
        print("-" * 40)

        # –ü–æ–¥—Å—á–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        stock_count = StockItem.objects.count()
        strain_count = Strain.objects.count()
        seedbank_count = SeedBank.objects.count()

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤:")
        print(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: {stock_count}")
        print(f"   üåø –°–æ—Ä—Ç–æ–≤: {strain_count}")
        print(f"   üå± –°–∏–¥–±–∞–Ω–∫–æ–≤: {seedbank_count}")

        if stock_count + strain_count + seedbank_count == 0:
            print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –ø—É—Å—Ç–∞")
            return

        with transaction.atomic():
            # –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ foreign keys)
            deleted_stock = StockItem.objects.all().delete()[0]
            deleted_strains = Strain.objects.all().delete()[0]
            deleted_seedbanks = SeedBank.objects.all().delete()[0]

        print(f"\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–æ:")
        print(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤: {deleted_stock}")
        print(f"   üåø –°–æ—Ä—Ç–æ–≤: {deleted_strains}")
        print(f"   üå± –°–∏–¥–±–∞–Ω–∫–æ–≤: {deleted_seedbanks}")
        print("   ‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

    def full_admin_testing(self, base_url):
        """–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∞–¥–º–∏–Ω–∫–∏"""
        print("\nüöÄ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù–ö–ò")
        print("-" * 40)

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_user = self.prepare_admin()

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∫—É
        print("\nüåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∫—É...")
        webbrowser.open(f"{base_url}/store_admin/")
        time.sleep(2)

        timestamp = datetime.now().strftime("%H%M")

        # –≠–¢–ê–ü 1: –ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
        print(f"\nüèóÔ∏è –≠–¢–ê–ü 1: –ú–ê–°–°–û–í–û–ï –°–û–ó–î–ê–ù–ò–ï")
        seedbanks = self.create_test_seedbanks(base_url, timestamp)
        strains = self.create_test_strains(base_url, timestamp, seedbanks)
        stock_items = self.create_test_stock(base_url, timestamp, strains)

        # –≠–¢–ê–ü 2: –û–ø–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        print(f"\nüëÅÔ∏è –≠–¢–ê–ü 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ò–î–ò–ú–û–°–¢–ò")
        self.test_visibility_operations(base_url, seedbanks, strains, stock_items)

        # –≠–¢–ê–ü 3: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
        print(f"\n‚úèÔ∏è –≠–¢–ê–ü 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø")
        self.test_edit_operations(base_url, seedbanks, strains, stock_items)

        # –≠–¢–ê–ü 4: –£–¥–∞–ª–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        print(f"\nüóëÔ∏è –≠–¢–ê–ü 4: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–î–ê–õ–ï–ù–ò–Ø")
        self.test_delete_operations(base_url, seedbanks, strains, stock_items)

        # –§–ò–ù–ê–õ
        print(f"\nüéâ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 60)
        self.show_final_statistics()

    def prepare_admin(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        User = get_user_model()
        user, created = User.objects.get_or_create(
            username='power_admin',
            defaults={
                'name': '–ú–æ—â–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                'role': 'store_admin',
                'is_staff': True,
                'is_active': True,
                'telegram_id': f"power_{datetime.now().strftime('%H%M%S')}"
            }
        )
        user.set_password('power123')
        user.save()

        print(f"‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: power_admin / power123")
        return user

    def create_test_seedbanks(self, base_url, timestamp):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∏–¥–±–∞–Ω–∫–æ–≤"""
        print("üå± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∏–¥–±–∞–Ω–∫–æ–≤...")

        seedbank_names = [
            f"PowerSeeds_{timestamp}",
            f"EliteGenetics_{timestamp}",
            f"MegaBank_{timestamp}",
            f"TestSeeds_{timestamp}",
            f"RandomBank_{timestamp}"
        ]

        seedbanks = []
        for i, name in enumerate(seedbank_names):
            seedbank = SeedBank.objects.create(
                name=name,
                description=f"–¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–¥–±–∞–Ω–∫ {name} –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                website=f"https://{name.lower()}.com",
                is_active=True
            )
            seedbanks.append(seedbank)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω: {seedbank.name}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/seedbank/")
        time.sleep(2)

        return seedbanks

    def create_test_strains(self, base_url, timestamp, seedbanks):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ—Ä—Ç–æ–≤"""
        print("\nüåø –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ—Ä—Ç–æ–≤...")

        strain_names = [
            "Power Kush", "Elite Haze", "Mega OG", "Test Widow", "Random Diesel",
            "Super Cheese", "Ultra Skunk", "Hyper Lemon", "Turbo Berry", "Max White"
        ]

        strain_types = ["regular", "feminized", "autoflowering"]
        thc_choices = ['15-20', '20-25', '10-15', '25-30']
        cbd_choices = ['0-0.5', '0.5-1', '1-1.5', '1.5-2']
        flowering_choices = ['8-10', '10-12', '6-8', '12+']

        strains = []
        for i, strain_name in enumerate(strain_names):
            seedbank = seedbanks[i % len(seedbanks)]
            strain = Strain.objects.create(
                name=f"{strain_name}_{timestamp}",
                seedbank=seedbank,
                strain_type=random.choice(strain_types),
                thc_content=random.choice(thc_choices),
                cbd_content=random.choice(cbd_choices),
                flowering_time=random.choice(flowering_choices),
                yield_indoor=f"{random.randint(400, 600)}–≥/–º¬≤",
                yield_outdoor=f"{random.randint(600, 1000)}–≥/—Ä–∞—Å—Ç–µ–Ω–∏–µ",
                description=f"–¢–µ—Å—Ç–æ–≤—ã–π —Å–æ—Ä—Ç {strain_name} –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                genetics=f"{strain_name} genetics",
                is_active=True
            )
            strains.append(strain)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω: {strain.name}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/strain/")
        time.sleep(2)

        return strains

    def create_test_stock(self, base_url, timestamp, strains):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ"""
        print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤...")

        pack_sizes = [1, 3, 5, 10]
        stock_items = []

        for strain in strains:
            # –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ä—Ç–∞ —Å–æ–∑–¥–∞–µ–º 2-3 —Ç–æ–≤–∞—Ä–∞ —Å —Ä–∞–∑–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–µ–º—è–Ω
            selected_sizes = random.sample(pack_sizes, random.randint(2, 3))

            for seeds_count in selected_sizes:
                stock_item = StockItem.objects.create(
                    strain=strain,
                    seeds_count=seeds_count,
                    price=random.randint(20, 150),
                    quantity=random.randint(10, 500),
                    is_active=True
                )
                stock_items.append(stock_item)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω: {seeds_count} —Å–µ–º—è–Ω {strain.name}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/stockitem/")
        time.sleep(2)

        return stock_items

    def test_visibility_operations(self, base_url, seedbanks, strains, stock_items):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –≤–∏–¥–∏–º–æ—Å—Ç–∏"""
        print("üëÅÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è/–ø–æ–∫–∞–∑–∞ –æ–±—ä–µ–∫—Ç–æ–≤...")

        # –°–∫—Ä—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
        hidden_seedbanks = random.sample(seedbanks, 2)
        hidden_strains = random.sample(strains, 3)
        hidden_stock = random.sample(stock_items, 5)

        for obj in hidden_seedbanks:
            obj.is_active = False
            obj.save()
            print(f"   üôà –°–∫—Ä—ã—Ç —Å–∏–¥–±–∞–Ω–∫: {obj.name}")

        for obj in hidden_strains:
            obj.is_active = False
            obj.save()
            print(f"   üôà –°–∫—Ä—ã—Ç —Å–æ—Ä—Ç: {obj.name}")

        for obj in hidden_stock:
            obj.is_active = False
            obj.save()
            print(f"   üôà –°–∫—Ä—ã—Ç —Ç–æ–≤–∞—Ä: {obj}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/seedbank/")
        time.sleep(1)
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/strain/")
        time.sleep(1)

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
        time.sleep(3)
        print("   üëÅÔ∏è –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å...")

        for obj in hidden_seedbanks + hidden_strains + hidden_stock:
            obj.is_active = True
            obj.save()

        print("   ‚úÖ –í—Å–µ –æ–±—ä–µ–∫—Ç—ã —Å–Ω–æ–≤–∞ –≤–∏–¥–∏–º—ã")

    def test_edit_operations(self, base_url, seedbanks, strains, stock_items):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        print("‚úèÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤...")

        # –ò–∑–º–µ–Ω—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
        edit_seedbank = random.choice(seedbanks)
        edit_strain = random.choice(strains)
        edit_stock = random.choice(stock_items)

        # –ò–∑–º–µ–Ω—è–µ–º —Å–∏–¥–±–∞–Ω–∫
        edit_seedbank.description = f"–ò–ó–ú–ï–ù–ï–ù–û: {edit_seedbank.description}"
        edit_seedbank.save()
        print(f"   ‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω —Å–∏–¥–±–∞–Ω–∫: {edit_seedbank.name}")

        # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç
        edit_strain.description = f"–ò–ó–ú–ï–ù–ï–ù–û: {edit_strain.description}"
        edit_strain.save()
        print(f"   ‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω —Å–æ—Ä—Ç: {edit_strain.name}")

        # –ò–∑–º–µ–Ω—è–µ–º —Ç–æ–≤–∞—Ä
        edit_stock.price = edit_stock.price + 10
        edit_stock.save()
        print(f"   ‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∞ —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {edit_stock}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/seedbank/{edit_seedbank.id}/change/")
        time.sleep(1)

    def test_delete_operations(self, base_url, seedbanks, strains, stock_items):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —É–¥–∞–ª–µ–Ω–∏—è"""
        print("üóëÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤...")

        # –£–¥–∞–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
        items_to_delete = random.sample(stock_items, 3)

        for item in items_to_delete:
            item_name = str(item)
            item.delete()
            print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–æ–≤–∞—Ä: {item_name}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        webbrowser.open(f"{base_url}/store_admin/magicbeans_store/stockitem/")
        time.sleep(2)

        print("   ‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã")

    def show_final_statistics(self):
        """–ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        stock_count = StockItem.objects.count()
        strain_count = Strain.objects.count()
        seedbank_count = SeedBank.objects.count()

        print(f"üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   üå± –°–∏–¥–±–∞–Ω–∫–æ–≤: {seedbank_count}")
        print(f"   üåø –°–æ—Ä—Ç–æ–≤: {strain_count}")
        print(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤: {stock_count}")

        print(f"\nüîê –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:")
        print(f"   üë§ –õ–æ–≥–∏–Ω: power_admin")
        print(f"   üîê –ü–∞—Ä–æ–ª—å: power123")
        print(f"   üåê URL: http://127.0.0.1:8000/admin/login/")

        print(f"\nüí° –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã:")
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤")
        print(f"   ‚úÖ –°–∫—Ä—ã—Ç–∏–µ/–ø–æ–∫–∞–∑ –æ–±—ä–µ–∫—Ç–æ–≤")
        print(f"   ‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤")
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤")
        print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ 'NONE NONE'")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        webbrowser.open("http://127.0.0.1:8000/store_admin/")
