#!/usr/bin/env python
"""
üîê –£–°–¢–ê–ù–û–í–ö–ê –ü–ê–†–û–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–£

–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é test_store_admin
–¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É

–ó–∞–ø—É—Å–∫: python manage.py set_admin_password
"""

import logging
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model

class Command(BaseCommand):
    help = 'üîê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –º–∞–≥–∞–∑–∏–Ω–∞'

    def __init__(self):
        super().__init__()
        self.setup_logging()

    def setup_logging(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        self.logger = logging.getLogger('set_password')
        self.logger.setLevel(logging.INFO)

        formatter = logging.Formatter('[%(asctime)s] %(message)s', datefmt='%H:%M:%S')
        console_handler = logging.StreamHandler()
        console_handler.setFormatter(formatter)
        self.logger.addHandler(console_handler)

    def add_arguments(self, parser):
        parser.add_argument('--password', type=str, default='admin123', help='–ü–∞—Ä–æ–ª—å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏')
        parser.add_argument('--username', type=str, default='test_store_admin', help='–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    def handle(self, *args, **options):
        """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
        username = options.get('username', 'test_store_admin')
        password = options.get('password', 'admin123')

        self.logger.info("üîê –£–°–¢–ê–ù–û–í–ö–ê –ü–ê–†–û–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–£")
        self.logger.info("=" * 50)

        try:
            User = get_user_model()

            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                user = User.objects.get(username=username)
                self.logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username}")
                self.logger.info(f"   üé≠ –†–æ–ª—å: {user.role}")
                self.logger.info(f"   üìõ –ò–º—è: {user.name}")

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
                user.set_password(password)
                user.save()

                self.logger.info(f"‚úÖ –ü–ê–†–û–õ–¨ –£–°–¢–ê–ù–û–í–õ–ï–ù!")
                self.logger.info(f"   üë§ –õ–æ–≥–∏–Ω: {username}")
                self.logger.info(f"   üîê –ü–∞—Ä–æ–ª—å: {password}")

                self.logger.info("\nüåê –¢–ï–ü–ï–†–¨ –í–´ –ú–û–ñ–ï–¢–ï –í–û–ô–¢–ò:")
                self.logger.info("   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://127.0.0.1:8000/admin/login/")
                self.logger.info(f"   2. –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: {username}")
                self.logger.info(f"   3. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: {password}")
                self.logger.info("   4. –ù–∞–∂–º–∏—Ç–µ '–í–æ–π—Ç–∏'")

                self.logger.info("\nüéØ –°–°–´–õ–ö–ò –î–õ–Ø –ê–î–ú–ò–ù–ö–ò –ú–ê–ì–ê–ó–ò–ù–ê:")
                self.logger.info("   üè† –ì–ª–∞–≤–Ω–∞—è: http://127.0.0.1:8000/store_admin/")
                self.logger.info("   üåø –°–æ—Ä—Ç–∞: http://127.0.0.1:8000/store_admin/magicbeans_store/strain/")
                self.logger.info("   ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ä—Ç: http://127.0.0.1:8000/store_admin/magicbeans_store/strain/add/")

            except User.DoesNotExist:
                self.logger.error(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                self.logger.info("üí° –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py switch_to_admin")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
