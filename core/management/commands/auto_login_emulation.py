#!/usr/bin/env python
"""
üîê –≠–ú–£–õ–Ø–¶–ò–Ø –° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú –õ–û–ì–ò–ù–û–ú

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ URL –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏–Ω–∞
–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ

–ó–∞–ø—É—Å–∫: python manage.py auto_login_emulation
"""

import os
import time
import webbrowser
import logging
from datetime import datetime
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.conf import settings
from django.db import transaction
from urllib.parse import urljoin, urlencode

class Command(BaseCommand):
    help = 'üîê –≠–º—É–ª—è—Ü–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ'

    def __init__(self):
        super().__init__()
        self.setup_logging()
        self.base_url = 'http://127.0.0.1:8000'
        self.current_step = 0
        self.total_steps = 6

    def setup_logging(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        log_dir = os.path.join(settings.BASE_DIR, 'logs')
        os.makedirs(log_dir, exist_ok=True)

        log_file = os.path.join(log_dir, f'auto_login_{datetime.now().strftime("%Y%m%d_%H%M%S")}.log')

        self.logger = logging.getLogger('auto_login')
        self.logger.setLevel(logging.INFO)

        formatter = logging.Formatter(
            '[%(asctime)s] %(message)s',
            datefmt='%H:%M:%S'
        )

        file_handler = logging.FileHandler(log_file, encoding='utf-8')
        file_handler.setFormatter(formatter)
        self.logger.addHandler(file_handler)

        console_handler = logging.StreamHandler()
        console_handler.setFormatter(formatter)
        self.logger.addHandler(console_handler)

    def add_arguments(self, parser):
        parser.add_argument(
            '--delay',
            type=int,
            default=4,
            help='–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö'
        )

    def handle(self, *args, **options):
        """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
        self.delay = options.get('delay', 4)

        self.logger.info("üîê –ù–ê–ß–ò–ù–ê–ï–ú –≠–ú–£–õ–Ø–¶–ò–Æ –° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú –õ–û–ì–ò–ù–û–ú")
        self.logger.info("=" * 70)
        self.logger.info(f"‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏: {self.delay} —Å–µ–∫—É–Ω–¥")
        self.logger.info("üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—Ö–æ–¥–æ–º")

        try:
            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
            self.prepare_admin_user()
            self.create_auto_login_view()

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
            self.step_1_auto_login()
            self.step_2_navigate_to_strains()
            self.step_3_open_add_form()
            self.step_4_create_strain()
            self.step_5_show_results()
            self.step_6_cleanup()

        except KeyboardInterrupt:
            self.logger.info("\n‚èπÔ∏è –≠–º—É–ª—è—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)

    def prepare_admin_user(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        self.logger.info("\nüìù –ü–û–î–ì–û–¢–û–í–ö–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
        self.logger.info("-" * 30)

        User = get_user_model()

        try:
            with transaction.atomic():
                user, created = User.objects.get_or_create(
                    username='auto_login_admin',
                    defaults={
                        'name': '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                        'role': 'store_admin',
                        'is_staff': True,
                        'is_active': True,
                        'telegram_id': '99999999'
                    }
                )

                from django.contrib.auth.models import Permission
                store_permissions = Permission.objects.filter(
                    content_type__app_label='magicbeans_store'
                )
                user.user_permissions.set(store_permissions)

                action = "—Å–æ–∑–¥–∞–Ω" if created else "–Ω–∞–π–¥–µ–Ω"
                self.logger.info(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {action}: {user.username}")
                self.logger.info(f"   üé≠ –†–æ–ª—å: {user.role}")
                self.logger.info(f"   üìú –ü—Ä–∞–≤–∞: {user.user_permissions.count()} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π")

                self.admin_user = user

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            raise

    def create_auto_login_view(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ view –¥–ª—è –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞"""
        self.logger.info("\nüîß –°–û–ó–î–ê–ù–ò–ï –ê–í–¢–û–õ–û–ì–ò–ù VIEW")
        self.logger.info("-" * 30)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π URL –≤ Django
        from django.urls import path
        from django.contrib.auth import login
        from django.shortcuts import redirect
        from django.http import HttpResponse

        def auto_login_view(request):
            """–í—Ä–µ–º–µ–Ω–Ω—ã–π view –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏–Ω–∞"""
            try:
                # –õ–æ–≥–∏–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                login(request, self.admin_user, backend='django.contrib.auth.backends.ModelBackend')

                # –ü–æ–ª—É—á–∞–µ–º next parameter
                next_url = request.GET.get('next', '/store_admin/')

                self.logger.info(f"üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–ª—è {self.admin_user.username}")
                self.logger.info(f"üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞: {next_url}")

                return redirect(next_url)

            except Exception as e:
                self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞: {e}")
                return HttpResponse(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞: {e}", status=500)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º view –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        self.auto_login_view = auto_login_view

        self.logger.info("‚úÖ –ê–≤—Ç–æ–ª–æ–≥–∏–Ω view —Å–æ–∑–¥–∞–Ω")

    def get_auto_login_url(self, target_url):
        """–°–æ–∑–¥–∞–Ω–∏–µ URL —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ª–æ–≥–∏–Ω–æ–º"""
        # –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç
        from django.conf import settings
        from django.urls import include, path
        from django.contrib import admin

        # –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        params = {'next': target_url}
        auto_url = f"{self.base_url}/admin/login/?" + urlencode(params)

        # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ Django admin
        return auto_url

    def next_step(self, title):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É"""
        self.current_step += 1
        self.logger.info(f"\nüéØ –®–ê–ì {self.current_step}/{self.total_steps}: {title}")
        self.logger.info("=" * 60)

    def open_url_with_delay(self, url, description):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ URL —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
        self.logger.info(f"üåê {description}")
        self.logger.info(f"   üìç URL: {url}")

        webbrowser.open(url)

        self.logger.info(f"‚è±Ô∏è –ñ–¥–µ–º {self.delay} —Å–µ–∫—É–Ω–¥...")
        time.sleep(self.delay)

    def step_1_auto_login(self):
        """–®–∞–≥ 1: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥–∏–Ω"""
        self.next_step("–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –í–•–û–î –í –°–ò–°–¢–ï–ú–£")

        self.logger.info("üîê –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Django admin...")

        # –°–æ–∑–¥–∞–µ–º session –≤—Ä—É—á–Ω—É—é –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
        from django.contrib.sessions.models import Session
        from django.contrib.auth import SESSION_KEY, BACKEND_SESSION_KEY, HASH_SESSION_KEY
        from django.utils import timezone
        import hashlib

        try:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
            session = Session()
            session.session_key = Session.objects._get_or_create_session_key()

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
            session_data = {
                SESSION_KEY: str(self.admin_user.pk),
                BACKEND_SESSION_KEY: 'django.contrib.auth.backends.ModelBackend',
                HASH_SESSION_KEY: hashlib.md5(self.admin_user.password.encode()).hexdigest()[:32]
            }

            session.session_data = Session.objects.encode(session_data)
            session.expire_date = timezone.now() + timezone.timedelta(hours=1)
            session.save()

            # –°–æ–∑–¥–∞–µ–º URL —Å cookie
            login_url = f"{self.base_url}/store_admin/?sessionid={session.session_key}"

            self.logger.info(f"‚úÖ Session —Å–æ–∑–¥–∞–Ω–∞: {session.session_key}")
            self.open_url_with_delay(login_url, "–û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∫—É —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ª–æ–≥–∏–Ω–æ–º")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {e}")
            # Fallback - –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∫—É
            self.open_url_with_delay(f"{self.base_url}/store_admin/", "–û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∫—É (–±–µ–∑ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞)")

    def step_2_navigate_to_strains(self):
        """–®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ—Ä—Ç–∞–º"""
        self.next_step("–ü–ï–†–ï–•–û–î –ö –£–ü–†–ê–í–õ–ï–ù–ò–Æ –°–û–†–¢–ê–ú–ò")

        self.logger.info("üìã –ß—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏:")
        self.logger.info("   ‚Ä¢ –í—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å –∞–¥–º–∏–Ω–∫—É –º–∞–≥–∞–∑–∏–Ω–∞")
        self.logger.info("   ‚Ä¢ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É '–°–æ—Ä—Ç–∞'")
        self.logger.info("   ‚Ä¢ –£–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ä—Ç–æ–≤")

        url = f"{self.base_url}/store_admin/magicbeans_store/strain/"
        self.open_url_with_delay(url, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ø–∏—Å–∫—É —Å–æ—Ä—Ç–æ–≤")

    def step_3_open_add_form(self):
        """–®–∞–≥ 3: –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"""
        self.next_step("–û–¢–ö–†–´–¢–ò–ï –§–û–†–ú–´ –°–û–ó–î–ê–ù–ò–Ø –°–û–†–¢–ê")

        self.logger.info("üìã –ß—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏:")
        self.logger.info("   ‚Ä¢ –û—Ç–∫—Ä–æ–µ—Ç—Å—è —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ—Ä—Ç–∞")
        self.logger.info("   ‚Ä¢ –í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏")
        self.logger.info("   ‚Ä¢ –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏")

        url = f"{self.base_url}/store_admin/magicbeans_store/strain/add/"
        self.open_url_with_delay(url, "–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∞")

    def step_4_create_strain(self):
        """–®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞"""
        self.next_step("–°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –°–û–†–¢–ê")

        self.logger.info("üî• –°–æ–∑–¥–∞–µ–º —Å–æ—Ä—Ç —á–µ—Ä–µ–∑ Django ORM...")

        try:
            from magicbeans_store.models import SeedBank, Strain

            seedbank = SeedBank.objects.first()
            if not seedbank:
                self.logger.error("‚ùå –ù–µ—Ç —Å–∏–¥–±–∞–Ω–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ!")
                return

            timestamp = datetime.now().strftime("%H%M%S")
            strain_name = f"Auto Login Test {timestamp}"

            strain = Strain.objects.create(
                name=strain_name,
                seedbank=seedbank,
                strain_type='autoflowering',
                description=f'–°–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–ª–æ–≥–∏–Ω —ç–º—É–ª—è—Ü–∏–µ–π –≤ {datetime.now().strftime("%H:%M:%S")}',
                thc_content='20-25',
                cbd_content='1-1.5',
                flowering_time='auto',
                genetics='Auto Genetics Test',
                is_active=True
            )

            self.logger.info("‚úÖ –°–û–†–¢ –°–û–ó–î–ê–ù –£–°–ü–ï–®–ù–û!")
            self.logger.info(f"   üÜî ID: {strain.id}")
            self.logger.info(f"   üìõ –ù–∞–∑–≤–∞–Ω–∏–µ: {strain.name}")
            self.logger.info(f"   üè™ –°–∏–¥–±–∞–Ω–∫: {strain.seedbank.name}")

            self.new_strain = strain

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ä—Ç–∞: {e}")
            self.new_strain = None

        time.sleep(self.delay)

    def step_5_show_results(self):
        """–®–∞–≥ 5: –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        self.next_step("–ü–†–û–°–ú–û–¢–† –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")

        self.logger.info("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è...")

        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        url = f"{self.base_url}/store_admin/magicbeans_store/strain/"
        self.open_url_with_delay(url, "–°–º–æ—Ç—Ä–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–æ—Ä—Ç–æ–≤")

        # –ï—Å–ª–∏ —Å–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
        if hasattr(self, 'new_strain') and self.new_strain:
            edit_url = f"{self.base_url}/store_admin/magicbeans_store/strain/{self.new_strain.id}/change/"
            self.logger.info(f"\nüîß –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–æ—Ä—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
            self.open_url_with_delay(edit_url, f"–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ—Ä—Ç #{self.new_strain.id}")

    def step_6_cleanup(self):
        """–®–∞–≥ 6: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ"""
        self.next_step("–ó–ê–í–ï–†–®–ï–ù–ò–ï –ò –°–¢–ê–¢–ò–°–¢–ò–ö–ê")

        self.logger.info("üéâ –ê–í–¢–û–õ–û–ì–ò–ù –≠–ú–£–õ–Ø–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")

        if hasattr(self, 'new_strain') and self.new_strain:
            from magicbeans_store.models import Strain
            total_strains = Strain.objects.count()

            self.logger.info("\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            self.logger.info(f"   üåø –í—Å–µ–≥–æ —Å–æ—Ä—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {total_strains}")
            self.logger.info(f"   üÜï –ù–æ–≤—ã–π —Å–æ—Ä—Ç: {self.new_strain.name}")
            self.logger.info(f"   üÜî ID –Ω–æ–≤–æ–≥–æ —Å–æ—Ä—Ç–∞: {self.new_strain.id}")

        self.logger.info("\nüí° –†–ï–ó–£–õ–¨–¢–ê–¢:")
        self.logger.info("   üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω")
        self.logger.info("   üéØ –ê–¥–º–∏–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        self.logger.info("   üéØ –ù–æ–≤—ã–π —Å–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω –∏ –≤–∏–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")

        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        final_url = f"{self.base_url}/store_admin/"
        self.logger.info(f"\nüè† –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é: {final_url}")
        webbrowser.open(final_url)
