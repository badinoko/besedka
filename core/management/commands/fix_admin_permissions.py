from django.core.management.base import BaseCommand, CommandError
from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType
from django.db import transaction
from users.models import User
from magicbeans_store.models import (
    SeedBank, Strain, StockItem, Order, OrderStatus,
    Promotion, Coupon, ShippingMethod, PaymentMethod
)


class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞'

    def add_arguments(self, parser):
        parser.add_argument(
            '--username',
            type=str,
            help='–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∞–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ store_admin)',
        )

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞...'))

        try:
            with transaction.atomic():
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                if options['username']:
                    users = User.objects.filter(username=options['username'])
                    if not users.exists():
                        raise CommandError(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {options["username"]} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                else:
                    users = User.objects.filter(role='store_admin')

                if not users.exists():
                    self.stdout.write(self.style.WARNING('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é store_admin'))
                    return

                # –ú–æ–¥–µ–ª–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞
                store_models = [
                    SeedBank, Strain, StockItem, Order, OrderStatus,
                    Promotion, Coupon, ShippingMethod, PaymentMethod
                ]

                # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞
                permissions_to_add = []

                for model in store_models:
                    content_type = ContentType.objects.get_for_model(model)

                    # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞: view, add, change (delete –Ω–µ –¥–∞–µ–º –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)
                    permission_codenames = [
                        f'view_{model._meta.model_name}',
                        f'add_{model._meta.model_name}',
                        f'change_{model._meta.model_name}',
                    ]

                    for codename in permission_codenames:
                        try:
                            permission = Permission.objects.get(
                                content_type=content_type,
                                codename=codename
                            )
                            permissions_to_add.append(permission)
                            self.stdout.write(f'  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–æ: {permission.name}')
                        except Permission.DoesNotExist:
                            self.stdout.write(f'  ‚ö†Ô∏è –ü—Ä–∞–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {codename}')

                # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                for user in users:
                    self.stdout.write(f'\nüë§ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username} (—Ä–æ–ª—å: {user.role})')

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å is_staff
                    if not user.is_staff:
                        user.is_staff = True
                        user.save()
                        self.stdout.write('  üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ is_staff = True')

                    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–∞–≤–∞
                    user.user_permissions.add(*permissions_to_add)
                    self.stdout.write(f'  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(permissions_to_add)} –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞')

                self.stdout.write(self.style.SUCCESS('\nüéâ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!'))
                self.print_summary(users, permissions_to_add)

        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤: {e}'))
            raise CommandError(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {e}')

    def print_summary(self, users, permissions):
        self.stdout.write('\nüìä –°–í–û–î–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ü–†–ê–í:')
        self.stdout.write(f'  üë• –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users.count()}')
        for user in users:
            self.stdout.write(f'    - {user.username} ({user.get_role_display()})')

        self.stdout.write(f'  üîê –ù–∞–∑–Ω–∞—á–µ–Ω–æ –ø—Ä–∞–≤: {len(permissions)}')
        self.stdout.write('  üìã –ü—Ä–∞–≤–∞ –≤–∫–ª—é—á–∞—é—Ç:')
        self.stdout.write('    - üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –º–∞–≥–∞–∑–∏–Ω–∞')
        self.stdout.write('    - ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π')
        self.stdout.write('    - ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö')
        self.stdout.write('    - ‚ùå –ë–ï–ó –ø—Ä–∞–≤–∞ —É–¥–∞–ª–µ–Ω–∏—è (–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)')

        self.stdout.write('\nüöÄ –¢–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞–¥–º–∏–Ω–∫–æ–π!')
