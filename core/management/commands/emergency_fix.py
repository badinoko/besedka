#!/usr/bin/env python
"""
üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú

–ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º:
- 403 Forbidden –æ—à–∏–±–∫–∏
- NONE NONE –≤ –¥—Ä–æ–ø–¥–∞—É–Ω–∞—Ö
- –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- –ü—Ä–æ–±–ª–µ–º—ã —Å –∫—ç—à–µ–º

–ó–∞–ø—É—Å–∫: python manage.py emergency_fix
"""

from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType
from django.core.cache import cache
from django.contrib.sessions.models import Session

class Command(BaseCommand):
    help = 'üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º'

    def handle(self, *args, **options):
        print("üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï")
        print("=" * 60)

        issues_found = []
        issues_fixed = []

        issues_found.extend(self.check_permissions())
        issues_found.extend(self.check_none_none())
        issues_found.extend(self.check_users())

        if issues_found:
            print(f"\nüîß –ù–ê–ô–î–ï–ù–û –ü–†–û–ë–õ–ï–ú: {len(issues_found)}")
            for issue in issues_found:
                print(f"   ‚ùå {issue}")

            print(f"\nüîÑ –ò–°–ü–†–ê–í–õ–Ø–ï–ú –ü–†–û–ë–õ–ï–ú–´...")
            issues_fixed.extend(self.fix_all_issues())
        else:
            print(f"\n‚úÖ –ü–†–û–ë–õ–ï–ú –ù–ï –ù–ê–ô–î–ï–ù–û!")

        self.show_summary(issues_found, issues_fixed)

    def check_permissions(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        issues = []
        User = get_user_model()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        critical_users = ['test_clean', 'clean_admin', 'store_admin']

        for username in critical_users:
            try:
                user = User.objects.get(username=username)
                if user.role == 'store_admin' and user.user_permissions.count() < 10:
                    issues.append(f"–£ {username} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ ({user.user_permissions.count()})")
            except User.DoesNotExist:
                issues.append(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        return issues

    def check_none_none(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º NONE NONE –ø—Ä–æ–±–ª–µ–º—É"""
        issues = []
        User = get_user_model()

        problematic = User.objects.filter(
            name__isnull=True
        ).union(
            User.objects.filter(name__exact='')
        ).union(
            User.objects.filter(name__icontains='none')
        ).union(
            User.objects.filter(name__icontains='null')
        )

        if problematic.exists():
            issues.append(f"NONE NONE –ø—Ä–æ–±–ª–µ–º–∞ —É {problematic.count()} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

        return issues

    def check_users(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        issues = []
        User = get_user_model()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö staff –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        staff_users = User.objects.filter(is_staff=True, is_active=True)
        if staff_users.count() < 2:
            issues.append(f"–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö staff –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ({staff_users.count()})")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
        admin_users = User.objects.filter(role__in=['store_admin', 'store_owner'])
        if admin_users.count() < 1:
            issues.append("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞")

        return issues

    def fix_all_issues(self):
        """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"""
        fixed = []
        User = get_user_model()

        # 1. –û—á–∏—â–∞–µ–º –∫—ç—à
        cache.clear()
        Session.objects.all().delete()
        fixed.append("–û—á–∏—â–µ–Ω –∫—ç—à –∏ —Å–µ—Å—Å–∏–∏")

        # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º NONE NONE
        problematic_users = User.objects.filter(
            name__isnull=True
        ).union(
            User.objects.filter(name__exact='')
        ).union(
            User.objects.filter(name__icontains='none')
        ).union(
            User.objects.filter(name__icontains='null')
        )

        for user in problematic_users:
            if user.username == 'test_clean':
                user.name = '–¢–µ—Å—Ç–æ–≤—ã–π –ß–∏—Å—Ç—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
            elif user.username == 'clean_admin':
                user.name = '–ß–∏—Å—Ç—ã–π –¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
            elif user.username == 'owner':
                user.name = '–í–ª–∞–¥–µ–ª–µ—Ü –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã'
            elif user.username == 'admin':
                user.name = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã'
            elif user.username == 'store_admin':
                user.name = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ú–∞–≥–∞–∑–∏–Ω–∞'
            elif user.username == 'store_owner':
                user.name = '–í–ª–∞–¥–µ–ª–µ—Ü –ú–∞–≥–∞–∑–∏–Ω–∞'
            else:
                role_map = {
                    'owner': '–í–ª–∞–¥–µ–ª–µ—Ü –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã',
                    'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã',
                    'store_owner': '–í–ª–∞–¥–µ–ª–µ—Ü –ú–∞–≥–∞–∑–∏–Ω–∞',
                    'store_admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ú–∞–≥–∞–∑–∏–Ω–∞',
                    'user': f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username.title()}',
                    'guest': f'–ì–æ—Å—Ç—å {user.username.title()}'
                }
                user.name = role_map.get(user.role, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username.title()}')

            user.save(update_fields=['name'])
            fixed.append(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}")

        # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞
        critical_users = ['test_clean', 'clean_admin']
        for username in critical_users:
            try:
                user = User.objects.get(username=username)
                if user.role == 'store_admin' and user.user_permissions.count() < 10:
                    self.assign_store_admin_permissions(user)
                    fixed.append(f"–ù–∞–∑–Ω–∞—á–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–ª—è {username}")
            except User.DoesNotExist:
                # –°–æ–∑–¥–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user = User.objects.create_user(
                    username=username,
                    name='–¢–µ—Å—Ç–æ–≤—ã–π –ß–∏—Å—Ç—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' if username == 'test_clean' else '–ß–∏—Å—Ç—ã–π –¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                    role='store_admin',
                    is_staff=True,
                    is_active=True
                )
                user.set_password('test123' if username == 'test_clean' else 'clean123')
                user.save()
                self.assign_store_admin_permissions(user)
                fixed.append(f"–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username}")

        return fixed

    def assign_store_admin_permissions(self, user):
        """–ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
        from magicbeans_store.models import SeedBank, Strain, StockItem, Order, OrderItem

        models_list = [SeedBank, Strain, StockItem, Order, OrderItem]

        for model in models_list:
            content_type = ContentType.objects.get_for_model(model)
            permission_codes = ['add', 'change', 'view']
            if model != Order:  # store_admin –Ω–µ —É–¥–∞–ª—è–µ—Ç –∑–∞–∫–∞–∑—ã
                permission_codes.append('delete')

            for perm_code in permission_codes:
                try:
                    permission = Permission.objects.get(
                        codename=f"{perm_code}_{content_type.model}",
                        content_type=content_type
                    )
                    user.user_permissions.add(permission)
                except Permission.DoesNotExist:
                    pass

    def show_summary(self, issues_found, issues_fixed):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å–≤–æ–¥–∫—É"""
        print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê:")
        print("-" * 40)

        if issues_found:
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {len(issues_found)}")
            print(f"üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {len(issues_fixed)}")

            if issues_fixed:
                print(f"\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
                for fix in issues_fixed:
                    print(f"   ‚úÖ {fix}")
        else:
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

        # –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        User = get_user_model()
        print(f"\nüìà –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
        print(f"   üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
        print(f"   ‚öôÔ∏è Staff –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.filter(is_staff=True).count()}")
        print(f"   üè™ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞: {User.objects.filter(role='store_admin').count()}")

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        if issues_found:
            print("1. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+Shift+Delete)")
            print("2. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)")
            print("3. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ –≤ —Å–∏—Å—Ç–µ–º—É")
            print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ")
        else:
            print("1. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ")
            print("2. –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É")

        print(f"\nüîó –¢–ï–°–¢–û–í–´–ï –ê–ö–ö–ê–£–ù–¢–´:")
        print("   test_clean / test123")
        print("   clean_admin / clean123")
        print("   URL: http://127.0.0.1:8000/store_admin/")
