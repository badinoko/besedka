import os
from datetime import datetime
from django.conf import settings
from django.core.management.base import BaseCommand

class Command(BaseCommand):
    help = '–ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –æ—á–∏—â–∞–µ—Ç –µ–≥–æ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.'

    def handle(self, *args, **options):
        progress_file_path = os.path.join(settings.BASE_DIR, 'docs', 'CUSTOM_CHAT_DEVELOPMENT_PROGRESS.md')
        archive_file_path = os.path.join(settings.BASE_DIR, 'docs', 'CUSTOM_CHAT_DEVELOPMENT_PROGRESS_ARCHIVE.md')

        try:
            # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            with open(progress_file_path, 'r', encoding='utf-8') as f:
                progress_content = f.read()

            # –†–∞–∑–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–ª–æ
            header_end_pos = progress_content.find('---') + 3
            if header_end_pos == 2: # –ï—Å–ª–∏ '---' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                self.stdout.write(self.style.WARNING('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å "---" –≤ —Ñ–∞–π–ª–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞. –ê—Ä—Ö–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.'))
                return

            header_content = progress_content[:header_end_pos]
            body_content_to_archive = progress_content[header_end_pos:].strip()

            if not body_content_to_archive:
                self.stdout.write(self.style.SUCCESS('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É–∂–µ –ø—É—Å—Ç. –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ.'))
                return

            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∞—Ä—Ö–∏–≤–Ω—ã–π —Ñ–∞–π–ª
            with open(archive_file_path, 'a', encoding='utf-8') as f:
                archive_separator = f"\\n\\n---\\n\\n## –ê—Ä—Ö–∏–≤ –æ—Ç {datetime.now().strftime('%d %B %Y')}\\n\\n---\\n"
                f.write(archive_separator)
                f.write(body_content_to_archive)

            self.stdout.write(self.style.SUCCESS(f'‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(body_content_to_archive.splitlines())} —Å—Ç—Ä–æ–∫ –≤ –∞—Ä—Ö–∏–≤.'))

            # –û—á–∏—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
            new_progress_header = f"""# üìã –ñ—É—Ä–Ω–∞–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —á–∞—Ç–∞ "–ë–µ—Å–µ–¥–∫–∞" (–ê–ö–¢–£–ê–õ–¨–ù–´–ô)

**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞:** 26 –∏—é–Ω—è 2025
**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** {datetime.now().strftime('%d %B %Y')}

---
"""
            with open(progress_file_path, 'w', encoding='utf-8') as f:
                f.write(new_progress_header)

            self.stdout.write(self.style.SUCCESS('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—á–∏—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–∞–ø–∏—Å—è–º.'))

        except FileNotFoundError as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω - {e.filename}'))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}'))
