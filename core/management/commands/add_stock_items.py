#!/usr/bin/env python
"""
üì¶ –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–û–í –ù–ê –°–ö–õ–ê–î

–°–æ–∑–¥–∞–µ—Ç StockItem –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ä—Ç–æ–≤:
- –†–∞–∑–Ω—ã–µ —É–ø–∞–∫–æ–≤–∫–∏ —Å–µ–º—è–Ω (1, 3, 5, 10 —à—Ç—É–∫)
- –†–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
- –°–ª—É—á–∞–π–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ

–ó–∞–ø—É—Å–∫: python manage.py add_stock_items
"""

from django.core.management.base import BaseCommand
from django.db import transaction
from magicbeans_store.models import Strain, StockItem
import random

class Command(BaseCommand):
    help = 'üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥ –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ä—Ç–æ–≤'

    def handle(self, *args, **options):
        print("üì¶ –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–û–í –ù–ê –°–ö–õ–ê–î")
        print("=" * 60)

        strains = Strain.objects.filter(is_active=True)
        print(f"üåø –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤: {strains.count()}")

        # –¢–∏–ø–æ–≤—ã–µ —É–ø–∞–∫–æ–≤–∫–∏ —Å–µ–º—è–Ω
        seed_packages = [1, 3, 5, 10]

        # –ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã –ø–æ —Ç–∏–ø–∞–º (–∑–∞ —Å–µ–º–µ—á–∫–æ)
        base_prices = {
            'autoflower': {'1': 800, '3': 750, '5': 700, '10': 650},
            'photoperiod': {'1': 600, '3': 550, '5': 500, '10': 450}
        }

        created_items = 0

        with transaction.atomic():
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–æ–≤–∞—Ä—ã
            StockItem.objects.all().delete()
            print("üóëÔ∏è –û—á–∏—â–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Ç–æ–≤–∞—Ä—ã")

            for strain in strains:
                print(f"\nüå± {strain.name} ({strain.seedbank.name}):")

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∫–æ–ª—å–∫–æ —É–ø–∞–∫–æ–≤–æ–∫ —Å–æ–∑–¥–∞—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ—Ä—Ç–∞
                num_packages = random.randint(2, 4)  # 2-4 —É–ø–∞–∫–æ–≤–∫–∏
                selected_packages = random.sample(seed_packages, num_packages)

                for seeds_count in selected_packages:
                    # –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–Ω—É
                    strain_type = strain.strain_type
                    base_price = base_prices[strain_type][str(seeds_count)]

                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≤–∞—Ä–∏–∞—Ü–∏—é —Ü–µ–Ω—ã ¬±15%
                    price_variation = random.uniform(0.85, 1.15)
                    final_price = int(base_price * price_variation)

                    # –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ
                    quantity = random.randint(0, 20)

                    # –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (90% –∞–∫—Ç–∏–≤–Ω—ã)
                    is_active = random.random() > 0.1

                    stock_item = StockItem.objects.create(
                        strain=strain,
                        seeds_count=seeds_count,
                        price=final_price,
                        quantity=quantity,
                        is_active=is_active
                    )

                    status = "‚úÖ" if is_active else "‚ùå"
                    availability = "üì¶" if quantity > 0 else "‚ö†Ô∏è"

                    print(f"   {status} {availability} {seeds_count} —Å–µ–º—è–Ω - {final_price}‚ÇΩ ({quantity} —à—Ç)")
                    created_items += 1

        print(f"\nüìä –ò–¢–û–ì–ò:")
        print(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {created_items}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_active = StockItem.objects.filter(is_active=True).count()
        total_inactive = StockItem.objects.filter(is_active=False).count()
        in_stock = StockItem.objects.filter(is_active=True, quantity__gt=0).count()
        out_of_stock = StockItem.objects.filter(is_active=True, quantity=0).count()

        print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {total_active}")
        print(f"   ‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {total_inactive}")
        print(f"   üì¶ –í –Ω–∞–ª–∏—á–∏–∏: {in_stock}")
        print(f"   ‚ö†Ô∏è –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏: {out_of_stock}")

        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–∫–ª–∞–¥–∞
        from django.db.models import Sum, F
        total_value = StockItem.objects.filter(is_active=True).aggregate(
            total=Sum(F('price') * F('quantity'))
        )['total'] or 0

        print(f"   üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–∫–ª–∞–¥–∞: {total_value:,} ‚ÇΩ")

        print(f"\nüéâ –°–ö–õ–ê–î –ì–û–¢–û–í!")
        print(f"üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω–∫—É: http://127.0.0.1:8000/store_admin/")
        print(f"üë§ –õ–æ–≥–∏–Ω: clean_admin / clean123")
