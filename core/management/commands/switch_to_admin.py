#!/usr/bin/env python
"""
üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê –ú–ê–ì–ê–ó–ò–ù–ê

–°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤—Ö–æ–¥–∞

–ó–∞–ø—É—Å–∫: python manage.py switch_to_admin
"""

import logging
from datetime import datetime
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction

class Command(BaseCommand):
    help = 'üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'

    def __init__(self):
        super().__init__()
        self.setup_logging()

    def setup_logging(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        self.logger = logging.getLogger('switch_admin')
        self.logger.setLevel(logging.INFO)

        formatter = logging.Formatter('[%(asctime)s] %(message)s', datefmt='%H:%M:%S')
        console_handler = logging.StreamHandler()
        console_handler.setFormatter(formatter)
        self.logger.addHandler(console_handler)

    def handle(self, *args, **options):
        """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
        self.logger.info("üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê –ú–ê–ì–ê–ó–ò–ù–ê")
        self.logger.info("=" * 60)

        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_user = self.create_test_admin()

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            self.show_instructions(admin_user)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    def create_test_admin(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
        self.logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞...")

        User = get_user_model()

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        import random
        timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
        unique_telegram_id = f"admin_{timestamp}_{random.randint(1000, 9999)}"

        with transaction.atomic():
            user, created = User.objects.get_or_create(
                username='test_store_admin',
                defaults={
                    'name': '–¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ú–∞–≥–∞–∑–∏–Ω–∞',
                    'role': 'store_admin',
                    'is_staff': True,
                    'is_active': True,
                    'telegram_id': unique_telegram_id
                }
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not created:
                user.role = 'store_admin'
                user.telegram_id = unique_telegram_id
                user.is_staff = True
                user.is_active = True
                user.save()

            # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –º–∞–≥–∞–∑–∏–Ω
            from django.contrib.auth.models import Permission
            store_permissions = Permission.objects.filter(
                content_type__app_label='magicbeans_store'
            )
            user.user_permissions.set(store_permissions)

            action = "—Å–æ–∑–¥–∞–Ω" if created else "–æ–±–Ω–æ–≤–ª–µ–Ω"
            self.logger.info(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {action}: {user.username}")
            self.logger.info(f"   üé≠ –†–æ–ª—å: {user.role}")
            self.logger.info(f"   üÜî Telegram ID: {user.telegram_id}")
            self.logger.info(f"   üìú –ü—Ä–∞–≤–∞: {user.user_permissions.count()} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π")

            return user

    def show_instructions(self, admin_user):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤—Ö–æ–¥–∞"""
        self.logger.info("\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –í–•–û–î–ê")
        self.logger.info("=" * 60)

        self.logger.info("üìã –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞:")
        self.logger.info(f"   üë§ –õ–æ–≥–∏–Ω: {admin_user.username}")
        self.logger.info(f"   üé≠ –†–æ–ª—å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞")
        self.logger.info(f"   üîê Telegram ID: {admin_user.telegram_id}")

        self.logger.info("\nüåê –°–°–´–õ–ö–ò –î–õ–Ø –î–û–°–¢–£–ü–ê:")
        self.logger.info("   üè† –ì–ª–∞–≤–Ω–∞—è –∞–¥–º–∏–Ω–∫–∏: http://127.0.0.1:8000/store_admin/")
        self.logger.info("   üåø –°–æ—Ä—Ç–∞: http://127.0.0.1:8000/store_admin/magicbeans_store/strain/")
        self.logger.info("   ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ä—Ç: http://127.0.0.1:8000/store_admin/magicbeans_store/strain/add/")

        self.logger.info("\nüìù –ö–ê–ö –í–û–ô–¢–ò:")
        self.logger.info("   1. –û—Ç–∫—Ä–æ–π—Ç–µ /admin/login/ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        self.logger.info("   2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (owner)")
        self.logger.info("   3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        self.logger.info("   4. –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'test_store_admin'")
        self.logger.info("   5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é '–í–æ–π—Ç–∏ –∫–∞–∫ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'")

        self.logger.info("\nüí° –ë–´–°–¢–†–´–ô –í–•–û–î:")
        self.logger.info("   –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Django shell:")
        self.logger.info("   from django.contrib.auth import get_user_model")
        self.logger.info("   User = get_user_model()")
        self.logger.info(f"   user = User.objects.get(username='{admin_user.username}')")

        self.logger.info("\nüéâ –ì–û–¢–û–í–û!")
        self.logger.info("   –¢–µ–ø–µ—Ä—å –∫–Ω–æ–ø–∫–∏ –∏ —Ñ–æ—Ä–º—ã –∞–¥–º–∏–Ω–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å!")
        self.logger.info("   –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å!")

    def add_arguments(self, parser):
        parser.add_argument(
            '--reset',
            action='store_true',
            help='–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏'
        )
