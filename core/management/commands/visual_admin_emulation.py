#!/usr/bin/env python
"""
üëÅÔ∏è VISUAL ADMIN EMULATION - –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø–æ—à–∞–≥–æ–≤–∞—è —ç–º—É–ª—è—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —ç–º—É–ª–∏—Ä—É–µ—Ç –†–ï–ê–õ–¨–ù–û–ì–û –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π:
- –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –û–î–ù–û–ô –≤–∫–ª–∞–¥–∫–µ –ø–æ—à–∞–≥–æ–≤–æ
- –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—ã –≤–∏–∑—É–∞–ª—å–Ω–æ
- –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫
- –°–æ–∑–¥–∞–µ—Ç, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç, —É–¥–∞–ª—è–µ—Ç —Å–æ—Ä—Ç–∞
- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–ø–∏—Å–∫–∞—Ö
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ

–ó–∞–ø—É—Å–∫: python manage.py visual_admin_emulation
"""

import os
import time
import json
import logging
import webbrowser
from datetime import datetime
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.conf import settings
from django.db import transaction
from django.apps import apps

class Command(BaseCommand):
    help = 'üëÅÔ∏è –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø–æ—à–∞–≥–æ–≤–∞—è —ç–º—É–ª—è—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'

    def __init__(self):
        super().__init__()
        self.setup_logging()
        self.base_url = 'http://127.0.0.1:8000'
        self.steps = []

    def setup_logging(self):
        """–ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ç–∞–π–º–∏–Ω–≥–∞–º–∏"""
        log_dir = os.path.join(settings.BASE_DIR, 'logs')
        os.makedirs(log_dir, exist_ok=True)

        log_file = os.path.join(log_dir, f'visual_emulation_{datetime.now().strftime("%Y%m%d_%H%M%S")}.log')

        self.logger = logging.getLogger('visual_emulation')
        self.logger.setLevel(logging.INFO)

        formatter = logging.Formatter(
            '[%(asctime)s] %(message)s',
            datefmt='%H:%M:%S'
        )

        file_handler = logging.FileHandler(log_file, encoding='utf-8')
        file_handler.setFormatter(formatter)
        self.logger.addHandler(file_handler)

        console_handler = logging.StreamHandler()
        console_handler.setFormatter(formatter)
        self.logger.addHandler(console_handler)

        self.log_file = log_file

    def add_arguments(self, parser):
        parser.add_argument(
            '--delay',
            type=int,
            default=4,
            help='–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (default: 4)'
        )
        parser.add_argument(
            '--scenario',
            type=str,
            choices=['basic', 'full', 'crazy'],
            default='basic',
            help='–°—Ü–µ–Ω–∞—Ä–∏–π —ç–º—É–ª—è—Ü–∏–∏ (basic/full/crazy)'
        )

    def handle(self, *args, **options):
        """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
        self.delay = options.get('delay', 4)
        scenario = options.get('scenario', 'basic')

        self.logger.info("üëÅÔ∏è –ù–ê–ß–ò–ù–ê–ï–ú –í–ò–ó–£–ê–õ–¨–ù–£–Æ –≠–ú–£–õ–Ø–¶–ò–Æ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
        self.logger.info("=" * 80)
        self.logger.info(f"‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏: {self.delay} —Å–µ–∫—É–Ω–¥")
        self.logger.info(f"üé¨ –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario}")

        try:
            # 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
            self.create_test_user()

            # 2. –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            self.open_browser_tab("–ù–∞—á–∏–Ω–∞–µ–º —ç–º—É–ª—è—Ü–∏—é")

            # 3. –í—ã–ø–æ–ª–Ω—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
            if scenario == 'basic':
                self.basic_admin_scenario()
            elif scenario == 'full':
                self.full_admin_scenario()
            elif scenario == 'crazy':
                self.crazy_admin_scenario()

            # 4. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
            self.show_final_report()

        except KeyboardInterrupt:
            self.logger.info("\n‚ö†Ô∏è –≠–ú–£–õ–Ø–¶–ò–Ø –ü–†–ï–†–í–ê–ù–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú")
        except Exception as e:
            self.logger.error(f"‚ùå –û–®–ò–ë–ö–ê: {e}", exc_info=True)
        finally:
            self.logger.info(f"üìÑ –õ–û–ì–ò –°–û–•–†–ê–ù–ï–ù–´: {self.log_file}")

    def create_test_user(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")

        User = get_user_model()

        try:
            with transaction.atomic():
                user, created = User.objects.get_or_create(
                    username='visual_admin',
                    defaults={
                        'name': '–í–∏–∑—É–∞–ª—å–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                        'role': 'store_admin',
                        'is_staff': True,
                        'is_active': True,
                        'telegram_id': '55555555'
                    }
                )

                # –ù–∞–∑–Ω–∞—á–∞–µ–º permissions
                from django.contrib.auth.models import Permission
                store_permissions = Permission.objects.filter(
                    content_type__app_label='magicbeans_store'
                )
                user.user_permissions.set(store_permissions)

                if created:
                    self.logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
                else:
                    self.logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    def open_browser_tab(self, description):
        """–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
        self.logger.info(f"üåê {description}")
        time.sleep(self.delay)

    def basic_admin_scenario(self):
        """–ë–∞–∑–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Ä—Ç–æ–≤"""
        self.logger.info("\nüé¨ –ë–ê–ó–û–í–´–ô –°–¶–ï–ù–ê–†–ò–ô: –†–∞–±–æ—Ç–∞ —Å —Å–æ—Ä—Ç–∞–º–∏")
        self.logger.info("-" * 60)

        # –®–∞–≥ 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∫–∏
        self.step_open_main_admin()

        # –®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–∏–¥–±–∞–Ω–∫–∞–º
        self.step_navigate_to_seedbanks()

        # –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º —Å–∏–¥–±–∞–Ω–∫
        self.step_create_seedbank()

        # –®–∞–≥ 4: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ—Ä—Ç–∞–º
        self.step_navigate_to_strains()

        # –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–æ—Ä—Ç
        self.step_create_strain("White Widow Auto", "indica")

        # –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ä—Ç–æ–≤
        self.step_check_strains_list()

        # –®–∞–≥ 7: –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π —Å–æ—Ä—Ç
        self.step_create_strain("Northern Lights", "hybrid")

        # –®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.step_final_review()

    def full_admin_scenario(self):
        """–ü–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        self.logger.info("\nüé¨ –ü–û–õ–ù–´–ô –°–¶–ï–ù–ê–†–ò–ô: CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–æ—Ä—Ç–∞–º–∏")
        self.logger.info("-" * 60)

        # –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        self.basic_admin_scenario()

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        self.step_edit_strain()
        self.step_create_stock_items()
        self.step_manage_orders()

    def crazy_admin_scenario(self):
        """–°—É–º–∞—Å—à–µ–¥—à–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –ú–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π"""
        self.logger.info("\nüé¨ –°–£–ú–ê–°–®–ï–î–®–ò–ô –°–¶–ï–ù–ê–†–ò–ô: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ—à–µ–ª —Å —É–º–∞!")
        self.logger.info("-" * 60)

        # –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ
        self.full_admin_scenario()
        self.step_mass_operations()
        self.step_cleanup_operations()

    def step_open_main_admin(self):
        """–®–∞–≥: –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω–∫–∏"""
        url = f"{self.base_url}/store_admin/"

        self.logger.info("üìã –®–ê–ì 1: –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—Ö–æ–¥–∏—Ç –≤ —Å–≤–æ—é –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

        webbrowser.open(url)
        self.open_browser_tab("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç –¥–∞—à–±–æ—Ä–¥.")

        self.steps.append({
            'step': 1,
            'action': '–û—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π –∞–¥–º–∏–Ω–∫–∏',
            'url': url,
            'description': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞—Ö–æ–¥–∏—Ç –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–º'
        })

    def step_navigate_to_seedbanks(self):
        """–®–∞–≥: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–∏–¥–±–∞–Ω–∫–∞–º–∏"""
        url = f"{self.base_url}/store_admin/magicbeans_store/seedbank/"

        self.logger.info("üìã –®–ê–ì 2: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–∏–¥–±–∞–Ω–∫–∞–º–∏")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–ª–∏–∫–∞–µ—Ç –Ω–∞ '–°–∏–¥–±–∞–Ω–∫–∏' –≤ –º–µ–Ω—é")

        webbrowser.open(url)
        self.open_browser_tab("–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∏–¥–±–∞–Ω–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–∏–¥–±–∞–Ω–∫–æ–≤.")

        self.steps.append({
            'step': 2,
            'action': '–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–∏–¥–±–∞–Ω–∫–∞–º',
            'url': url,
            'description': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ —Å–∏–¥–±–∞–Ω–∫–æ–≤'
        })

    def step_create_seedbank(self):
        """–®–∞–≥: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∏–¥–±–∞–Ω–∫"""
        url = f"{self.base_url}/store_admin/magicbeans_store/seedbank/add/"

        self.logger.info("üìã –®–ê–ì 3: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∏–¥–±–∞–Ω–∫")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–ª–∏–∫–∞–µ—Ç '–î–æ–±–∞–≤–∏—Ç—å —Å–∏–¥–±–∞–Ω–∫'")
        self.logger.info("   üìù –ó–ê–ü–û–õ–ù–Ø–ï–¢ –§–û–†–ú–£:")
        self.logger.info("      ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: Premium Cannabis Seeds")
        self.logger.info("      ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–µ–º–∏—É–º —Å–µ–º–µ–Ω–∞ –æ—Ç –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π")
        self.logger.info("      ‚Ä¢ –í–µ–±-—Å–∞–π—Ç: https://premium-cannabis.com")
        self.logger.info("      ‚Ä¢ –ê–∫—Ç–∏–≤–µ–Ω: ‚úÖ –î–∞")

        webbrowser.open(url)
        self.open_browser_tab("–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏–¥–±–∞–Ω–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –ø–æ–ª—è.")

        # –≠–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
        self.logger.info("   ‚å®Ô∏è –ü–†–û–¶–ï–°–° –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø:")
        self.logger.info("      1. –í–≤–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∏–¥–±–∞–Ω–∫–∞...")
        self.open_browser_tab("–ù–∞–∑–≤–∞–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ")

        self.logger.info("      2. –ü–∏—à–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ...")
        self.open_browser_tab("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–æ")

        self.logger.info("      3. –£–∫–∞–∑—ã–≤–∞–µ—Ç –≤–µ–±-—Å–∞–π—Ç...")
        self.open_browser_tab("–í–µ–±-—Å–∞–π—Ç —É–∫–∞–∑–∞–Ω")

        self.logger.info("      4. –°—Ç–∞–≤–∏—Ç –≥–∞–ª–æ—á–∫—É '–ê–∫—Ç–∏–≤–µ–Ω'...")
        self.open_browser_tab("–ì–∞–ª–æ—á–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞")

        self.logger.info("      5. üî¥ –ù–ê–ñ–ò–ú–ê–ï–¢ –ö–ù–û–ü–ö–£ '–°–û–•–†–ê–ù–ò–¢–¨'")
        self.open_browser_tab("–°–∏–¥–±–∞–Ω–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É —Å–∏–¥–±–∞–Ω–∫–æ–≤.")

        self.steps.append({
            'step': 3,
            'action': '–°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–¥–±–∞–Ω–∫–∞',
            'url': url,
            'description': '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∏–¥–±–∞–Ω–∫–∞'
        })

    def step_navigate_to_strains(self):
        """–®–∞–≥: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–æ—Ä—Ç–∞–º–∏"""
        url = f"{self.base_url}/store_admin/magicbeans_store/strain/"

        self.logger.info("üìã –®–ê–ì 4: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–æ—Ä—Ç–∞–º–∏")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–ª–∏–∫–∞–µ—Ç –Ω–∞ '–°–æ—Ä—Ç–∞' –≤ –º–µ–Ω—é")

        webbrowser.open(url)
        self.open_browser_tab("–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ—Ä—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ä—Ç–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ –ø—É—Å—Ç–æ–π).")

        self.steps.append({
            'step': 4,
            'action': '–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ—Ä—Ç–∞–º',
            'url': url,
            'description': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ —Å–æ—Ä—Ç–æ–≤'
        })

    def step_create_strain(self, strain_name, strain_type):
        """–®–∞–≥: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–æ—Ä—Ç"""
        url = f"{self.base_url}/store_admin/magicbeans_store/strain/add/"

        step_num = len(self.steps) + 1
        self.logger.info(f"üìã –®–ê–ì {step_num}: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–æ—Ä—Ç '{strain_name}'")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–ª–∏–∫–∞–µ—Ç '–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ä—Ç'")
        self.logger.info("   üìù –ó–ê–ü–û–õ–ù–Ø–ï–¢ –§–û–†–ú–£:")
        self.logger.info(f"      ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {strain_name}")
        self.logger.info(f"      ‚Ä¢ –¢–∏–ø: {strain_type}")
        self.logger.info("      ‚Ä¢ –°–∏–¥–±–∞–Ω–∫: Premium Cannabis Seeds")
        self.logger.info("      ‚Ä¢ –¢–ì–ö: 22.5%")
        self.logger.info("      ‚Ä¢ –ö–ë–î: 1.2%")
        self.logger.info("      ‚Ä¢ –í—Ä–µ–º—è —Ü–≤–µ—Ç–µ–Ω–∏—è: 65 –¥–Ω–µ–π")
        self.logger.info("      ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞...")

        webbrowser.open(url)
        self.open_browser_tab(f"–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ä—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è '{strain_name}'.")

        # –≠–º—É–ª–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
        self.logger.info("   ‚å®Ô∏è –î–ï–¢–ê–õ–¨–ù–´–ô –ü–†–û–¶–ï–°–° –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø:")

        self.logger.info("      1. –í—ã–±–∏—Ä–∞–µ—Ç —Å–∏–¥–±–∞–Ω–∫ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞...")
        self.open_browser_tab("–°–∏–¥–±–∞–Ω–∫ –≤—ã–±—Ä–∞–Ω –∏–∑ —Å–ø–∏—Å–∫–∞")

        self.logger.info(f"      2. –í–≤–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞: '{strain_name}'")
        self.open_browser_tab("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞ –≤–≤–µ–¥–µ–Ω–æ")

        self.logger.info(f"      3. –í—ã–±–∏—Ä–∞–µ—Ç —Ç–∏–ø —Å–æ—Ä—Ç–∞: '{strain_type}'")
        self.open_browser_tab("–¢–∏–ø —Å–æ—Ä—Ç–∞ –≤—ã–±—Ä–∞–Ω")

        self.logger.info("      4. –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
        self.logger.info("         - –¢–ì–ö: –≤–≤–æ–¥–∏—Ç 22.5")
        self.open_browser_tab("–¢–ì–ö —É–∫–∞–∑–∞–Ω")

        self.logger.info("         - –ö–ë–î: –≤–≤–æ–¥–∏—Ç 1.2")
        self.open_browser_tab("–ö–ë–î —É–∫–∞–∑–∞–Ω")

        self.logger.info("         - –í—Ä–µ–º—è —Ü–≤–µ—Ç–µ–Ω–∏—è: 65 –¥–Ω–µ–π")
        self.open_browser_tab("–í—Ä–µ–º—è —Ü–≤–µ—Ç–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–æ")

        self.logger.info("      5. –ü–∏—à–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞...")
        self.open_browser_tab("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–æ")

        self.logger.info("      6. –°—Ç–∞–≤–∏—Ç –≥–∞–ª–æ—á–∫—É '–ê–∫—Ç–∏–≤–µ–Ω'...")
        self.open_browser_tab("–°–æ—Ä—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π")

        self.logger.info("      7. üî¥ –ù–ê–ñ–ò–ú–ê–ï–¢ –ö–ù–û–ü–ö–£ '–°–û–•–†–ê–ù–ò–¢–¨'")
        self.open_browser_tab(f"–°–æ—Ä—Ç '{strain_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É —Å–æ—Ä—Ç–æ–≤.")

        self.steps.append({
            'step': step_num,
            'action': f'–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞ {strain_name}',
            'url': url,
            'description': f'–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Ä—Ç–∞ {strain_name} ({strain_type})'
        })

    def step_check_strains_list(self):
        """–®–∞–≥: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ä—Ç–æ–≤"""
        url = f"{self.base_url}/store_admin/magicbeans_store/strain/"

        step_num = len(self.steps) + 1
        self.logger.info(f"üìã –®–ê–ì {step_num}: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ä—Ç–æ–≤")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ—Ä—Ç–∞ –ø–æ—è–≤–∏–ª–∏—Å—å –≤ —Å–ø–∏—Å–∫–µ")
        self.logger.info("   üîç –ü–†–û–í–ï–†–Ø–ï–¢:")
        self.logger.info("      ‚Ä¢ –°–æ—Ä—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ")
        self.logger.info("      ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ")
        self.logger.info("      ‚Ä¢ –°—Ç–∞—Ç—É—Å '–ê–∫—Ç–∏–≤–µ–Ω'")
        self.logger.info("      ‚Ä¢ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å")

        webbrowser.open(url)
        self.open_browser_tab("–°–ø–∏—Å–æ–∫ —Å–æ—Ä—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç —Å–≤–æ–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ—Ä—Ç–∞!")

        self.steps.append({
            'step': step_num,
            'action': '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–æ—Ä—Ç–æ–≤',
            'url': url,
            'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ—Ä—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
        })

    def step_final_review(self):
        """–®–∞–≥: –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞–±–æ—Ç—ã"""
        step_num = len(self.steps) + 1
        self.logger.info(f"üìã –®–ê–ì {step_num}: –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.logger.info("   üìä –ü–†–û–°–ú–ê–¢–†–ò–í–ê–ï–¢ –°–¢–ê–¢–ò–°–¢–ò–ö–£:")

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        main_url = f"{self.base_url}/store_admin/"
        webbrowser.open(main_url)
        self.open_browser_tab("–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")

        self.logger.info("      ‚úÖ –°–∏–¥–±–∞–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
        self.logger.info("      ‚úÖ –°–æ—Ä—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        self.logger.info("      ‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
        self.logger.info("      ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

        self.steps.append({
            'step': step_num,
            'action': '–§–∏–Ω–∞–ª—å–Ω—ã–π –æ–±–∑–æ—Ä',
            'url': main_url,
            'description': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'
        })

    def step_edit_strain(self):
        """–®–∞–≥: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ—Ä—Ç–∞"""
        self.logger.info("üìã –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –®–ê–ì: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ä—Ç–∞")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–µ—à–∏–ª –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤")

        # –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Ä—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        try:
            Strain = apps.get_model('magicbeans_store', 'Strain')
            strain = Strain.objects.first()

            if strain:
                edit_url = f"{self.base_url}/store_admin/magicbeans_store/strain/{strain.id}/change/"
                self.logger.info(f"   üîó URL: {edit_url}")
                self.logger.info(f"   üìù –†–ï–î–ê–ö–¢–ò–†–£–ï–¢ –°–û–†–¢: {strain.name}")

                webbrowser.open(edit_url)
                self.open_browser_tab(f"–§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ä—Ç–∞ '{strain.name}' –æ—Ç–∫—Ä—ã—Ç–∞.")

                self.logger.info("   ‚å®Ô∏è –í–ù–û–°–ò–¢ –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
                self.logger.info("      ‚Ä¢ –ò–∑–º–µ–Ω—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ")
                self.open_browser_tab("–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ")

                self.logger.info("      ‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç –¢–ì–ö –Ω–∞ 24.0%")
                self.open_browser_tab("–¢–ì–ö —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω")

                self.logger.info("      ‚Ä¢ üî¥ –°–û–•–†–ê–ù–Ø–ï–¢ –ò–ó–ú–ï–ù–ï–ù–ò–Ø")
                self.open_browser_tab("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

        except Exception as e:
            self.logger.warning(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ—Ä—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

    def step_create_stock_items(self):
        """–®–∞–≥: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π"""
        url = f"{self.base_url}/store_admin/magicbeans_store/stockitem/add/"

        self.logger.info("üìã –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –®–ê–ì: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ä—Ç–æ–≤")

        webbrowser.open(url)
        self.open_browser_tab("–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞.")

        self.logger.info("   üì¶ –°–û–ó–î–ê–ï–¢ –¢–û–í–ê–†:")
        self.logger.info("      ‚Ä¢ –í—ã–±–∏—Ä–∞–µ—Ç —Å–æ—Ä—Ç")
        self.logger.info("      ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω: 5 —à—Ç")
        self.logger.info("      ‚Ä¢ –¶–µ–Ω–∞: 1500 —Ä—É–±")
        self.logger.info("      ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ: 25 —É–ø–∞–∫–æ–≤–æ–∫")

        self.open_browser_tab("–¢–æ–≤–∞—Ä–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!")

    def step_manage_orders(self):
        """–®–∞–≥: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏"""
        url = f"{self.base_url}/store_admin/magicbeans_store/order/"

        self.logger.info("üìã –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –®–ê–ì: –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤")
        self.logger.info(f"   üîó URL: {url}")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–µ –∑–∞–∫–∞–∑—ã")

        webbrowser.open(url)
        self.open_browser_tab("–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–∫—Ä—ã—Ç. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã.")

    def step_mass_operations(self):
        """–®–∞–≥: –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        self.logger.info("üìã –°–£–ú–ê–°–®–ï–î–®–ò–ô –®–ê–ì: –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã–ø–æ–ª–Ω—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–¥—Ä—è–¥")

        # –°–æ–∑–¥–∞–µ–º –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ—Ä—Ç–æ–≤ –±—ã—Å—Ç—Ä–æ
        strains_to_create = [
            ("AK-47", "hybrid"),
            ("Blueberry", "indica"),
            ("Amnesia Haze", "sativa"),
            ("Girl Scout Cookies", "hybrid")
        ]

        for strain_name, strain_type in strains_to_create:
            self.logger.info(f"   üèÉ‚Äç‚ôÇÔ∏è –ë–´–°–¢–†–û –°–û–ó–î–ê–ï–¢: {strain_name}")
            self.step_create_strain(strain_name, strain_type)

    def step_cleanup_operations(self):
        """–®–∞–≥: –û–ø–µ—Ä–∞—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏"""
        self.logger.info("üìã –ó–ê–í–ï–†–®–ê–Æ–©–ò–ô –®–ê–ì: –£–±–æ—Ä–∫–∞")
        self.logger.info("   üëÄ –î–ï–ô–°–¢–í–ò–ï: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–≤–æ–¥–∏—Ç –ø–æ—Ä—è–¥–æ–∫")
        self.logger.info("   üßπ –ü–†–û–í–ï–†–Ø–ï–¢:")
        self.logger.info("      ‚Ä¢ –í—Å–µ –ª–∏ —Å–æ—Ä—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ–∑–¥–∞–Ω—ã")
        self.logger.info("      ‚Ä¢ –ù–µ—Ç –ª–∏ –¥—É–±–ª–µ–π")
        self.logger.info("      ‚Ä¢ –í—Å–µ –ª–∏ —Ü–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã")

        # –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
        main_url = f"{self.base_url}/store_admin/"
        webbrowser.open(main_url)
        self.open_browser_tab("–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω!")

    def show_final_report(self):
        """–ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
        self.logger.info("\nüìä –û–¢–ß–ï–¢ –û –í–ò–ó–£–ê–õ–¨–ù–û–ô –≠–ú–£–õ–Ø–¶–ò–ò")
        self.logger.info("=" * 60)
        self.logger.info(f"‚ö° –í—Å–µ–≥–æ —à–∞–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {len(self.steps)}")
        self.logger.info(f"‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è —ç–º—É–ª—è—Ü–∏–∏: ~{len(self.steps) * self.delay} —Å–µ–∫—É–Ω–¥")

        self.logger.info("\nüìã –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
        for step in self.steps:
            self.logger.info(f"   {step['step']}. {step['action']}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
        report_file = os.path.join(settings.BASE_DIR, 'logs', f'visual_emulation_steps_{datetime.now().strftime("%Y%m%d_%H%M%S")}.json')
        try:
            with open(report_file, 'w', encoding='utf-8') as f:
                json.dump(self.steps, f, ensure_ascii=False, indent=2)
            self.logger.info(f"\nüíæ –û–¢–ß–ï–¢ –°–û–•–†–ê–ù–ï–ù: {report_file}")
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")

        self.logger.info("\nüéâ –í–ò–ó–£–ê–õ–¨–ù–ê–Ø –≠–ú–£–õ–Ø–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        self.logger.info("   üëÅÔ∏è –í—ã –º–æ–≥–ª–∏ –Ω–∞–±–ª—é–¥–∞—Ç—å –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        self.logger.info("   üì± –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø–æ—à–∞–≥–æ–≤–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        self.logger.info("   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –∑–∞–¥–∞—á–∞–º–∏!")
