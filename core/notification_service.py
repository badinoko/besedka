from django.utils import timezone
from django.contrib.auth import get_user_model
from users.models import Notification

User = get_user_model()


class NotificationService:
    """
    –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
    """

    @staticmethod
    def notify_admins(title: str, message: str, notification_type: str = 'system', exclude_user=None):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.

        Args:
            title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            message: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            notification_type: –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (system, security, etc.)
            exclude_user: –ò—Å–∫–ª—é—á–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏
        """
        admin_roles = ['owner', 'moderator', 'store_owner', 'store_admin']
        admin_users = User.objects.filter(
            role__in=admin_roles,
            is_active=True
        )

        if exclude_user:
            admin_users = admin_users.exclude(id=exclude_user.id)

        notifications = []
        for admin in admin_users:
            notifications.append(
                Notification(
                    recipient=admin,
                    sender=None,  # –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    notification_type=notification_type,
                    title=title,
                    message=message,
                    created_at=timezone.now()
                )
            )

        # –ú–∞—Å—Å–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        Notification.objects.bulk_create(notifications)

        return len(notifications)

    @staticmethod
    def notify_store_admins(title: str, message: str, notification_type: str = 'system', exclude_user=None):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –º–∞–≥–∞–∑–∏–Ω–∞.
        """
        store_admin_roles = ['owner', 'store_owner', 'store_admin']
        store_admins = User.objects.filter(
            role__in=store_admin_roles,
            is_active=True
        )

        if exclude_user:
            store_admins = store_admins.exclude(id=exclude_user.id)

        notifications = []
        for admin in store_admins:
            notifications.append(
                Notification(
                    recipient=admin,
                    sender=None,
                    notification_type=notification_type,
                    title=title,
                    message=message,
                    created_at=timezone.now()
                )
            )

        Notification.objects.bulk_create(notifications)
        return len(notifications)

    @staticmethod
    def notify_platform_admins(title: str, message: str, notification_type: str = 'system', exclude_user=None):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–≤–ª–∞–¥–µ–ª–µ—Ü + –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã).
        """
        platform_admin_roles = ['owner', 'moderator']
        platform_admins = User.objects.filter(
            role__in=platform_admin_roles,
            is_active=True
        )

        if exclude_user:
            platform_admins = platform_admins.exclude(id=exclude_user.id)

        notifications = []
        for admin in platform_admins:
            notifications.append(
                Notification(
                    recipient=admin,
                    sender=None,
                    notification_type=notification_type,
                    title=title,
                    message=message,
                    created_at=timezone.now()
                )
            )

        Notification.objects.bulk_create(notifications)
        return len(notifications)

    @staticmethod
    def notify_user_action(user, action_type: str, details: str = ""):
        """
        –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        Args:
            user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤—ã–ø–æ–ª–Ω–∏–≤—à–∏–π –¥–µ–π—Å—Ç–≤–∏–µ
            action_type: –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è ('login', 'register', 'ban', 'content_report', etc.)
            details: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        """
        action_titles = {
            'login': f"üë§ –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            'register': f"üÜï –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
            'ban_appeal': f"üö´ –ñ–∞–ª–æ–±–∞ –Ω–∞ –±–∞–Ω",
            'content_report': f"üö® –ñ–∞–ª–æ–±–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç",
            'suspicious_activity': f"‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
            'payment_issue': f"üí≥ –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π",
        }

        title = action_titles.get(action_type, f"üìã –î–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {action_type}")

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_display = f"{user.username} ({user.get_role_display()})"
        message = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_display}"

        if details:
            message += f"\n\n–î–µ—Ç–∞–ª–∏: {details}"

        message += f"\n\n–í—Ä–µ–º—è: {timezone.now().strftime('%d.%m.%Y %H:%M')}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        if action_type in ['payment_issue', 'order_issue']:
            # –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–∫–∞–∑–∞–º–∏ - —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
            return NotificationService.notify_store_admins(title, message, 'system', exclude_user=user)
        else:
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã - —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            return NotificationService.notify_platform_admins(title, message, 'system', exclude_user=user)

    @staticmethod
    def test_notification_system():
        """
        –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª—è—è —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º.
        """
        title = "üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        message = f"""–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã.

–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {timezone.now().strftime('%d.%m.%Y %H:%M:%S')}

–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"""

        count = NotificationService.notify_admins(title, message, 'system')
        return f"–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {count} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"


class AdminAlertService:
    """
    –°–µ—Ä–≤–∏—Å –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    """

    @staticmethod
    def security_alert(message: str, severity: str = 'medium'):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
        """
        severity_icons = {
            'low': 'üü°',
            'medium': 'üü†',
            'high': 'üî¥',
            'critical': 'üö®'
        }

        icon = severity_icons.get(severity, '‚ö†Ô∏è')
        title = f"{icon} –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"

        full_message = f"""–£–†–û–í–ï–ù–¨: {severity.upper()}

{message}

–í—Ä–µ–º—è: {timezone.now().strftime('%d.%m.%Y %H:%M:%S')}

–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ –º–µ—Ä."""

        return NotificationService.notify_platform_admins(title, full_message, 'system')

    @staticmethod
    def system_error_alert(error_details: str, component: str = 'Unknown'):
        """
        –£–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± –æ—à–∏–±–∫–∞—Ö —Å–∏—Å—Ç–µ–º—ã.
        """
        title = f"üí• –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞: {component}"
        message = f"""–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ: {component}

–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:
{error_details}

–í—Ä–µ–º—è: {timezone.now().strftime('%d.%m.%Y %H:%M:%S')}

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã."""

        return NotificationService.notify_admins(title, message, 'system')

    @staticmethod
    def performance_alert(metric: str, value: str, threshold: str):
        """
        –£–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
        """
        title = f"üìä –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
        message = f"""–ú–µ—Ç—Ä–∏–∫–∞: {metric}
–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {value}
–ü–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {threshold}

–í—Ä–µ–º—è: {timezone.now().strftime('%d.%m.%Y %H:%M:%S')}

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã."""

        return NotificationService.notify_admins(title, message, 'system')
