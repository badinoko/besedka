#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±–µ–∑ Selenium
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –æ–∫—Ä—É–∂–µ–Ω–∏—è
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.local')
django.setup()

from django.contrib.auth import get_user_model
from users.models import Notification

User = get_user_model()

def test_notifications_crud():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"""
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ê–ó–û–í–´–• –û–ü–ï–†–ê–¶–ò–ô –° –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò")
    print("=" * 60)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = User.objects.get(username='test_user')
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username} (ID: {user.id})")
    except User.DoesNotExist:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'test_user' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    total_notifications = Notification.objects.filter(recipient=user).count()
    unread_notifications = Notification.objects.filter(recipient=user, is_read=False).count()

    print(f"üìä –í—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {total_notifications}")
    print(f"üìä –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread_notifications}")

    if total_notifications == 0:
        print("‚ö†Ô∏è –ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ...")

                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        for i in range(5):
            Notification.objects.create(
                recipient=user,
                title=f"–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ {i+1}",
                message=f"–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–º–µ—Ä {i+1}",
                notification_type='system',
                is_read=i % 2 == 0  # –ö–∞–∂–¥–æ–µ –≤—Ç–æ—Ä–æ–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
            )

        total_notifications = Notification.objects.filter(recipient=user).count()
        unread_notifications = Notification.objects.filter(recipient=user, is_read=False).count()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {total_notifications}")
        print(f"üìä –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread_notifications}")

    # –¢–µ—Å—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ —á—Ç–µ–Ω–∏—è
    print("\nüîÑ –¢–ï–°–¢: –ú–∞—Å—Å–æ–≤–æ–µ —á—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    before_read = Notification.objects.filter(recipient=user, is_read=False).count()
    Notification.objects.filter(recipient=user, is_read=False).update(is_read=True)
    after_read = Notification.objects.filter(recipient=user, is_read=False).count()

    print(f"   –î–æ: {before_read} –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö")
    print(f"   –ü–æ—Å–ª–µ: {after_read} –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö")
    print(f"   {'‚úÖ' if after_read == 0 else '‚ùå'} –†–µ–∑—É–ª—å—Ç–∞—Ç: {'–£—Å–ø–µ—à–Ω–æ' if after_read == 0 else '–û—à–∏–±–∫–∞'}")

    # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è
    print("\nüóëÔ∏è –¢–ï–°–¢: –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    notifications_to_delete = list(Notification.objects.filter(recipient=user)[:2])
    delete_ids = [n.id for n in notifications_to_delete]

    before_delete = Notification.objects.filter(recipient=user).count()
    Notification.objects.filter(recipient=user, id__in=delete_ids).delete()
    after_delete = Notification.objects.filter(recipient=user).count()

    print(f"   –£–¥–∞–ª—è–µ–º ID: {delete_ids}")
    print(f"   –î–æ: {before_delete} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print(f"   –ü–æ—Å–ª–µ: {after_delete} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print(f"   {'‚úÖ' if after_delete == before_delete - 2 else '‚ùå'} –†–µ–∑—É–ª—å—Ç–∞—Ç: {'–£—Å–ø–µ—à–Ω–æ' if after_delete == before_delete - 2 else '–û—à–∏–±–∫–∞'}")

    return True

def test_user_permissions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π"""
    print("\nüë• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ê–í –î–û–°–¢–£–ü–ê")
    print("=" * 60)

    roles = ['owner', 'moderator', 'store_owner', 'store_admin', 'test_user']

    for role in roles:
        try:
            user = User.objects.get(username=role)
            notifications_count = Notification.objects.filter(recipient=user).count()
            print(f"‚úÖ {role:12} | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications_count:3} | –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active} | –†–æ–ª—å: {getattr(user, 'role', 'user')}")
        except User.DoesNotExist:
            print(f"‚ùå {role:12} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

    return True

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 60)

    success = True

    # –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    success &= test_notifications_crud()

    # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    success &= test_user_permissions()

    print("\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –¢–ï–°–¢–ê–•")

    print("=" * 60)
