#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import os
import django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.local')
django.setup()

from django.contrib.auth import get_user_model
from users.models import Notification

User = get_user_model()

def create_test_notifications():
    print("üîç –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")

    # –ù–∞–π–¥–µ–º owner –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        owner = User.objects.get(username='owner')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {owner.username}")
    except User.DoesNotExist:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    test_notifications = [
        {
            'title': '–ù–æ–≤—ã–π –ª–∞–π–∫!',
            'message': 'store_owner –ª–∞–π–∫–Ω—É–ª –≤–∞—à –≥—Ä–æ—É-–ª–æ–≥ "test"',
            'notification_type': 'like',
            'is_read': False,
            'action_url': '/growlogs/1/',
        },
        {
            'title': '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!',
            'message': 'store_owner –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤–∞—à –≥—Ä–æ—É-–ª–æ–≥ "test"',
            'notification_type': 'comment',
            'is_read': False,
            'action_url': '/growlogs/1/',
        },
        {
            'title': '–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
            'message': '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω',
            'notification_type': 'system',
            'is_read': True,
            'action_url': None,
        },
        {
            'title': '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
            'message': '–í–∞—à –∑–∞–∫–∞–∑ #123 –±—ã–ª —Å–æ–∑–¥–∞–Ω',
            'notification_type': 'order',
            'is_read': False,
            'action_url': '/store/orders/123/',
        },
    ]

    created_count = 0
    for notif_data in test_notifications:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ create_notification –∏–∑ –º–æ–¥–µ–ª–∏
        notification = Notification.create_notification(
            recipient=owner,
            notification_type=notif_data['notification_type'],
            title=notif_data['title'],
            message=notif_data['message'],
            sender=None  # –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        )
        created_count += 1
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {notification.title}")

    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {created_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print(f"üìä –í—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {owner.notifications.count()}")
    print(f"üìß –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {owner.unread_notifications_count}")

if __name__ == "__main__":
    create_test_notifications()
