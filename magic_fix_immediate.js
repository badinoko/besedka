// –ú–ê–ì–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú ROCKET.CHAT

print('ü™Ñ –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –°–ö–†–ò–ü–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø...');

// 1. –§–∏–∫—Å–∏—Ä—É–µ–º Setup Wizard –Ω–∞–≤—Å–µ–≥–¥–∞
print('üîß –§–∏–∫—Å–∏—Ä—É—é Setup Wizard...');
db.rocketchat_settings.updateOne(
    {_id: 'Show_Setup_Wizard'},
    {$set: {value: 'completed', valueSource: 'customValue', _updatedAt: new Date()}}
);

// 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª vip-chat -> vip
print('üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∫–∞–Ω–∞–ª—ã...');
const vipChatRoom = db.rocketchat_room.findOne({_id: 'vip-chat'});
if (vipChatRoom) {
    // –ú–µ–Ω—è–µ–º ID –∫–∞–Ω–∞–ª–∞ —Å vip-chat –Ω–∞ vip
    db.rocketchat_room.updateOne(
        {_id: 'vip-chat'},
        {$set: {_id: 'vip', name: 'vip', _updatedAt: new Date()}}
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
    db.rocketchat_subscription.updateMany(
        {rid: 'vip-chat'},
        {$set: {rid: 'vip', name: 'vip', _updatedAt: new Date()}}
    );

    print('‚úÖ –ö–∞–Ω–∞–ª vip-chat –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ vip');
}

// 3. –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const owner = db.users.findOne({ username: 'owner' });
if (!owner) {
    print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    quit();
}

// 4. –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –í–°–ï –∫–∞–Ω–∞–ª—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
const allChannels = ['GENERAL', 'vip', 'moderators'];
allChannels.forEach(channelId => {
    const room = db.rocketchat_room.findOne({ _id: channelId });
    if (!room) {
        print('‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + channelId);
        return;
    }

    let subscription = db.rocketchat_subscription.findOne({
        'u._id': owner._id,
        rid: channelId
    });

    if (!subscription) {
        print('üìù –°–æ–∑–¥–∞—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª: ' + room.name);

        db.rocketchat_subscription.insertOne({
            _id: owner._id + channelId,
            u: {
                _id: owner._id,
                username: owner.username
            },
            rid: channelId,
            name: room.name,
            fname: room.fname || room.name,
            t: room.t,
            ts: new Date(),
            ls: new Date(),
            lr: new Date(),
            f: false,
            open: true,
            alert: false,
            roles: ['owner'],
            unread: 0,
            _updatedAt: new Date()
        });

        print('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ' + room.name);
    } else {
        print('‚ÑπÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –µ—Å—Ç—å: ' + room.name);
    }
});

// 5. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OAuth –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
print('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é OAuth...');

// –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
db.rocketchat_settings.deleteMany({_id: /^Accounts_OAuth_Custom/});

// –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä
const oauthSettings = [
    {_id: 'Accounts_OAuth_Custom-besedka', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-url', value: 'http://127.0.0.1:8001', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-token_path', value: '/o/token/', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-identity_path', value: '/api/v1/auth/rocket/', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-authorize_path', value: '/o/authorize/', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-scope', value: 'read', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-id', value: 'BesedkaRocketChat2025', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-secret', value: 'SecureSecretKey2025BesedkaRocketChatSSO', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-button_label_text', value: '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-button_color', value: '#1976d2', type: 'color', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-login_style', value: 'redirect', type: 'select', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-merge_users', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-show_button', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-roles_claim', value: 'roles', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-merge_roles', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-roles_to_groups_mapping', value: '{"owner":"admin,vip","moderator":"admin","user":"user"}', type: 'string', valueSource: 'customValue'}
];

oauthSettings.forEach(setting => {
    db.rocketchat_settings.updateOne(
        {_id: setting._id},
        {$set: {...setting, _updatedAt: new Date()}},
        {upsert: true}
    );
});

// 6. –û—Ç–∫–ª—é—á–∞–µ–º iframe –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
db.rocketchat_settings.updateOne(
    {_id: 'Iframe_Restrict_Access'},
    {$set: {value: false, valueSource: 'customValue', _updatedAt: new Date()}}
);

print('‚úÖ OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

// –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
print('\n=== –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ ===');
print('‚úÖ Setup Wizard –æ—Ç–∫–ª—é—á–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞');
print('‚úÖ –ö–∞–Ω–∞–ª—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã: GENERAL, vip, moderators');
print('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã');
print('‚úÖ OAuth –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
print('‚úÖ Iframe —Ä–∞–∑—Ä–µ—à–µ–Ω');
print('\nü™Ñ –ú–ê–ì–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
