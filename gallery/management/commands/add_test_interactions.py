from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from gallery.models import Photo, PhotoComment

User = get_user_model()

class Command(BaseCommand):
    help = '–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º'

    def handle(self, *args, **options):
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = User.objects.all()
        photos = Photo.objects.all()

        if not users or not photos:
            self.stdout.write(self.style.ERROR('–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'))
            return

        created_likes = 0
        created_comments = 0

        # –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏ –∫ –∫–∞–∂–¥–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for photo in photos:
            for i, user in enumerate(users[:3]):  # –ú–∞–∫—Å–∏–º—É–º 3 –ª–∞–π–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ
                if user not in photo.likes.all():
                    photo.likes.add(user)
                    created_likes += 1

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        test_comments = [
            "–û—Ç–ª–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ! üåü",
            "–ö—Ä–∞—Å–∏–≤—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è!",
            "–ö–∞–∫–æ–π —Å–æ—Ä—Ç?",
            "–í–ø–µ—á–∞—Ç–ª—è—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!",
            "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üëç"
        ]

        for i, photo in enumerate(photos[:5]):  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–≤—ã–º 5 —Ñ–æ—Ç–æ
            for j, user in enumerate(users[:2]):  # –ü–æ 2 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                if not PhotoComment.objects.filter(photo=photo, author=user).exists():
                    PhotoComment.objects.create(
                        photo=photo,
                        author=user,
                        text=test_comments[(i + j) % len(test_comments)]
                    )
                    created_comments += 1

        self.stdout.write(
            self.style.SUCCESS(
                f'–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {created_likes} –ª–∞–π–∫–æ–≤ –∏ {created_comments} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'
            )
        )
