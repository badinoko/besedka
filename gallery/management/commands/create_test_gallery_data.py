import os
import random
from django.core.management.base import BaseCommand
from django.core.files.base import ContentFile
from django.contrib.auth import get_user_model
from PIL import Image, ImageDraw, ImageFont
import io
from gallery.models import Photo, PhotoComment
from growlogs.models import GrowLog, GrowLogComment
from users.models import Notification

User = get_user_model()


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ –∏ –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–æ–≤'

    def add_arguments(self, parser):
        parser.add_argument(
            '--photos',
            type=int,
            default=15,
            help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 15)'
        )
        parser.add_argument(
            '--growlogs',
            type=int,
            default=5,
            help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5)'
        )

    def handle(self, *args, **options):
        self.stdout.write('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ –∏ –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–æ–≤...')

        # –°–ø–∏—Å–æ–∫ —Ä–∞—Å—Ç–µ–Ω–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        plant_names = [
            'White Widow', 'Northern Lights', 'Blue Dream', 'AK-47',
            'Purple Haze', 'Jack Herer', 'Sour Diesel', 'OG Kush',
            'Super Skunk', 'Amnesia Haze', 'Cheese', 'Critical',
            'Gorilla Glue', 'Girl Scout Cookies', 'Strawberry Cough'
        ]

        # –¶–≤–µ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–µ–π–∫–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        plant_colors = [
            '#2ECC71', '#27AE60', '#16A085', '#1ABC9C',
            '#3498DB', '#2980B9', '#9B59B6', '#8E44AD',
            '#F39C12', '#E67E22', '#E74C3C', '#C0392B'
        ]

        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = list(User.objects.filter(is_active=True))
        if not users:
            self.stdout.write(self.style.ERROR('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö'))
            return

        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –≥–∞–ª–µ—Ä–µ–µ
        photos_created = 0
        for i in range(options['photos']):
            try:
                # –°–ª—É—á–∞–π–Ω—ã–π –∞–≤—Ç–æ—Ä
                author = random.choice(users)

                # –°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ
                plant_name = random.choice(plant_names)

                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–µ–π–∫–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                image = self.create_test_image(plant_name, random.choice(plant_colors))

                # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ç–æ
                photo = Photo.objects.create(
                    title=f'{plant_name} - –î–µ–Ω—å {random.randint(1, 120)}',
                    description=self.generate_description(plant_name),
                    author=author,
                    is_public=True
                )

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                img_file = ContentFile(image.getvalue())
                photo.image.save(f'test_photo_{i+1}.png', img_file, save=True)

                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ª–∞–π–∫–∏
                like_users = random.sample(users, k=random.randint(0, min(5, len(users))))
                for like_user in like_users:
                    if like_user != author:  # –ê–≤—Ç–æ—Ä –Ω–µ –ª–∞–π–∫–∞–µ—Ç —Å–µ–±—è
                        photo.likes.add(like_user)

                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                comment_users = random.sample(users, k=random.randint(0, 3))
                for comment_user in comment_users:
                    if comment_user != author:
                        PhotoComment.objects.create(
                            photo=photo,
                            author=comment_user,
                            content=self.generate_comment()
                        )

                photos_created += 1
                self.stdout.write(f'üì∏ –°–æ–∑–¥–∞–Ω–æ —Ñ–æ—Ç–æ {photos_created}: {photo.title}')

            except Exception as e:
                self.stdout.write(self.style.WARNING(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ {i+1}: {e}'))

        # –°–æ–∑–¥–∞–µ–º –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç—ã
        growlogs_created = 0
        for i in range(options['growlogs']):
            try:
                # –°–ª—É—á–∞–π–Ω—ã–π –∞–≤—Ç–æ—Ä
                grower = random.choice(users)

                # –°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ
                plant_name = random.choice(plant_names)

                # –°–æ–∑–¥–∞–µ–º –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç
                growlog = GrowLog.objects.create(
                    title=f'–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ {plant_name} #{i+1}',
                    description=self.generate_growlog_description(plant_name),
                    grower=grower,
                    environment=random.choice(['indoor', 'outdoor', 'greenhouse']),
                    medium=random.choice(['soil', 'hydro', 'coco', 'aero']),
                    current_stage=random.choice(['seed', 'germination', 'seedling', 'vegetative', 'flowering', 'harvest']),
                    is_public=True,
                    strain_custom=plant_name
                )

                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ª–∞–π–∫–∏
                like_users = random.sample(users, k=random.randint(0, min(7, len(users))))
                for like_user in like_users:
                    if like_user != grower:
                        growlog.likes.add(like_user)

                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                comment_users = random.sample(users, k=random.randint(0, 4))
                for comment_user in comment_users:
                    if comment_user != grower:
                        GrowLogComment.objects.create(
                            growlog=growlog,
                            author=comment_user,
                            content=self.generate_growlog_comment()
                        )

                growlogs_created += 1
                self.stdout.write(f'üå± –°–æ–∑–¥–∞–Ω –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç {growlogs_created}: {growlog.title}')

            except Exception as e:
                self.stdout.write(self.style.WARNING(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–∞ {i+1}: {e}'))

        # –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º (—á–µ—Ä–µ–∑ –ª–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
        self.stdout.write('üîî –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...')
        notifications_created = 0

        # –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ª–∞–π–∫–∞—Ö
        for photo in Photo.objects.filter(title__startswith='White Widow'):
            for like_user in photo.likes.all()[:2]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã—Ö 2 –ª–∞–π–∫–µ—Ä–æ–≤
                if like_user != photo.author:
                    Notification.objects.create(
                        recipient=photo.author,
                        sender=like_user,
                        title='–ù–æ–≤—ã–π –ª–∞–π–∫ –≤ –≥–∞–ª–µ—Ä–µ–µ!',
                        message=f'{like_user.username} –ª–∞–π–∫–Ω—É–ª –≤–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é "{photo.title}"',
                        notification_type='like',
                        content_object=photo
                    )
                    notifications_created += 1

        # –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
        for growlog in GrowLog.objects.filter(title__contains='Blue Dream'):
            for comment in growlog.comments.all()[:1]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                if comment.author != growlog.grower:
                    Notification.objects.create(
                        recipient=growlog.grower,
                        sender=comment.author,
                        title='–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç—É!',
                        message=f'{comment.author.username} –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤–∞—à –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç "{growlog.title}"',
                        notification_type='comment',
                        content_object=growlog
                    )
                    notifications_created += 1

        self.stdout.write(self.style.SUCCESS(f'‚úÖ –ì–û–¢–û–í–û!'))
        self.stdout.write(self.style.SUCCESS(f'üì∏ –°–æ–∑–¥–∞–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photos_created}'))
        self.stdout.write(self.style.SUCCESS(f'üå± –°–æ–∑–¥–∞–Ω–æ –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–æ–≤: {growlogs_created}'))
        self.stdout.write(self.style.SUCCESS(f'üîî –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications_created}'))

    def create_test_image(self, plant_name, color):
        """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è"""
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 400x400
        img = Image.new('RGB', (400, 400), color=color)
        draw = ImageDraw.Draw(img)

        # –†–∏—Å—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∏–º–∏—Ç–∞—Ü–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è
        # –°—Ç–µ–±–µ–ª—å
        draw.rectangle([190, 200, 210, 380], fill='#8B4513')

        # –õ–∏—Å—Ç—å—è
        for i in range(3):
            y = 150 + i * 60
            # –õ–µ–≤—ã–π –ª–∏—Å—Ç
            draw.ellipse([120, y, 190, y + 40], fill='#228B22')
            # –ü—Ä–∞–≤—ã–π –ª–∏—Å—Ç
            draw.ellipse([210, y, 280, y + 40], fill='#228B22')

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç
            font = ImageFont.load_default()
        except:
            font = None

        # –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è
        text_bbox = draw.textbbox((0, 0), plant_name, font=font)
        text_width = text_bbox[2] - text_bbox[0]
        draw.text((200 - text_width // 2, 50), plant_name, fill='white', font=font)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO
        img_io = io.BytesIO()
        img.save(img_io, format='PNG')
        img_io.seek(0)
        return img_io

    def generate_description(self, plant_name):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
        descriptions = [
            f'–ú–æ–π {plant_name} –Ω–∞ {random.randint(20, 80)} –¥–µ–Ω—å —Ü–≤–µ—Ç–µ–Ω–∏—è. –û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º!',
            f'–ö—Ä–∞—Å–∏–≤—ã–µ —à–∏—à–∫–∏ {plant_name}. –ó–∞–ø–∞—Ö –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π!',
            f'{plant_name} –¥–µ–Ω—å {random.randint(1, 120)}. –†–∞—Å—Ç–µ—Ç –∫–∞–∫ –Ω–∞ –¥—Ä–æ–∂–∂–∞—Ö!',
            f'–ü–µ—Ä–≤—ã–π –æ–ø—ã—Ç –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è {plant_name}. –ü–æ–∫–∞ –≤—Å–µ –∏–¥–µ—Ç –æ—Ç–ª–∏—á–Ω–æ.',
            f'–•–∞—Ä–≤–µ—Å—Ç {plant_name} –±–ª–∏–∑–∫–æ! –ñ–¥—É –Ω–µ –¥–æ–∂–¥—É—Å—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å.',
            f'–ú–æ–π –ª—é–±–∏–º—ã–π —Å–æ—Ä—Ç - {plant_name}. –í—Å–µ–≥–¥–∞ —Ä–∞–¥—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ–º.',
        ]
        return random.choice(descriptions)

    def generate_growlog_description(self, plant_name):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–∞"""
        descriptions = [
            f'–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É—é –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è {plant_name}. –≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –æ–ø—ã—Ç —Å —ç—Ç–∏–º —Å–æ—Ä—Ç–æ–º.',
            f'–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç —Å {plant_name} –≤ –≥–∏–¥—Ä–æ–ø–æ–Ω–∏–∫–µ. –î–µ–ª—é—Å—å –æ–ø—ã—Ç–æ–º –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è–º–∏.',
            f'–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ {plant_name} –≤ –ø–æ—á–≤–µ. –ó–∞–ø–∏—Å—ã–≤–∞—é –≤—Å–µ —ç—Ç–∞–ø—ã —Ä–∞–∑–≤–∏—Ç–∏—è.',
            f'–í—Ç–æ—Ä–æ–π –≥—Ä–æ–≤ {plant_name}. –í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—ã–ª –æ—Ç–ª–∏—á–Ω—ã–π, –ø–æ–≤—Ç–æ—Ä—è—é.',
            f'–°—Ä–∞–≤–Ω–∏–≤–∞—é —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–∞ {plant_name}. –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–≤–∏–¥–µ—Ç—å —Ä–∞–∑–Ω–∏—Ü—É.',
        ]
        return random.choice(descriptions)

    def generate_comment(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è —Ñ–æ—Ç–æ"""
        comments = [
            '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üëç',
            '–ö—Ä–∞—Å–∏–≤—ã–µ —à–∏—à–∫–∏! –ö–∞–∫–æ–π –∑–∞–ø–∞—Ö?',
            '–í–∞—É! –û—á–µ–Ω—å –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç!',
            '–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ü–≤–µ—Ç–µ–Ω–∏—è?',
            '–ö–∞–∫–∏–µ —É–¥–æ–±—Ä–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—à—å?',
            '–®–∏–∫–∞—Ä–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üî•',
            '–ö–∞–∫–∞—è —É—Ä–æ–∂–∞–π–Ω–æ—Å—Ç—å –æ–∂–∏–¥–∞–µ—Ç—Å—è?',
            '–ü–µ—Ä–≤—ã–π —Ä–∞–∑ –≤–∏–∂—É —Ç–∞–∫—É—é –∫—Ä–∞—Å–æ—Ç—É!',
            '–ü–æ–¥–µ–ª–∏—Å—å —Å–µ–∫—Ä–µ—Ç–æ–º —É—Å–ø–µ—Ö–∞!',
            '–§–æ—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–≥–æ–Ω—å! üì∏',
        ]
        return random.choice(comments)

    def generate_growlog_comment(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –≥—Ä–æ—É—Ä–µ–ø–æ—Ä—Ç–∞"""
        comments = [
            '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥! –ë—É–¥—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ–º.',
            '–ö–∞–∫–æ–π —Å–≤–µ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—à—å?',
            '–û—Ç–ª–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç! –£–¥–∞—á–∏ –≤ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–∏!',
            '–û—á–µ–Ω—å –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–µ—Ç–∞–ª–∏.',
            '–ü–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è! üëÄ',
            '–ö–∞–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –±–æ–∫—Å–µ?',
            '–°–∫–æ–ª—å–∫–æ —Ä–∞—Å—Ç–µ–Ω–∏–π –ø–ª–∞–Ω–∏—Ä—É–µ—à—å?',
            '–ö—Ä—É—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞! –°–∞–º —Ç–∞–∫—É—é —Ö–æ—á—É.',
            '–ö–∞–∫–æ–π —Å–∏–¥–±–∞–Ω–∫ —É —Å–µ–º—è–Ω?',
            '–ñ–¥—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è! –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!',
        ]
        return random.choice(comments)
