import os
from django.core.management.base import BaseCommand
from django.utils import timezone
from news.services import NewsParsingService


class Command(BaseCommand):
    help = '–ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤'

    def add_arguments(self, parser):
        parser.add_argument(
            '--test',
            action='store_true',
            help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏',
        )
        parser.add_argument(
            '--source',
            type=str,
            help='–ü–∞—Ä—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ (–ø–æ –∏–º–µ–Ω–∏)',
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...')
        )

        try:
            service = NewsParsingService()
            result = service.run_parsing()

            if result['success']:
                self.stdout.write(
                    self.style.SUCCESS(
                        f'‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n'
                        f'üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: {result["total_articles"]}\n'
                        f'üÜï –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ: {result["new_articles"]}\n'
                        f'üåê –£—Å–ø–µ—à–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {result["successful_sources"]}'
                    )
                )

                if result['errors']:
                    self.stdout.write(
                        self.style.WARNING(
                            f'‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n' + '\n'.join(result['errors'])
                        )
                    )
            else:
                self.stdout.write(
                    self.style.ERROR(
                        f'‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {result["error"]}'
                    )
                )

        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}')
            )
