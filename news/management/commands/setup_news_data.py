from django.core.management.base import BaseCommand
from news.models import NewsCategory, NewsSource


class Command(BaseCommand):
    help = '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –Ω–æ–≤–æ—Å—Ç–µ–π'

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã –Ω–æ–≤–æ—Å—Ç–µ–π...')
        )

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories_data = [
            {
                'name': '–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ',
                'slug': 'growing',
                'description': '–ù–æ–≤–æ—Å—Ç–∏ –∏ —Å—Ç–∞—Ç—å–∏ –æ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–∏ –∫–∞–Ω–Ω–∞–±–∏—Å–∞'
            },
            {
                'name': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–∞–Ω–Ω–∞–±–∏—Å',
                'slug': 'medical',
                'description': '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –Ω–æ–≤–æ—Å—Ç–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–Ω–∞–±–∏—Å–∞'
            },
            {
                'name': '–°–æ—Ä—Ç–∞ –∏ —à—Ç–∞–º–º—ã',
                'slug': 'strains',
                'description': '–û–±–∑–æ—Ä—ã —Å–æ—Ä—Ç–æ–≤ –∏ –Ω–æ–≤—ã—Ö —à—Ç–∞–º–º–æ–≤ –∫–∞–Ω–Ω–∞–±–∏—Å–∞'
            },
            {
                'name': '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
                'slug': 'equipment',
                'description': '–ù–æ–≤–æ—Å—Ç–∏ –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –¥–ª—è –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è'
            },
            {
                'name': '–û—Å–≤–µ—â–µ–Ω–∏–µ',
                'slug': 'lighting',
                'description': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –æ—Å–≤–µ—â–µ–Ω–∏—è –¥–ª—è –≥—Ä–æ–≤–∏–Ω–≥–∞'
            },
            {
                'name': '–£–¥–æ–±—Ä–µ–Ω–∏—è',
                'slug': 'nutrients',
                'description': '–£–¥–æ–±—Ä–µ–Ω–∏—è –∏ –ø–æ–¥–∫–æ—Ä–º–∫–∏ –¥–ª—è —Ä–∞—Å—Ç–µ–Ω–∏–π'
            },
            {
                'name': '–ì–∏–¥—Ä–æ–ø–æ–Ω–∏–∫–∞',
                'slug': 'hydroponics',
                'description': '–ì–∏–¥—Ä–æ–ø–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'
            },
            {
                'name': '–ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ',
                'slug': 'legal',
                'description': '–ù–æ–≤–æ—Å—Ç–∏ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –∫–∞–Ω–Ω–∞–±–∏—Å–µ'
            },
            {
                'name': '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
                'slug': 'research',
                'description': '–ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–∞–Ω–Ω–∞–±–∏—Å–∞'
            },
            {
                'name': '–û–±—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏',
                'slug': 'general',
                'description': '–û–±—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∫–∞–Ω–Ω–∞–±–∏—Å–∞'
            }
        ]

        categories_created = 0
        for cat_data in categories_data:
            category, created = NewsCategory.objects.get_or_create(
                slug=cat_data['slug'],
                defaults={
                    'name': cat_data['name'],
                    'description': cat_data['description']
                }
            )
            if created:
                categories_created += 1
                self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")

        # –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
        sources_data = [
            {
                'name': 'Leafly News',
                'url': 'https://www.leafly.com/news',
                'parsing_enabled': True
            },
            {
                'name': 'Leafly Strains',
                'url': 'https://www.leafly.com/strains',
                'parsing_enabled': True
            },
            {
                'name': 'Marijuana Moment',
                'url': 'https://www.marijuanamoment.net/',
                'parsing_enabled': True
            },
            {
                'name': 'Ganjapreneur News',
                'url': 'https://www.ganjapreneur.com/cannabis-news/',
                'parsing_enabled': True
            },
            {
                'name': 'Ganjapreneur Cultivation',
                'url': 'https://www.ganjapreneur.com/news/cannabis-cultivation/',
                'parsing_enabled': True
            },
            {
                'name': 'GPN Mag Cannabis',
                'url': 'https://gpnmag.com/category/cannabis/',
                'parsing_enabled': True
            },
            {
                'name': 'News-Medical Cannabis',
                'url': 'https://news-medical.net/condition/Cannabis',
                'parsing_enabled': True
            },
            {
                'name': 'Cannabis Science Tech',
                'url': 'https://www.cannabissciencetech.com/news',
                'parsing_enabled': True
            },
            {
                'name': 'CannaConnection Strains',
                'url': 'https://www.cannaconnection.com/strains',
                'parsing_enabled': True
            }
        ]

        sources_created = 0
        for source_data in sources_data:
            source, created = NewsSource.objects.get_or_create(
                url=source_data['url'],
                defaults={
                    'name': source_data['name'],
                    'parsing_enabled': source_data['parsing_enabled']
                }
            )
            if created:
                sources_created += 1
                self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω –∏—Å—Ç–æ—á–Ω–∏–∫: {source.name}")

        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n'
                f'üìö –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {categories_created}\n'
                f'üåê –°–æ–∑–¥–∞–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {sources_created}\n\n'
                f'üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥–æ–π:\n'
                f'   python manage.py parse_news\n'
            )
        )
