#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Rocket.Chat —Å –ø—Ä–æ–µ–∫—Ç–æ–º –ë–µ—Å–µ–¥–∫–∞
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∏ OAuth
"""

import requests
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from selenium.common.exceptions import TimeoutException, WebDriverException
import sys

class RocketChatIntegrationTester:
    def __init__(self):
        self.django_url = "http://127.0.0.1:8001"
        self.rocketchat_url = "http://127.0.0.1:3000"
        self.test_page_url = f"{self.django_url}/chat/test/"

        # Chrome options
        self.chrome_options = Options()
        self.chrome_options.add_argument("--no-sandbox")
        self.chrome_options.add_argument("--disable-dev-shm-usage")
        self.chrome_options.add_argument("--disable-web-security")
        self.chrome_options.add_argument("--allow-running-insecure-content")

        self.driver = None

    def setup_driver(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebDriver"""
        try:
            self.driver = webdriver.Chrome(options=self.chrome_options)
            self.driver.set_window_size(1920, 1080)
            print("‚úÖ WebDriver –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebDriver: {e}")
            return False

    def test_django_server(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Django —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            response = requests.get(self.django_url, timeout=10)
            if response.status_code == 200:
                print("‚úÖ Django —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
                return True
            else:
                print(f"‚ùå Django —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Django: {e}")
            return False

    def test_rocketchat_server(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Rocket.Chat —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            response = requests.get(self.rocketchat_url, timeout=10)
            if response.status_code == 200:
                print("‚úÖ Rocket.Chat —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
                return True
            else:
                print(f"‚ùå Rocket.Chat —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Rocket.Chat: {e}")
            return False

    def test_oauth_endpoints(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ OAuth endpoints"""
        oauth_url = f"{self.django_url}/o/authorize/"
        try:
            params = {
                'client_id': 'BesedkaRocketChat2025',
                'redirect_uri': 'http://127.0.0.1:3000/_oauth/besedka',
                'response_type': 'code',
                'scope': 'rocketchat'
            }
            response = requests.get(oauth_url, params=params, timeout=10, allow_redirects=False)
            print(f"‚úÖ OAuth endpoint –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ OAuth endpoints: {e}")
            return False

    def test_chat_test_page(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–∞—Ç–∞"""
        if not self.driver:
            print("‚ùå WebDriver –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False

        try:
            print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–∞—Ç–∞...")
            self.driver.get(self.test_page_url)

            WebDriverWait(self.driver, 10).until(
                EC.presence_of_element_located((By.TAG_NAME, "body"))
            )

            print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

            try:
                iframe = WebDriverWait(self.driver, 5).until(
                    EC.presence_of_element_located((By.TAG_NAME, "iframe"))
                )
                print("‚úÖ Iframe –Ω–∞–π–¥–µ–Ω")

                self.driver.switch_to.frame(iframe)
                time.sleep(5)

                page_source = self.driver.page_source

                if "We're not connected" in page_source or "–ú—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã" in page_source:
                    print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê: '–ú—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã'")
                    return False
                elif "rocket.chat" in page_source.lower():
                    print("‚úÖ Rocket.Chat –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω")
                    return True
                else:
                    print("‚ùì –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Rocket.Chat")
                    print(f"–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤: {page_source[:500]}")
                    return False

            except TimeoutException:
                print("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è")
                return False

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
            return False
        finally:
            self.driver.switch_to.default_content()

    def run_full_test(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"""
        print("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ROCKET.CHAT –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
        print("=" * 60)

        tests = [
            ("Django —Å–µ—Ä–≤–µ—Ä", self.test_django_server),
            ("Rocket.Chat —Å–µ—Ä–≤–µ—Ä", self.test_rocketchat_server),
            ("OAuth endpoints", self.test_oauth_endpoints),
        ]

        for test_name, test_func in tests:
            print(f"\nüîç –¢–µ—Å—Ç: {test_name}")
            result = test_func()
            if not result:
                print(f"‚ö†Ô∏è –¢–µ—Å—Ç '{test_name}' –ø—Ä–æ–≤–∞–ª–µ–Ω")

        print(f"\nüîç –¢–µ—Å—Ç: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        if self.setup_driver():
            browser_result = self.test_chat_test_page()
            if not browser_result:
                print("‚ö†Ô∏è –¢–µ—Å—Ç –±—Ä–∞—É–∑–µ—Ä–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω")

            input("\nüëÄ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏. –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å...")
            self.driver.quit()

        print("\n" + "=" * 60)
        print("üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")

if __name__ == "__main__":
    tester = RocketChatIntegrationTester()
    tester.run_full_test()
