#!/usr/bin/env python
"""
–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–õ–û–ú–ê–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.local')
django.setup()

from django.contrib.auth import get_user_model
from django.db import transaction

User = get_user_model()

def fix_broken_users():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª–æ–º–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""

    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–õ–û–ú–ê–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 60)

    with transaction.atomic():

        # 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è owner
        try:
            owner = User.objects.get(username='owner')
            owner.set_password('owner123secure')  # –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–ê–†–û–õ–¨ –ü–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò
            owner.save()
            print("‚úÖ –ü–∞—Ä–æ–ª—å owner –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ 'owner123secure'")
        except User.DoesNotExist:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # 2. –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è AnonymousUser
        try:
            anonymous = User.objects.get(username='AnonymousUser')
            anonymous.delete()
            print("‚úÖ –õ–∏—à–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å AnonymousUser —É–¥–∞–ª–µ–Ω")
        except User.DoesNotExist:
            print("‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å AnonymousUser –Ω–µ –Ω–∞–π–¥–µ–Ω (—É–∂–µ —É–¥–∞–ª–µ–Ω)")

        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        expected_users = [
            ('owner', 'owner', True, True, 'owner123secure'),
            ('admin', 'moderator', True, False, 'admin123secure'),
            ('store_owner', 'store_owner', True, False, 'storeowner123secure'),
            ('store_admin', 'store_admin', True, False, 'storeadmin123secure'),
            ('test_user', 'user', False, False, 'user123secure')
        ]

        for username, role, is_staff, is_superuser, password in expected_users:
            user, created = User.objects.get_or_create(
                username=username,
                defaults={
                    'role': role,
                    'is_staff': is_staff,
                    'is_superuser': is_superuser,
                    'is_active': True,
                    'email': f'{username}@besedka.com'
                }
            )

            if created:
                user.set_password(password)
                user.save()
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username}")
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–æ–ª—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                if user.role != role:
                    user.role = role
                    user.is_staff = is_staff
                    user.is_superuser = is_superuser
                    user.save()
                    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å {username}: {role}")

    print("\nüéØ –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    from django.contrib.auth import authenticate

    for username, _, _, _, password in expected_users:
        user = authenticate(username=username, password=password)
        if user:
            print(f"   ‚úÖ {username}: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå {username}: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç")

    print(f"\nüìä –ò—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: {User.objects.count()}")

    print("\nüéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
    print("\nüîë –ü–†–ê–í–ò–õ–¨–ù–´–ï –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï:")
    print("   owner / owner123secure")
    print("   admin / admin123secure")
    print("   store_owner / storeowner123secure")
    print("   store_admin / storeadmin123secure")
    print("   test_user / user123secure")

if __name__ == "__main__":
    fix_broken_users()
