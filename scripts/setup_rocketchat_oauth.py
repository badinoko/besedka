import requests
import json
import time

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Rocket.Chat
ROCKETCHAT_URL = "http://127.0.0.1:3000"
ADMIN_USERNAME = "owner"  # –í–∞—à –∞–¥–º–∏–Ω –≤ Rocket.Chat
ADMIN_PASSWORD = "owner123secure"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã OAuth
OAUTH_CONFIG = {
    "name": "besedka",
    "serverURL": "http://127.0.0.1:8001",
    "tokenPath": "/o/token/",
    "tokenSentVia": "header",
    "identityTokenSentVia": "header",
    "identityPath": "/api/v1/auth/rocket/",
    "authorizePath": "/o/authorize/",
    "scope": "read",
    "accessTokenParam": "access_token",
    "id": "BesedkaRocketChat2025",
    "secret": "SecureSecretKey2025BesedkaRocketChatSSO",
    "loginStyle": "redirect",
    "buttonText": "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É",
    "buttonTextColor": "#ffffff",
    "buttonColor": "#28a745",
    "usernameField": "username",
    "emailField": "email",
    "nameField": "display_name",
    "avatarField": "avatar_url",
    "rolesClaim": "role",
    "groupsClaim": "groups",
    "mergeUsers": True,
    "showButton": True,
    "enable": True
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏–Ω–∞ –≤ Rocket.Chat
def login_to_rocketchat():
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Rocket.Chat...")

    login_data = {
        "user": ADMIN_USERNAME,
        "password": ADMIN_PASSWORD
    }

    response = requests.post(
        f"{ROCKETCHAT_URL}/api/v1/login",
        json=login_data
    )

    if response.status_code == 200:
        data = response.json()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
        return {
            "X-Auth-Token": data["data"]["authToken"],
            "X-User-Id": data["data"]["userId"]
        }
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è TOTP
def disable_totp(headers):
    print("\nüîì –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–∏—Ç—å TOTP —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è API...")

    # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫–ª—é—á–∏—Ç—å TOTP –¥–ª—è API –≤—ã–∑–æ–≤–æ–≤
    response = requests.post(
        f"{ROCKETCHAT_URL}/api/v1/settings/API_Enable_Rate_Limiter_Limit_Time_Default",
        headers=headers,
        json={"value": 60000}
    )

    if response.status_code == 200:
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å 2FA –≤ UI")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth
def setup_oauth(headers):
    print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Custom OAuth...")

    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    check_response = requests.get(
        f"{ROCKETCHAT_URL}/api/v1/settings/Accounts_OAuth_Custom-besedka",
        headers=headers
    )

    if check_response.status_code == 200:
        print("‚ÑπÔ∏è  OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º...")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    settings = {
        "Accounts_OAuth_Custom-besedka": True,
        "Accounts_OAuth_Custom-besedka-url": OAUTH_CONFIG["serverURL"],
        "Accounts_OAuth_Custom-besedka-token_path": OAUTH_CONFIG["tokenPath"],
        "Accounts_OAuth_Custom-besedka-token_sent_via": OAUTH_CONFIG["tokenSentVia"],
        "Accounts_OAuth_Custom-besedka-identity_token_sent_via": OAUTH_CONFIG["identityTokenSentVia"],
        "Accounts_OAuth_Custom-besedka-identity_path": OAUTH_CONFIG["identityPath"],
        "Accounts_OAuth_Custom-besedka-authorize_path": OAUTH_CONFIG["authorizePath"],
        "Accounts_OAuth_Custom-besedka-scope": OAUTH_CONFIG["scope"],
        "Accounts_OAuth_Custom-besedka-access_token_param": OAUTH_CONFIG["accessTokenParam"],
        "Accounts_OAuth_Custom-besedka-id": OAUTH_CONFIG["id"],
        "Accounts_OAuth_Custom-besedka-secret": OAUTH_CONFIG["secret"],
        "Accounts_OAuth_Custom-besedka-login_style": OAUTH_CONFIG["loginStyle"],
        "Accounts_OAuth_Custom-besedka-button_text": OAUTH_CONFIG["buttonText"],
        "Accounts_OAuth_Custom-besedka-button_text_color": OAUTH_CONFIG["buttonTextColor"],
        "Accounts_OAuth_Custom-besedka-button_color": OAUTH_CONFIG["buttonColor"],
        "Accounts_OAuth_Custom-besedka-username_field": OAUTH_CONFIG["usernameField"],
        "Accounts_OAuth_Custom-besedka-email_field": OAUTH_CONFIG["emailField"],
        "Accounts_OAuth_Custom-besedka-name_field": OAUTH_CONFIG["nameField"],
        "Accounts_OAuth_Custom-besedka-avatar_field": OAUTH_CONFIG["avatarField"],
        "Accounts_OAuth_Custom-besedka-roles_claim": OAUTH_CONFIG["rolesClaim"],
        "Accounts_OAuth_Custom-besedka-groups_claim": OAUTH_CONFIG["groupsClaim"],
        "Accounts_OAuth_Custom-besedka-merge_users": OAUTH_CONFIG["mergeUsers"],
        "Accounts_OAuth_Custom-besedka-show_button": OAUTH_CONFIG["showButton"],
        "Accounts_OAuth_Custom-besedka-enable": OAUTH_CONFIG["enable"]
    }

    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–∞–∂–¥—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    for setting_id, value in settings.items():
        print(f"  üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ {setting_id}...")

        response = requests.post(
            f"{ROCKETCHAT_URL}/api/v1/settings/{setting_id}",
            headers=headers,
            json={"value": value}
        )

        if response.status_code == 200:
            print(f"  ‚úÖ {setting_id} –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ {setting_id}: {response.text}")

    print("\n‚úÖ OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è iframe –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
def disable_iframe_restrictions(headers):
    print("\nüîì –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π iframe...")

    response = requests.post(
        f"{ROCKETCHAT_URL}/api/v1/settings/Restrict_access_inside_any_Iframe",
        headers=headers,
        json={"value": False}
    )

    if response.status_code == 200:
        print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è iframe –æ—Ç–∫–ª—é—á–µ–Ω—ã!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤
def create_channels(headers):
    print("\nüì¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤...")

    channels = [
        {"name": "vip", "members": [], "readOnly": False},
        {"name": "moderators", "members": [], "readOnly": False}  # –ò–∑–º–µ–Ω–∏–ª —Å admin –Ω–∞ moderators
    ]

    for channel in channels:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª
        check_response = requests.get(
            f"{ROCKETCHAT_URL}/api/v1/channels.info?roomName={channel['name']}",
            headers=headers
        )

        if check_response.status_code == 200:
            print(f"‚ÑπÔ∏è  –ö–∞–Ω–∞–ª #{channel['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
            response = requests.post(
                f"{ROCKETCHAT_URL}/api/v1/channels.create",
                headers=headers,
                json=channel
            )

            if response.status_code == 200:
                print(f"‚úÖ –ö–∞–Ω–∞–ª #{channel['name']} —Å–æ–∑–¥–∞–Ω!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ #{channel['name']}: {response.text}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth –≤ Rocket.Chat")
    print("=" * 50)

    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    headers = login_to_rocketchat()
    if not headers:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å.")
        return

    # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫–ª—é—á–∏—Ç—å TOTP
    disable_totp(headers)

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OAuth
    setup_oauth(headers)

    # –û—Ç–∫–ª—é—á–∞–µ–º iframe –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    disable_iframe_restrictions(headers)

    # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª—ã
    create_channels(headers)

    print("\n" + "=" * 50)
    print("üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
    print("1. –í—ã–π—Ç–∏ –∏–∑ Rocket.Chat")
    print("2. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞ —É–≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫—É '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É'")
    print("3. –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Django!")

if __name__ == "__main__":
    main()
