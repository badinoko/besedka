// –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª–µ GENERAL
// –î–∞—Ç–∞: 22 –∏—é–Ω—è 2025 –≥.
// –¶–µ–ª—å: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–µ—Ä–∞–±–æ—á–µ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª–µ GENERAL

print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ü–û–õ–ï–ú –í–í–û–î–ê –í –ö–ê–ù–ê–õ–ï GENERAL");
print("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");

// –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const ownerUser = db.users.findOne({username: 'owner'});
if (!ownerUser) {
    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    quit();
}

print(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${ownerUser.username} (ID: ${ownerUser._id})`);

// –ù–∞—Ö–æ–¥–∏–º –∫–∞–Ω–∞–ª GENERAL
const generalChannel = db.rocketchat_room.findOne({_id: 'GENERAL'});
if (!generalChannel) {
    print("‚ùå –ö–∞–Ω–∞–ª GENERAL –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    quit();
}

print(`‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: ${generalChannel.name} (ID: ${generalChannel._id})`);

// 1. –ü–†–û–í–ï–†–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–î–ü–ò–°–ö–ò
print("\nüìã –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò:");
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");

const subscription = db.rocketchat_subscription.findOne({
    rid: 'GENERAL',
    'u._id': ownerUser._id
});

if (subscription) {
    print(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ${subscription._id}`);
    print(`   - –†–æ–ª–∏: ${subscription.roles || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}`);
    print(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${subscription.blocked || false}`);
    print(`   - –ó–∞–≥–ª—É—à–µ–Ω: ${subscription.muted || false}`);

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    let needsUpdate = false;
    const updates = {};

    if (subscription.blocked) {
        updates.blocked = false;
        needsUpdate = true;
        print("   üîß –£–±–∏—Ä–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É");
    }

    if (subscription.muted) {
        updates.muted = false;
        needsUpdate = true;
        print("   üîß –£–±–∏—Ä–∞–µ–º –∑–∞–≥–ª—É—à–µ–Ω–∏–µ");
    }

    if (!subscription.roles || subscription.roles.length === 0) {
        updates.roles = ['owner'];
        needsUpdate = true;
        print("   üîß –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å owner");
    }

    if (needsUpdate) {
        updates._updatedAt = new Date();
        const result = db.rocketchat_subscription.updateOne(
            {_id: subscription._id},
            {$set: updates}
        );
        print(`   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${result.modifiedCount} –∑–∞–ø–∏—Å–µ–π`);
    } else {
        print("   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è");
    }
} else {
    print("‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É...");

    const newSubscription = {
        _id: `C2Jx7u98y8F6nFoey${generalChannel._id}`,
        open: true,
        alert: true,
        unread: 0,
        userMentions: 0,
        groupMentions: 0,
        ts: new Date(),
        rid: generalChannel._id,
        name: generalChannel.name,
        fname: generalChannel.fname,
        customFields: {},
        broadcast: false,
        encrypted: false,
        E2EKey: '',
        tunread: [],
        tunreadGroup: [],
        tunreadUser: [],
        u: {
            _id: ownerUser._id,
            username: ownerUser.username,
            name: ownerUser.name || ownerUser.username
        },
        roles: ['owner'],
        _updatedAt: new Date()
    };

    const result = db.rocketchat_subscription.insertOne(newSubscription);
    print(`   ‚úÖ –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ${result.insertedId}`);
}

// 2. –ü–†–û–í–ï–†–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–ß–ê–°–¢–ù–ò–ö–û–í –ö–ê–ù–ê–õ–ê
print("\nüë• –ü–†–û–í–ï–†–ö–ê –£–ß–ê–°–¢–ù–ò–ö–û–í –ö–ê–ù–ê–õ–ê:");
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ owner –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞
const channelData = db.rocketchat_room.findOne({_id: 'GENERAL'});
const userIds = channelData.uids || [];
const usernames = channelData.usernames || [];

print(`üìä –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ: ${userIds.length}`);
print(`   - IDs: ${userIds.slice(0, 3).join(', ')}${userIds.length > 3 ? '...' : ''}`);
print(`   - Usernames: ${usernames.slice(0, 3).join(', ')}${usernames.length > 3 ? '...' : ''}`);

if (!userIds.includes(ownerUser._id)) {
    print("‚ùå owner –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∫–∞–Ω–∞–ª–∞! –î–æ–±–∞–≤–ª—è–µ–º...");

    const updateResult = db.rocketchat_room.updateOne(
        {_id: 'GENERAL'},
        {
            $addToSet: {
                uids: ownerUser._id,
                usernames: ownerUser.username
            },
            $inc: {usersCount: 1},
            $set: {_updatedAt: new Date()}
        }
    );

    print(`   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω: ${updateResult.modifiedCount} –∑–∞–ø–∏—Å–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ`);
} else {
    print("‚úÖ owner –Ω–∞–π–¥–µ–Ω –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∫–∞–Ω–∞–ª–∞");
}

// 3. –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –ö–ê–ù–ê–õ–ê
print("\n‚öôÔ∏è –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –ö–ê–ù–ê–õ–ê:");
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");

const channelSettings = {
    ro: false,        // –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
    sysMes: true,     // —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã
    default: true,    // –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    featured: true    // —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∫–∞–Ω–∞–ª
};

let channelNeedsUpdate = false;
const channelUpdates = {};

Object.keys(channelSettings).forEach(key => {
    if (channelData[key] !== channelSettings[key]) {
        channelUpdates[key] = channelSettings[key];
        channelNeedsUpdate = true;
        print(`   üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${key}: ${channelData[key]} ‚Üí ${channelSettings[key]}`);
    } else {
        print(`   ‚úÖ ${key}: ${channelData[key]} (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)`);
    }
});

if (channelNeedsUpdate) {
    channelUpdates._updatedAt = new Date();
    const result = db.rocketchat_room.updateOne(
        {_id: 'GENERAL'},
        {$set: channelUpdates}
    );
    print(`   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ${result.modifiedCount} –∑–∞–ø–∏—Å–µ–π`);
} else {
    print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ");
}

// 4. –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø
print("\nüí¨ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø:");
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");

const testMessage = {
    _id: 'test-message-' + Date.now(),
    rid: 'GENERAL',
    ts: new Date(),
    msg: '–¢–µ—Å—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ - ' + new Date().toLocaleTimeString(),
    u: {
        _id: ownerUser._id,
        username: ownerUser.username,
        name: ownerUser.name || ownerUser.username
    },
    _updatedAt: new Date(),
    urls: [],
    mentions: [],
    channels: [],
    md: [
        {
            type: 'PARAGRAPH',
            value: [
                {
                    type: 'PLAIN_TEXT',
                    value: '–¢–µ—Å—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ - ' + new Date().toLocaleTimeString()
                }
            ]
        }
    ]
};

try {
    const msgResult = db.rocketchat_message.insertOne(testMessage);
    print(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${msgResult.insertedId}`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ
    db.rocketchat_room.updateOne(
        {_id: 'GENERAL'},
        {
            $inc: {msgs: 1},
            $set: {
                lm: testMessage.ts,
                _updatedAt: new Date()
            }
        }
    );

    print("‚úÖ –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω");
} catch (error) {
    print(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
}

print("\nüéØ –ò–¢–û–ì–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:");
print("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner –Ω–∞ –∫–∞–Ω–∞–ª GENERAL –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞/—Å–æ–∑–¥–∞–Ω–∞");
print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –¥–æ–±–∞–≤–ª–µ–Ω –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–∞–Ω–∞–ª–∞");
print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ GENERAL –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã");
print("‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏");
print("");
print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:");
print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Rocket.Chat: docker-compose restart rocketchat");
print("2. –û—Ç–∫—Ä–æ–π—Ç–µ http://127.0.0.1:8001/chat/integrated/");
print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø–æ–ª—è –≤–≤–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª–µ GENERAL");
print("");
print("–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω–∞ —Å–≤—è–∑–∞–Ω–∞ —Å iframe —Ä–µ–∂–∏–º–æ–º.");
