#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º—É—Å–æ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö
"""

import os
import glob

# –†–ê–ë–û–ß–ò–ï –°–ö–†–ò–ü–¢–´ (–ù–ï –£–î–ê–õ–Ø–¢–¨!)
working_scripts = {
    'WORKING_SOLUTION_FINAL.py',
    'auto_setup_after_wizard.py',
    'backup_rocketchat.py',
    'auto_rocketchat.py',
    'clean_duplicate_vip.js',
    'disable_join_button.js',
    'subscribe_to_general.js',
    'fix_user_subscriptions_final.js',
    'quick_backup.py',
    'cleanup_scripts.py',  # –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–æ–∂–µ –Ω–µ —É–¥–∞–ª—è–µ–º
    'cleanup_scripts.bat'  # –ò –±–∞—Ç—á —Ñ–∞–π–ª —Ç–æ–∂–µ
}

def cleanup_scripts():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –º—É—Å–æ—Ä–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã"""

    scripts_dir = 'scripts'
    if not os.path.exists(scripts_dir):
        print(f"‚ùå –ü–∞–ø–∫–∞ {scripts_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ JS –∏ Python —Ñ–∞–π–ª—ã
    all_files = []
    for ext in ['*.js', '*.py']:
        all_files.extend(glob.glob(os.path.join(scripts_dir, ext)))

    # –°—á–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã
    total_files = len(all_files)
    deleted_count = 0
    kept_count = 0

    print(f"üîç –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_files}")
    print(f"üìã –†–∞–±–æ—á–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ (–Ω–µ —É–¥–∞–ª—è–µ–º): {len(working_scripts)}")
    print()

    # –£–¥–∞–ª—è–µ–º –º—É—Å–æ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã
    for file_path in all_files:
        filename = os.path.basename(file_path)

        if filename in working_scripts:
            print(f"‚úÖ –û–°–¢–ê–í–õ–Ø–Æ: {filename}")
            kept_count += 1
        else:
            try:
                os.remove(file_path)
                print(f"üóëÔ∏è  –£–î–ê–õ–ï–ù: {filename}")
                deleted_count += 1
            except Exception as e:
                print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {filename}: {e}")

    print()
    print(f"üìä –ò–¢–û–ì–û:")
    print(f"   - –£–¥–∞–ª–µ–Ω–æ: {deleted_count} –º—É—Å–æ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    print(f"   - –û—Å—Ç–∞–≤–ª–µ–Ω–æ: {kept_count} —Ä–∞–±–æ—á–∏—Ö —Ñ–∞–π–ª–æ–≤")
    print()
    print("üéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")

if __name__ == "__main__":
    cleanup_scripts()
