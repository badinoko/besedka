// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
print("=== –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø OWNER ===");

// –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const user = db.users.findOne({username: "owner"});
if (!user) {
    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    quit();
}

print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: " + user.username + " (ID: " + user._id + ")");

// –ù–∞–π—Ç–∏ –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const subscriptions = db.rocketchat_subscription.find({
    "u._id": user._id
}).toArray();

print("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫: " + subscriptions.length);
print("");

if (subscriptions.length === 0) {
    print("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï–¢ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª—ã!");
} else {
    print("üìã –ü–û–î–ü–ò–°–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:");
    subscriptions.forEach(function(sub) {
        print("  - –ö–∞–Ω–∞–ª: " + sub.name + " (ID: " + sub.rid + ")");
        print("    –¢–∏–ø: " + sub.t);
        print("    –†–æ–ª—å: " + (sub.roles ? sub.roles.join(", ") : "user"));
        print("    –û—Ç–∫—Ä—ã—Ç: " + sub.open);
        print("");
    });
}

// –ù–∞–π—Ç–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
print("üìã –í–°–ï –î–û–°–¢–£–ü–ù–´–ï –ö–ê–ù–ê–õ–´:");
const rooms = db.rocketchat_room.find({t: "c"}).toArray();
rooms.forEach(function(room) {
    print("  - " + room.name + " (ID: " + room._id + ")");
});
