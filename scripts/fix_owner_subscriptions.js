// –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ü–û–î–ü–ò–°–û–ö –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø OWNER
// 21 –∏—é–Ω—è 2025 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏

print('üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ü–û–î–ü–ò–°–û–ö...');

// –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const owner = db.users.findOne({ username: 'owner' });
if (!owner) {
    print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    quit();
}

print(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${owner.username} (ID: ${owner._id})`);

// –†–ï–ê–õ–¨–ù–´–ï ID –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã
const channelIds = ['GENERAL', 'vip-chat', 'moderators'];

channelIds.forEach(channelId => {
    const room = db.rocketchat_room.findOne({ _id: channelId });

    if (!room) {
        print(`‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${channelId}`);
        return;
    }

    print(`\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–∞–Ω–∞–ª: ${room.name} (ID: ${room._id})`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    let subscription = db.rocketchat_subscription.findOne({
        'u._id': owner._id,
        rid: room._id
    });

    if (!subscription) {
        print(`  ‚ùå –ü–û–î–ü–ò–°–ö–ê –ù–ï –ù–ê–ô–î–ï–ù–ê - –°–û–ó–î–ê–Æ –ù–û–í–£–Æ`);

        // –°–û–ó–î–ê–ï–ú –ù–û–í–£–Æ –ü–û–î–ü–ò–°–ö–£
        const newSubscription = {
            _id: new ObjectId(),
            u: {
                _id: owner._id,
                username: owner.username,
                name: owner.name || owner.username
            },
            rid: room._id,
            name: room.name,
            fname: room.fname || room.name,
            t: room.t,
            open: true,
            alert: false,
            unread: 0,
            userMentions: 0,
            groupMentions: 0,
            ts: new Date(),
            lr: new Date(),
            ls: new Date(),
            _updatedAt: new Date()
        };

        const insertResult = db.rocketchat_subscription.insertOne(newSubscription);
        if (insertResult.acknowledged) {
            print(`  ‚úÖ –ù–û–í–ê–Ø –ü–û–î–ü–ò–°–ö–ê –°–û–ó–î–ê–ù–ê`);
        } else {
            print(`  ‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ü–û–î–ü–ò–°–ö–ò`);
        }

        subscription = newSubscription;
    } else {
        print(`  ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

        // –û–ë–ù–û–í–õ–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–£–Æ –ü–û–î–ü–ò–°–ö–£
        const updateResult = db.rocketchat_subscription.updateOne(
            { _id: subscription._id },
            {
                $set: {
                    open: true,
                    alert: false,
                    unread: 0,
                    ls: new Date(),
                    lr: new Date(),
                    _updatedAt: new Date()
                }
            }
        );

        if (updateResult.modifiedCount > 0) {
            print(`  ‚úÖ –ü–û–î–ü–ò–°–ö–ê –û–ë–ù–û–í–õ–ï–ù–ê`);
        }
    }

    // –î–û–ë–ê–í–õ–Ø–ï–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –í –°–ü–ò–°–û–ö –£–ß–ê–°–¢–ù–ò–ö–û–í –ö–ê–ù–ê–õ–ê
    const roomUpdateResult = db.rocketchat_room.updateOne(
        { _id: room._id },
        {
            $addToSet: {
                usernames: owner.username
            },
            $set: {
                _updatedAt: new Date()
            }
        }
    );

    if (roomUpdateResult.modifiedCount > 0) {
        print(`  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞`);
    } else {
        print(`  ‚ÑπÔ∏è –£–∂–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`);
    }
});

print('\nüéâ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');

// –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê
print('\n=== –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê ===');
const finalCheck = db.rocketchat_subscription.find({'u.username': 'owner'}).count();
print(`üìä –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫ —É owner: ${finalCheck}`);

channelIds.forEach(channelId => {
    const room = db.rocketchat_room.findOne({ _id: channelId });
    if (!room) return;

    const subscription = db.rocketchat_subscription.findOne({
        'u._id': owner._id,
        rid: room._id
    });

    if (subscription) {
        print(`‚úÖ ${room.name}: –ü–û–î–ü–ò–°–ö–ê –ê–ö–¢–ò–í–ù–ê`);
    } else {
        print(`‚ùå ${room.name}: –ü–û–î–ü–ò–°–ö–ê –û–¢–°–£–¢–°–¢–í–£–ï–¢`);
    }
});

print('\nüöÄ –¢–ï–ü–ï–†–¨ owner –î–û–õ–ñ–ï–ù –í–ò–î–ï–¢–¨ –í–°–ï 3 –ö–ê–ù–ê–õ–ê!');
