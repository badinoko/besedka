// ===================================================================
// –ü–û–õ–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï ROCKET.CHAT –°–û–ì–õ–ê–°–ù–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò –ü–†–û–ï–ö–¢–ê
// ===================================================================
// –°–æ–≥–ª–∞—Å–Ω–æ BESEDKA_USER_SYSTEM.md –∏ ROCKETCHAT_MIGRATION_PLAN_V3.md
// ===================================================================

print('üöÄ –ü–û–õ–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï ROCKET.CHAT –°–û–ì–õ–ê–°–ù–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò...');

// ===================================================================
// 1. –°–ò–°–¢–ï–ú–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô (–∏–∑ BESEDKA_USER_SYSTEM.md)
// ===================================================================

const users = [
    {
        username: 'owner',
        role: 'owner',
        name: 'Platform Owner',
        email: 'owner@besedka.com',
        chatAccess: ['general', 'vip', 'moderators'],
        rocketchatRoles: ['admin', 'moderator', 'user']
    },
    {
        username: 'admin',
        role: 'moderator',
        name: 'Platform Moderator',
        email: 'admin@besedka.com',
        chatAccess: ['general', 'moderators'],
        rocketchatRoles: ['moderator', 'user']
    },
    {
        username: 'store_owner',
        role: 'store_owner',
        name: 'Store Owner',
        email: 'store.owner@magicbeans.com',
        chatAccess: ['general'],
        rocketchatRoles: ['user']
    },
    {
        username: 'store_admin',
        role: 'store_admin',
        name: 'Store Admin',
        email: 'store.admin@magicbeans.com',
        chatAccess: ['general'],
        rocketchatRoles: ['user']
    },
    {
        username: 'test_user',
        role: 'user',
        name: 'Test User',
        email: 'test.user@besedka.com',
        chatAccess: ['general'],
        rocketchatRoles: ['user']
    }
];

// ===================================================================
// 2. –°–¢–†–£–ö–¢–£–†–ê –ö–ê–ù–ê–õ–û–í (–∏–∑ ROCKETCHAT_MIGRATION_PLAN_V3.md)
// ===================================================================

const channels = [
    {
        id: 'general',
        name: 'general',
        displayName: '–û–±—â–∏–π —á–∞—Ç',
        description: '–û–±—â–∏–π —á–∞—Ç –¥–ª—è –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        type: 'c',
        default: true
    },
    {
        id: 'vip',
        name: 'vip',
        displayName: 'VIP —á–∞—Ç',
        description: 'VIP —á–∞—Ç (–≤–ª–∞–¥–µ–ª–µ—Ü –≤—Ä—É—á–Ω—É—é —Ä–∞–∑–¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø)',
        type: 'c',
        default: false
    },
    {
        id: 'moderators',
        name: 'moderators',
        displayName: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã',
        description: '–ê–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç (–≤–ª–∞–¥–µ–ª–µ—Ü + –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–≤–µ—â–∞–Ω–∏–π)',
        type: 'c',
        default: false
    }
];

// ===================================================================
// 3. –û–ß–ò–°–¢–ö–ê –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–• –î–ê–ù–ù–´–•
// ===================================================================

print('üßπ –û—á–∏—â–∞—é –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');

// –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã (–ù–ï –£–î–ê–õ–Ø–ï–ú general, vip, moderators!)
const wrongChannels = ['vip-chat', 'GENERAL'];
wrongChannels.forEach(wrongId => {
    const wrongChannel = db.rocketchat_room.findOne({ _id: wrongId });
    if (wrongChannel) {
        print(`  ‚ùå –£–¥–∞–ª—è—é –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª: ${wrongId}`);
        db.rocketchat_room.deleteOne({ _id: wrongId });
        db.rocketchat_subscription.deleteMany({ rid: wrongId });
    }
});

// –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è (–ù–ï –£–î–ê–õ–Ø–ï–ú –ö–ê–ù–ê–õ–´!)
print('  üßπ –û—á–∏—â–∞—é —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è...');
db.rocketchat_subscription.deleteMany({});

// ===================================================================
// 4. –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
// ===================================================================

print('üë• –°–æ–∑–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ BESEDKA_USER_SYSTEM.md...');

users.forEach(userData => {
    const existingUser = db.users.findOne({ username: userData.username });

    if (!existingUser) {
        const userId = userData.username === 'owner' ? 'owner' : userData.username;
        const userDoc = {
            _id: userId,
            username: userData.username,
            name: userData.name,
            emails: [{ address: userData.email, verified: true }],
            type: 'user',
            status: 'online',
            active: true,
            roles: userData.rocketchatRoles,
            requirePasswordChange: false,
            createdAt: new Date(),
            _updatedAt: new Date(),
            customFields: {
                besedkaRole: userData.role
            }
        };

        db.users.insertOne(userDoc);
        print(`  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.username} (—Ä–æ–ª—å: ${userData.role})`);
    } else {
        print(`  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${userData.username}`);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        db.users.updateOne(
            { username: userData.username },
            {
                $set: {
                    roles: userData.rocketchatRoles,
                    'customFields.besedkaRole': userData.role
                }
            }
        );
    }
});

// ===================================================================
// 5. –°–û–ó–î–ê–ù–ò–ï –ö–ê–ù–ê–õ–û–í
// ===================================================================

print('üí¨ –°–æ–∑–¥–∞—é –∫–∞–Ω–∞–ª—ã —Å–æ–≥–ª–∞—Å–Ω–æ ROCKETCHAT_MIGRATION_PLAN_V3.md...');

channels.forEach(channelData => {
    const existingChannel = db.rocketchat_room.findOne({ _id: channelData.id });

    if (!existingChannel) {
        const channelDoc = {
            _id: channelData.id,
            name: channelData.name,
            fname: channelData.displayName,
            t: channelData.type,
            description: channelData.description,
            default: channelData.default,
            msgs: 0,
            usersCount: 0,
            u: {
                _id: 'owner',
                username: 'owner'
            },
            ts: new Date(),
            ro: false,
            sysMes: true,
            _updatedAt: new Date()
        };

        db.rocketchat_room.insertOne(channelDoc);
        print(`  ‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª: ${channelData.displayName} (${channelData.id})`);
    } else {
        print(`  ‚úÖ –ö–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${channelData.displayName} (${channelData.id}) - –°–û–•–†–ê–ù–Ø–ï–ú –°–û–û–ë–©–ï–ù–ò–Ø`);

        // –û–±–Ω–æ–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–∞, –ù–ï –¢–†–û–ì–ê–ï–ú –°–û–û–ë–©–ï–ù–ò–Ø
        db.rocketchat_room.updateOne(
            { _id: channelData.id },
            {
                $set: {
                    name: channelData.name,
                    fname: channelData.displayName,
                    description: channelData.description,
                    default: channelData.default,
                    _updatedAt: new Date()
                }
            }
        );
    }
});

// ===================================================================
// 6. –°–û–ó–î–ê–ù–ò–ï –ü–û–î–ü–ò–°–û–ö (–ü–†–ê–í–ê –î–û–°–¢–£–ü–ê)
// ===================================================================

print('üîê –°–æ–∑–¥–∞—é –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞...');

users.forEach(userData => {
    const user = db.users.findOne({ username: userData.username });
    if (!user) return;

    userData.chatAccess.forEach(channelId => {
        const channel = db.rocketchat_room.findOne({ _id: channelId });
        if (!channel) return;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ
        let channelRoles = ['user'];
        if (userData.role === 'owner') {
            if (channelId === 'general') channelRoles = ['owner'];
            else if (channelId === 'vip') channelRoles = ['owner', 'vip'];
            else if (channelId === 'moderators') channelRoles = ['owner', 'moderator'];
        } else if (userData.role === 'moderator') {
            if (channelId === 'moderators') channelRoles = ['moderator'];
        }

        const subscription = {
            _id: `${user._id}-${channelId}`,
            t: channel.t,
            ts: new Date(),
            name: channel.name,
            fname: channel.fname,
            rid: channelId,
            u: {
                _id: user._id,
                username: user.username,
                name: user.name
            },
            open: true,
            alert: false,
            unread: 0,
            userMentions: 0,
            groupMentions: 0,
            ls: new Date(),
            lr: new Date(),
            roles: channelRoles,
            _updatedAt: new Date()
        };

        db.rocketchat_subscription.insertOne(subscription);
        print(`  ‚úÖ ${userData.username} ‚Üí ${channel.fname} (—Ä–æ–ª–∏: ${channelRoles.join(', ')})`);
    });
});

// ===================================================================
// 7. –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –ü–ê–†–ê–ú–ï–¢–†–û–í
// ===================================================================

print('‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...');

const settings = [
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É Join Channel
    { _id: 'Accounts_RequireNameForSignUp', value: false },
    { _id: 'Accounts_RequirePasswordConfirmation', value: false },
    { _id: 'Accounts_EmailVerification', value: false },
    { _id: 'Accounts_ManuallyApproveNewUsers', value: false },
    { _id: 'Accounts_AllowAnonymousRead', value: true },
    { _id: 'Accounts_AllowAnonymousWrite', value: false },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    { _id: 'Site_Name', value: '–ë–µ—Å–µ–¥–∫–∞ Chat' },
    { _id: 'Language', value: 'ru' },
    { _id: 'UI_Use_Real_Name', value: true },
    { _id: 'UI_Allow_room_names_with_special_chars', value: true }
];

settings.forEach(setting => {
    db.rocketchat_settings.updateOne(
        { _id: setting._id },
        { $set: { value: setting.value, _updatedAt: new Date() } },
        { upsert: true }
    );
});

print('  ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');

// ===================================================================
// 8. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
// ===================================================================

print('');
print('üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userCount = db.users.countDocuments({ type: 'user' });
print(`  üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}`);

users.forEach(userData => {
    const user = db.users.findOne({ username: userData.username });
    if (user) {
        print(`  ‚úÖ ${userData.username} (${userData.role})`);
    } else {
        print(`  ‚ùå ${userData.username} –û–¢–°–£–¢–°–¢–í–£–ï–¢!`);
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã
const channelCount = db.rocketchat_room.countDocuments({ t: 'c' });
print(`  üí¨ –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: ${channelCount}`);

channels.forEach(channelData => {
    const channel = db.rocketchat_room.findOne({ _id: channelData.id });
    if (channel) {
        print(`  ‚úÖ ${channelData.displayName} (${channelData.id})`);
    } else {
        print(`  ‚ùå ${channelData.displayName} –û–¢–°–£–¢–°–¢–í–£–ï–¢!`);
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
const subCount = db.rocketchat_subscription.countDocuments({});
print(`  üîê –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${subCount}`);

users.forEach(userData => {
    const userSubs = db.rocketchat_subscription.countDocuments({ 'u.username': userData.username });
    print(`  ‚úÖ ${userData.username}: ${userSubs} –ø–æ–¥–ø–∏—Å–æ–∫ (–æ–∂–∏–¥–∞–µ—Ç—Å—è: ${userData.chatAccess.length})`);
});

print('');
print('üéâ –ü–û–õ–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
print('üìã –°–∏—Å—Ç–µ–º–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç BESEDKA_USER_SYSTEM.md');
print('üìã –ö–∞–Ω–∞–ª—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç ROCKETCHAT_MIGRATION_PLAN_V3.md');
print('üë• –í—Å–µ —Ä–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
print('üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
print('');
print('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:');
print('   ‚Ä¢ owner: 3 –∫–∞–Ω–∞–ª–∞ (general, vip, moderators)');
print('   ‚Ä¢ admin (moderator): 2 –∫–∞–Ω–∞–ª–∞ (general, moderators)');
print('   ‚Ä¢ store_owner: 1 –∫–∞–Ω–∞–ª (general)');
print('   ‚Ä¢ store_admin: 1 –∫–∞–Ω–∞–ª (general)');
print('   ‚Ä¢ test_user: 1 –∫–∞–Ω–∞–ª (general)');
