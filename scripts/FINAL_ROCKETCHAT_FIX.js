// ===================================================================
// –ü–û–õ–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï ROCKET.CHAT –°–û–ì–õ–ê–°–ù–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò –ü–†–û–ï–ö–¢–ê
// ===================================================================
// –°–æ–≥–ª–∞—Å–Ω–æ BESEDKA_USER_SYSTEM.md –∏ ROCKETCHAT_MIGRATION_PLAN_V3.md
// ===================================================================

print('üöÄ –ü–û–õ–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï ROCKET.CHAT –°–û–ì–õ–ê–°–ù–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò...');

// ===================================================================
// 1. –°–ò–°–¢–ï–ú–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô (–∏–∑ BESEDKA_USER_SYSTEM.md)
// ===================================================================

const users = [
    {
        username: 'owner',
        role: 'owner',
        name: 'Platform Owner',
        email: 'owner@besedka.com',
        chatAccess: ['general', 'vip', 'moderators'],
        rocketchatRoles: ['admin', 'moderator', 'user']
    },
    {
        username: 'admin',
        role: 'moderator',
        name: 'Platform Moderator',
        email: 'admin@besedka.com',
        chatAccess: ['general', 'moderators'],
        rocketchatRoles: ['moderator', 'user']
    },
    {
        username: 'store_owner',
        role: 'store_owner',
        name: 'Store Owner',
        email: 'store.owner@magicbeans.com',
        chatAccess: ['general'],
        rocketchatRoles: ['user']
    },
    {
        username: 'store_admin',
        role: 'store_admin',
        name: 'Store Admin',
        email: 'store.admin@magicbeans.com',
        chatAccess: ['general'],
        rocketchatRoles: ['user']
    },
    {
        username: 'test_user',
        role: 'user',
        name: 'Test User',
        email: 'test.user@besedka.com',
        chatAccess: ['general'],
        rocketchatRoles: ['user']
    }
];

// ===================================================================
// 2. –°–¢–†–£–ö–¢–£–†–ê –ö–ê–ù–ê–õ–û–í (–∏–∑ ROCKETCHAT_MIGRATION_PLAN_V3.md)
// ===================================================================

const channels = [
    {
        id: 'general',
        name: 'general',
        displayName: 'general',
        description: 'General chat for all registered users',
        type: 'c',
        default: true
    },
    {
        id: 'vip',
        name: 'vip',
        displayName: 'vip',
        description: 'VIP chat (owner manually grants access)',
        type: 'c',
        default: false
    },
    {
        id: 'moderators',
        name: 'moderators',
        displayName: 'moderators',
        description: 'Admin chat (owner + moderators for operational meetings)',
        type: 'c',
        default: false
    }
];

// ===================================================================
// 3. –û–ß–ò–°–¢–ö–ê –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–• –î–ê–ù–ù–´–•
// ===================================================================

print('üßπ –û—á–∏—â–∞—é –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');

// –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã (–ù–ï –£–î–ê–õ–Ø–ï–ú general, vip, moderators!)
const wrongChannels = ['vip-chat', 'GENERAL'];
wrongChannels.forEach(wrongId => {
    const wrongChannel = db.rocketchat_room.findOne({ _id: wrongId });
    if (wrongChannel) {
        print(`  ‚ùå –£–¥–∞–ª—è—é –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª: ${wrongId}`);
        db.rocketchat_room.deleteOne({ _id: wrongId });
        db.rocketchat_subscription.deleteMany({ rid: wrongId });
    }
});

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–ï –£–î–ê–õ–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ü–û–î–ü–ò–°–ö–ò - —ç—Ç–æ –ª–æ–º–∞–µ—Ç –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print('  ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');

// ===================================================================
// 4. –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
// ===================================================================

print('üë• –°–æ–∑–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ BESEDKA_USER_SYSTEM.md...');

users.forEach(userData => {
    const existingUser = db.users.findOne({ username: userData.username });

    if (!existingUser) {
        const userId = userData.username === 'owner' ? 'owner' : userData.username;
        const userDoc = {
            _id: userId,
            username: userData.username,
            name: userData.name,
            emails: [{ address: userData.email, verified: true }],
            type: 'user',
            status: 'online',
            active: true,
            roles: userData.rocketchatRoles,
            requirePasswordChange: false,
            createdAt: new Date(),
            _updatedAt: new Date(),
            customFields: {
                besedkaRole: userData.role
            }
        };

        db.users.insertOne(userDoc);
        print(`  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.username} (—Ä–æ–ª—å: ${userData.role})`);
    } else {
        print(`  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${userData.username}`);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        db.users.updateOne(
            { username: userData.username },
            {
                $set: {
                    roles: userData.rocketchatRoles,
                    'customFields.besedkaRole': userData.role
                }
            }
        );
    }
});

// ===================================================================
// 5. –°–û–ó–î–ê–ù–ò–ï –ö–ê–ù–ê–õ–û–í
// ===================================================================

print('üí¨ –°–æ–∑–¥–∞—é –∫–∞–Ω–∞–ª—ã —Å–æ–≥–ª–∞—Å–Ω–æ ROCKETCHAT_MIGRATION_PLAN_V3.md...');

channels.forEach(channelData => {
    const existingChannel = db.rocketchat_room.findOne({ _id: channelData.id });

    if (!existingChannel) {
        const channelDoc = {
            _id: channelData.id,
            name: channelData.name,
            fname: channelData.displayName,
            t: channelData.type,
            description: channelData.description,
            default: channelData.default,
            msgs: 0,
            usersCount: 0,
            u: {
                _id: 'owner',
                username: 'owner'
            },
            ts: new Date(),
            ro: false,
            sysMes: true,
            _updatedAt: new Date()
        };

        db.rocketchat_room.insertOne(channelDoc);
        print(`  ‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª: ${channelData.displayName} (${channelData.id})`);
    } else {
        print(`  ‚úÖ –ö–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${channelData.displayName} (${channelData.id}) - –°–û–•–†–ê–ù–Ø–ï–ú –°–û–û–ë–©–ï–ù–ò–Ø`);

        // –û–±–Ω–æ–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–∞, –ù–ï –¢–†–û–ì–ê–ï–ú –°–û–û–ë–©–ï–ù–ò–Ø
        db.rocketchat_room.updateOne(
            { _id: channelData.id },
            {
                $set: {
                    name: channelData.name,
                    fname: channelData.displayName,
                    description: channelData.description,
                    default: channelData.default,
                    _updatedAt: new Date()
                }
            }
        );
    }
});

// ===================================================================
// 6. –°–û–ó–î–ê–ù–ò–ï –ü–û–î–ü–ò–°–û–ö (–ü–†–ê–í–ê –î–û–°–¢–£–ü–ê)
// ===================================================================

print('üîê –°–æ–∑–¥–∞—é –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞...');

users.forEach(userData => {
    const user = db.users.findOne({ username: userData.username });
    if (!user) return;

    userData.chatAccess.forEach(channelId => {
        const channel = db.rocketchat_room.findOne({ _id: channelId });
        if (!channel) return;

        // –ü–†–û–í–ï–†–Ø–ï–ú: –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–¥–ø–∏—Å–∫–∞?
        const existingSubscription = db.rocketchat_subscription.findOne({
            'u.username': userData.username,
            rid: channelId
        });

        if (existingSubscription) {
            print(`  ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${userData.username} ‚Üí ${channel.fname || channel.name}`);
            return; // –ù–ï –ü–ï–†–ï–°–û–ó–î–ê–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ü–û–î–ü–ò–°–ö–ò
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ
        let channelRoles = ['user'];
        if (userData.role === 'owner') {
            if (channelId === 'general') channelRoles = ['owner'];
            else if (channelId === 'vip') channelRoles = ['owner', 'vip'];
            else if (channelId === 'moderators') channelRoles = ['owner', 'moderator'];
        } else if (userData.role === 'moderator') {
            if (channelId === 'moderators') channelRoles = ['moderator'];
        }

        const subscription = {
            _id: `${user._id}-${channelId}`,
            t: channel.t,
            ts: new Date(),
            name: channel.name,
            fname: channel.fname,
            rid: channelId,
            u: {
                _id: user._id,
                username: user.username,
                name: user.name
            },
            open: true,
            alert: false,
            unread: 0,
            userMentions: 0,
            groupMentions: 0,
            ls: new Date(),
            lr: new Date(),
            roles: channelRoles,
            _updatedAt: new Date()
        };

        db.rocketchat_subscription.insertOne(subscription);
        print(`  ‚úÖ –°–û–ó–î–ê–ù–ê: ${userData.username} ‚Üí ${channel.fname || channel.name} (—Ä–æ–ª–∏: ${channelRoles.join(', ')})`);
    });
});

// ===================================================================
// 7. –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –ü–ê–†–ê–ú–ï–¢–†–û–í
// ===================================================================

print('‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...');

const settings = [
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É Join Channel
    { _id: 'Accounts_RequireNameForSignUp', value: false },
    { _id: 'Accounts_RequirePasswordConfirmation', value: false },
    { _id: 'Accounts_EmailVerification', value: false },
    { _id: 'Accounts_ManuallyApproveNewUsers', value: false },
    { _id: 'Accounts_AllowAnonymousRead', value: true },
    { _id: 'Accounts_AllowAnonymousWrite', value: false },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    { _id: 'Site_Name', value: '–ë–µ—Å–µ–¥–∫–∞ Chat' },
    { _id: 'Language', value: 'ru' },
    { _id: 'UI_Use_Real_Name', value: true },
    { _id: 'UI_Allow_room_names_with_special_chars', value: true },

    // ===================================================================
    // OAUTH –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –ü–†–û–í–ê–ô–î–ï–†–ê \"BESEDKA\" - –ü–û–õ–ù–´–ô –ê–†–•–ò–í–ù–´–ô –ù–ê–ë–û–†
    // –ò—Å—Ç–æ—á–Ω–∏–∫: docs/archive/rocketchat_migration/ROCKET_CHAT_COMPLETE_MANUAL.md
    // ===================================================================

    // === –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===
    { _id: 'Accounts_OAuth_Custom-besedka', value: true },
    { _id: 'Accounts_OAuth_Custom-besedka-id', value: 'BesedkaRocketChat2025' },
    { _id: 'Accounts_OAuth_Custom-besedka-secret', value: 'SecureSecretKey2025BesedkaRocketChatSSO' },
    { _id: 'Accounts_OAuth_Custom-besedka-url', value: 'http://127.0.0.1:8001' },
    { _id: 'Accounts_OAuth_Custom-besedka-server_url', value: 'http://127.0.0.1:8001' },

    // === –ü–£–¢–ò ===
    { _id: 'Accounts_OAuth_Custom-besedka-token_path', value: '/o/token/' },
    { _id: 'Accounts_OAuth_Custom-besedka-access_token_path', value: '/o/token/' },
    { _id: 'Accounts_OAuth_Custom-besedka-identity_path', value: '/api/v1/auth/rocket/' },
    { _id: 'Accounts_OAuth_Custom-besedka-authorize_path', value: '/o/authorize/' },

    // === –¢–û–ö–ï–ù –ù–ê–°–¢–†–û–ô–ö–ò ===
    { _id: 'Accounts_OAuth_Custom-besedka-scope', value: 'read' },
    { _id: 'Accounts_OAuth_Custom-besedka-access_token_param', value: 'access_token' },
    { _id: 'Accounts_OAuth_Custom-besedka-token_sent_via', value: 'Header' },
    { _id: 'Accounts_OAuth_Custom-besedka-identity_token_sent_via', value: 'Default' },

    // === –í–ù–ï–®–ù–ò–ô –í–ò–î –ö–ù–û–ü–ö–ò ===
    { _id: 'Accounts_OAuth_Custom-besedka-login_style', value: 'redirect' },
    { _id: 'Accounts_OAuth_Custom-besedka-button_label_text', value: '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É' },
    { _id: 'Accounts_OAuth_Custom-besedka-button_color', value: '#1d74f5' },
    { _id: 'Accounts_OAuth_Custom-besedka-button_text_color', value: '#FFFFFF' },
    { _id: 'Accounts_OAuth_Custom-besedka-button_label_color', value: '#FFFFFF' },

    // === –ü–û–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===
    { _id: 'Accounts_OAuth_Custom-besedka-username_field', value: 'username' },
    { _id: 'Accounts_OAuth_Custom-besedka-email_field', value: 'email' },
    { _id: 'Accounts_OAuth_Custom-besedka-name_field', value: 'full_name' },
    { _id: 'Accounts_OAuth_Custom-besedka-avatar_field', value: 'avatar_url' },
    { _id: 'Accounts_OAuth_Custom-besedka-key_field', value: 'id' },

    // === –†–û–õ–ò –ò –ì–†–£–ü–ü–´ ===
    { _id: 'Accounts_OAuth_Custom-besedka-roles_field', value: 'roles' },
    { _id: 'Accounts_OAuth_Custom-besedka-groups_field', value: 'groups' },
    { _id: 'Accounts_OAuth_Custom-besedka-roles_claim', value: 'roles' },
    { _id: 'Accounts_OAuth_Custom-besedka-groups_claim', value: 'groups' },
    { _id: 'Accounts_OAuth_Custom-besedka-roles_to_sync', value: 'admin,moderator,vip,user' },

    // === –ú–ê–ü–ü–ò–ù–ì –ö–ê–ù–ê–õ–û–í ===
    { _id: 'Accounts_OAuth_Custom-besedka-groups_channel_map', value: '{\"owner\":\"admin,vip\",\"moderator\":\"admin\",\"user\":\"user\"}' },
    { _id: 'Accounts_OAuth_Custom-besedka-channel_map', value: '{\"owner\":\"admin,vip\",\"moderator\":\"admin\",\"user\":\"user\"}' },
    { _id: 'Accounts_OAuth_Custom-besedka-groups_map', value: '{\"owner\":\"admin,vip\",\"moderator\":\"admin\",\"user\":\"user\"}' },
    { _id: 'Accounts_OAuth_Custom-besedka-roles_to_groups_mapping', value: '{\"owner\":\"admin,vip\",\"moderator\":\"admin\",\"user\":\"user\"}' },

    // === –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–ò ===
    { _id: 'Accounts_OAuth_Custom-besedka-merge_users', value: true },
    { _id: 'Accounts_OAuth_Custom-besedka-show_button', value: true },
    { _id: 'Accounts_OAuth_Custom-besedka-map_channels', value: true },
    { _id: 'Accounts_OAuth_Custom-besedka-merge_roles', value: true },
    { _id: 'Accounts_OAuth_Custom-besedka-merge_users_distinct_services', value: false },

    // === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===
    { _id: 'Accounts_OAuth_Custom-besedka-channels_admin', value: 'admin' },

    // === –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´ ===
    // Iframe –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    { _id: 'Iframe_Integration_send_enable', value: true },
    { _id: 'Iframe_Restrict_Access', value: false },

    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ 2FA
    { _id: 'Accounts_RequirePasswordConfirmation', value: false },
    { _id: 'Accounts_TwoFactorAuthentication_Enabled', value: false },

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª–∞–º
    { _id: 'Accounts_Default_User_Preferences_joinDefaultChannels', value: true },
    { _id: 'Accounts_Default_User_Preferences_joinDefaultChannelsSilenced', value: false },

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ OAuth)
    { _id: 'Accounts_RegistrationForm', value: 'Disabled' },
    { _id: 'Accounts_ManuallyApproveNewUsers', value: false },

    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ /login ‚Üí /home
    { _id: 'Accounts_ForceLogin', value: false },
    { _id: 'Layout_Login_Header', value: '' },
    { _id: 'Layout_Login_Terms', value: '' },

    // === üîí 8. –û–¢–ö–õ–Æ–ß–ê–ï–ú WORKSPACE REGISTRATION –ò –õ–ò–¶–ï–ù–ó–ò–û–ù–ù–´–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø ===
    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–∏–≤—è–∑–∫—É –∫ –æ–±–ª–∞–∫—É Rocket.Chat, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –ª–∏–º–∏—Ç 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    { _id: 'Cloud_Workspace_Registration_State', value: 'registered' },
    { _id: 'Cloud_Workspace_Client_Id', value: '' },
    { _id: 'Cloud_Workspace_Client_Secret', value: '' },
    { _id: 'Cloud_Workspace_Client_Secret_Expires_At', value: 0 },
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª–µ –ª–∏—Ü–µ–Ω–∑–∏–∏, —á—Ç–æ–±—ã Rocket.Chat —Ä–∞–±–æ—Ç–∞–ª –≤ OSS-—Ä–µ–∂–∏–º–µ –±–µ–∑ Enterprise-–±–∞–Ω–Ω–µ—Ä–∞
    { _id: 'Enterprise_License', value: '' },
    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–∫–ª—é—á–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö OAuth –ø—Ä—è–º–æ –≤ Rocket.Chat UI
    { _id: 'Accounts_RegistrationForm', value: 'Disabled' },
    { _id: 'Accounts_Registration_ExtraFields', value: '' },
    { _id: 'Accounts_RegistrationForm_LinkReplacementText', value: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º' },
    { _id: 'Accounts_RegistrationForm_Type', value: 'Disabled' },
    // ===================================================================

    // –°–ö–†–´–¢–ò–ï –ö–ù–û–ü–ö–ò –õ–û–ì–ê–£–¢–ê –í EMBEDDED –†–ï–ñ–ò–ú–ï - –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –õ–û–ì–ê–£–¢–ê
    { _id: 'Layout_Custom_CSS', value: `
        /* –°–ö–†–´–í–ê–ï–ú –ö–ù–û–ü–ö–£ –õ–û–ì–ê–£–¢–ê –¢–û–õ–¨–ö–û –í EMBEDDED –†–ï–ñ–ò–ú–ï */
        /* –≠—Ç–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ª—É—á–∞–π–Ω–æ –¥–µ–ª–∞–µ—Ç –ª–æ–≥–∞—É—Ç –∏ –ª–æ–º–∞–µ—Ç SSO —Å–≤—è–∑—å */
        .embedded .rc-user-menu [data-qa="logout"],
        .embedded .rc-user-dropdown [data-qa="logout"],
        .embedded .flex-nav .flex-nav__user .user-logout,
        .embedded [data-qa="user-menu-logout"],
        .embedded .user-menu .logout,
        .embedded .account-menu .logout {
            display: none !important;
        }

        /* –¢–∞–∫–∂–µ —Å–∫—Ä—ã–≤–∞–µ–º –ª—é–±—ã–µ —Å—Å—ã–ª–∫–∏ –∏ –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º "Logout" –∏–ª–∏ "–í—ã–π—Ç–∏" */
        .embedded a[href*="logout"],
        .embedded button[title*="Logout"],
        .embedded button[title*="–í—ã–π—Ç–∏"],
        .embedded .sidebar-item[title*="Logout"] {
            display: none !important;
        }

        /* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ - —Å–∫—Ä—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–Ω–æ–ø–æ–∫ –ª–æ–≥–∞—É—Ç–∞ */
        .embedded .rc-user-menu:has([data-qa="logout"]) .logout-container,
        .embedded .user-dropdown:has([data-qa="logout"]) .logout-option {
            display: none !important;
        }

        /* üîï –£–±–∏—Ä–∞–µ–º –ª—é–±—ã–µ –±–∞–Ω–Ω–µ—Ä—ã –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–æ–±–ª–∞–∫–µ */
        .rc-announcement, .cloud-warning-banner, .CloudRegistrationBanner,
        .rcx-banner, .rcx-banner-manager, .rc-alerts, .CloudBanner,
        #rocket-chat-cloud-registration-banner {
            display: none !important;
        }

        /* üéõÔ∏è –ü—Ä—è—á–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–±–ª–∞–∫–æ–º / –º–∞–≥–∞–∑–∏–Ω–æ–º */
        .sidebar-item__link[href*="cloud"],
        .sidebar-item__link[href*="marketplace"],
        .sidebar-item__link[href*="omnichannel"],
        .sidebar-item__link[href*="license"],
        .sidebar-item__link[href*="workspaces"] {
            display: none !important;
        }

        /* üß™ –¢–ï–°–¢–û–í–´–ï REPLY/QUOTE –ö–ù–û–ü–ö–ò (Roadmap ¬ß2.1) */
        /* –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ /chat/test/ */
        .embedded.test-mode .rcx-message:hover .test-reply-quote-menu {
            display: flex !important;
            position: absolute;
            top: -30px;
            right: 10px;
            background: rgba(0,0,0,0.9);
            border-radius: 8px;
            padding: 4px;
            gap: 4px;
            z-index: 9999;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
        }

        .embedded.test-mode .rcx-message {
            position: relative !important;
        }

        .embedded.test-mode .test-reply-btn,
        .embedded.test-mode .test-quote-btn {
            color: white;
            background: transparent;
            border: none;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            cursor: pointer;
            transition: background 0.2s ease;
        }

        .embedded.test-mode .test-reply-btn:hover {
            background: #007bff;
        }

        .embedded.test-mode .test-quote-btn:hover {
            background: #6f42c1;
        }

        /* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ CSS –ø—Å–µ–≤–¥–æ—ç–ª–µ–º–µ–Ω—Ç—ã (fallback) */
        .embedded.test-mode .rcx-message:hover::after {
            content: "‚Ü©Ô∏è Reply  üí¨ Quote";
            position: absolute;
            top: -25px;
            right: 10px;
            background: rgba(0,0,0,0.9);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            z-index: 9999;
            pointer-events: auto;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
        }

        /* –°–∫—Ä—ã–≤–∞–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º */
        .embedded:not(.test-mode) .rcx-message:hover::after {
            display: none !important;
        }

        /* === PHASE A MINIMAL UI (Roadmap 8.1) === */
        .embedded .rcx-room-header,
        .embedded .rcx-sidebar,
        .embedded .sidebar,
        .embedded .sidebar__toolbar,
        .embedded .rcx-message-actions,
        .embedded .rc-popover {
            display: none !important;
        }
        /* –°–æ—Ö—Ä–∞–Ω—è–µ–º composer –∏ message-list */
        .embedded .rcx-message-list {
            margin-top: 0 !important;
        }
        .embedded .rcx-message-composer {
            border-top: 1px solid var(--rc-color-light, #2b2f33);
        }

        /* === PHASE B HIDE NATIVE HOVER ACTIONS === */
        .embedded .rcx-message-hover-toolbar,
        .embedded .rcx-message-actions,
        .embedded .rcx-message-action,
        .embedded .rcx-message-action-menu,
        .embedded .rcx-message:hover .rcx-message-actions,
        .embedded [data-qa="message-action-menu"],
        .embedded [data-qa="message-action-reply"],
        .embedded [data-qa="message-action-edit"],
        .embedded [data-qa="message-action-delete"] {
            display: none !important;
            visibility: hidden !important;
        }
    ` }
];

settings.forEach(setting => {
    db.rocketchat_settings.updateOne(
        { _id: setting._id },
        { $set: { value: setting.value, _updatedAt: new Date() } },
        { upsert: true }
    );
});

print('  ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');

// ===================================================================
// 8. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
// ===================================================================

print('');
print('üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userCount = db.users.countDocuments({ type: 'user' });
print(`  üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}`);

users.forEach(userData => {
    const user = db.users.findOne({ username: userData.username });
    if (user) {
        print(`  ‚úÖ ${userData.username} (${userData.role})`);
    } else {
        print(`  ‚ùå ${userData.username} –û–¢–°–£–¢–°–¢–í–£–ï–¢!`);
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã
const channelCount = db.rocketchat_room.countDocuments({ t: 'c' });
print(`  üí¨ –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: ${channelCount}`);

channels.forEach(channelData => {
    const channel = db.rocketchat_room.findOne({ _id: channelData.id });
    if (channel) {
        print(`  ‚úÖ ${channelData.displayName} (${channelData.id})`);
    } else {
        print(`  ‚ùå ${channelData.displayName} –û–¢–°–£–¢–°–¢–í–£–ï–¢!`);
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
const subCount = db.rocketchat_subscription.countDocuments({});
print(`  üîê –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${subCount}`);

users.forEach(userData => {
    const userSubs = db.rocketchat_subscription.countDocuments({ 'u.username': userData.username });
    print(`  ‚úÖ ${userData.username}: ${userSubs} –ø–æ–¥–ø–∏—Å–æ–∫ (–æ–∂–∏–¥–∞–µ—Ç—Å—è: ${userData.chatAccess.length})`);
});

print('');
print('üéâ –ü–û–õ–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
print('üìã –°–∏—Å—Ç–µ–º–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç BESEDKA_USER_SYSTEM.md');
print('üìã –ö–∞–Ω–∞–ª—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç ROCKETCHAT_MIGRATION_PLAN_V3.md');
print('üë• –í—Å–µ —Ä–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
print('üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
print('');
print('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:');
print('   ‚Ä¢ owner: 3 –∫–∞–Ω–∞–ª–∞ (general, vip, moderators)');
print('   ‚Ä¢ admin (moderator): 2 –∫–∞–Ω–∞–ª–∞ (general, moderators)');
print('   ‚Ä¢ store_owner: 1 –∫–∞–Ω–∞–ª (general)');
print('   ‚Ä¢ store_admin: 1 –∫–∞–Ω–∞–ª (general)');
print('   ‚Ä¢ test_user: 1 –∫–∞–Ω–∞–ª (general)');
