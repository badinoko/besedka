#!/usr/bin/env python3
"""
–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –õ–û–ì–ò–ù –í ROCKET.CHAT
===================================
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner –≤ Rocket.Chat
—á–µ—Ä–µ–∑ Django OAuth, –∏–∑–±–∞–≤–ª—è—è –æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä—É—á–Ω–æ–≥–æ –≤—Ö–æ–¥–∞.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/auto_login_rocketchat.py

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ 127.0.0.1:8001
    - Rocket.Chat –∑–∞–ø—É—â–µ–Ω –Ω–∞ 127.0.0.1:3000
    - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Django
"""

import requests
import sys
import time
from requests.packages.urllib3.exceptions import InsecureRequestWarning

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DJANGO_BASE = "http://127.0.0.1:8001"
ROCKETCHAT_BASE = "http://127.0.0.1:3000"
OWNER_CREDENTIALS = {
    'username': 'owner',
    'password': 'owner123secure'
}

def print_status(message, status="INFO"):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞"""
    icons = {
        "INFO": "‚ÑπÔ∏è",
        "SUCCESS": "‚úÖ",
        "ERROR": "‚ùå",
        "WARNING": "‚ö†Ô∏è",
        "PROGRESS": "üîÑ"
    }
    print(f"{icons.get(status, 'üìã')} {message}")

def check_services():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print_status("–ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤...", "PROGRESS")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Django
    try:
        response = requests.get(f"{DJANGO_BASE}/", timeout=5)
        if response.status_code == 200:
            print_status("Django —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω", "SUCCESS")
        else:
            print_status(f"Django —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})", "ERROR")
            return False
    except Exception as e:
        print_status(f"Django —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}", "ERROR")
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Rocket.Chat
    try:
        response = requests.get(f"{ROCKETCHAT_BASE}/", timeout=10)
        if response.status_code == 200:
            print_status("Rocket.Chat —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω", "SUCCESS")
        else:
            print_status(f"Rocket.Chat –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})", "ERROR")
            return False
    except Exception as e:
        print_status(f"Rocket.Chat –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}", "ERROR")
        return False

    return True

def login_to_django(session):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Django"""
    print_status("–ê–≤—Ç–æ—Ä–∏–∑—É—é—Å—å –≤ Django...", "PROGRESS")

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ –¥–ª—è CSRF —Ç–æ–∫–µ–Ω–∞
    try:
        response = session.get(f"{DJANGO_BASE}/accounts/login/")
        if 'csrfmiddlewaretoken' not in response.text:
            print_status("–ù–µ –Ω–∞–π–¥–µ–Ω CSRF —Ç–æ–∫–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞", "ERROR")
            return False
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞: {e}", "ERROR")
        return False

    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–æ—Ä–º—ã
    import re
    csrf_match = re.search(r'name=["\']csrfmiddlewaretoken["\'] value=["\']([^"\']+)["\']', response.text)
    if not csrf_match:
        # –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
        csrf_match = re.search(r'csrfmiddlewaretoken["\'] value=["\']([^"\']+)["\']', response.text)
        if not csrf_match:
            print_status("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å CSRF —Ç–æ–∫–µ–Ω", "ERROR")
            return False

    csrf_token = csrf_match.group(1)
    print_status(f"CSRF —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {csrf_token[:10]}...", "PROGRESS")

    # –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –∏–∑ cookies
    csrf_cookie = None
    for cookie in session.cookies:
        if cookie.name == 'csrftoken':
            csrf_cookie = cookie.value
            break

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è CSRF –∑–∞—â–∏—Ç—ã
    headers = {
        'Referer': f"{DJANGO_BASE}/accounts/login/",
        'X-CSRFToken': csrf_cookie if csrf_cookie else csrf_token,
        'Content-Type': 'application/x-www-form-urlencoded',
    }

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–∏–Ω–∞
    login_data = {
        'login': OWNER_CREDENTIALS['username'],  # Django allauth –∏—Å–ø–æ–ª—å–∑—É–µ—Ç 'login', –Ω–µ 'username'
        'password': OWNER_CREDENTIALS['password'],
        'csrfmiddlewaretoken': csrf_token
    }

    try:
        response = session.post(f"{DJANGO_BASE}/accounts/login/",
                              data=login_data,
                              headers=headers,
                              allow_redirects=False)

        print_status(f"–û—Ç–≤–µ—Ç Django: {response.status_code}", "PROGRESS")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if response.status_code == 302:  # –†–µ–¥–∏—Ä–µ–∫—Ç –æ–∑–Ω–∞—á–∞–µ—Ç —É—Å–ø–µ—Ö
            print_status("–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Django", "SUCCESS")
            return True
        elif response.status_code == 200 and 'login' in response.text.lower():
            print_status("–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Django", "ERROR")
            return False
        else:
            print_status(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.status_code}", "WARNING")
            return True  # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å

    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Django: {e}", "ERROR")
        return False

def trigger_oauth_login(session):
    """–ò–Ω–∏—Ü–∏–∞—Ü–∏—è OAuth –ª–æ–≥–∏–Ω–∞ –≤ Rocket.Chat"""
    print_status("–ò–Ω–∏—Ü–∏–∏—Ä—É—é OAuth –ª–æ–≥–∏–Ω –≤ Rocket.Chat...", "PROGRESS")

    # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Rocket.Chat
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ Rocket.Chat
        response = session.get(f"{ROCKETCHAT_BASE}/login")

        # –ò—â–µ–º OAuth URL –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Besedka
        import re
        oauth_match = re.search(r'href="([^"]*oauth/besedka[^"]*)"', response.text)
        if not oauth_match:
            print_status("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ OAuth –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Rocket.Chat", "WARNING")
            # –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π URL
            oauth_url = f"{ROCKETCHAT_BASE}/_oauth/besedka"
        else:
            oauth_url = ROCKETCHAT_BASE + oauth_match.group(1)

        print_status(f"–ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ OAuth URL: {oauth_url}", "PROGRESS")

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ OAuth URL (—ç—Ç–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        response = session.get(oauth_url, allow_redirects=True)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if "besedka" in response.url.lower() or response.status_code == 200:
            print_status("OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∞", "SUCCESS")
            return True
        else:
            print_status(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç OAuth: {response.url}", "WARNING")
            return True  # –í–æ–∑–º–æ–∂–Ω–æ, –≤—Å—ë —Ä–∞–≤–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ

    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}", "ERROR")
        return False

def verify_login():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print_status("–ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...", "PROGRESS")

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    check_session = requests.Session()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ Rocket.Chat
        response = check_session.get(f"{ROCKETCHAT_BASE}/home", timeout=10)

        if response.status_code == 200 and "login" not in response.url.lower():
            print_status("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Rocket.Chat —É—Å–ø–µ—à–Ω–∞!", "SUCCESS")
            return True
        else:
            print_status("–í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", "WARNING")
            return False

    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}", "WARNING")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –õ–û–ì–ò–ù –í ROCKET.CHAT")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    if not check_services():
        print_status("–°–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø—É—Å–∫ Docker –∏ Django.", "ERROR")
        sys.exit(1)

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    session.headers.update({
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
    })

    # –ü–æ—à–∞–≥–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    if not login_to_django(session):
        print_status("–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ Django", "ERROR")
        sys.exit(1)

    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
    time.sleep(2)

    if not trigger_oauth_login(session):
        print_status("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å OAuth –ª–æ–≥–∏–Ω", "ERROR")
        sys.exit(1)

    # –ü–∞—É–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è OAuth –ø—Ä–æ—Ü–µ—Å—Å–∞
    time.sleep(3)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    verify_login()

    print("")
    print_status("–ì–û–¢–û–í–û! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–∞—Ç:", "SUCCESS")
    print_status("http://127.0.0.1:8001/chat/integrated/", "INFO")
    print("")
    print_status("–¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ Rocket.Chat:", "INFO")
    print_status("http://127.0.0.1:3000/", "INFO")

if __name__ == "__main__":
    main()
