// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–• –ü–û–î–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø OWNER

print('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–• –ü–û–î–ü–ò–°–û–ö...');

// –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const owner = db.users.findOne({username: 'owner'});
if (!owner) {
    print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    quit();
}

print('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–∞–π–¥–µ–Ω: ' + owner._id);

// –ù–∞–π—Ç–∏ –≤—Å–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
print('\nüìã –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ò–• –ü–û–î–ü–ò–°–û–ö:');
const subscriptions = db.rocketchat_subscription.find({'u.username': 'owner'}).toArray();
subscriptions.forEach(s => {
    print(`  - –ö–∞–Ω–∞–ª: ${s.name}, ID: ${s.rid}, –†–æ–ª–∏: ${JSON.stringify(s.roles || [])}`);
});

// –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ –∫–∞–Ω–∞–ª–∞–º
const channelGroups = {};
subscriptions.forEach(sub => {
    if (!channelGroups[sub.rid]) {
        channelGroups[sub.rid] = [];
    }
    channelGroups[sub.rid].push(sub);
});

print('\nüóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–• –ü–û–î–ü–ò–°–û–ö:');

Object.keys(channelGroups).forEach(channelId => {
    const subs = channelGroups[channelId];

    if (subs.length > 1) {
        print(`\nüìù –ö–∞–Ω–∞–ª ${channelId} –∏–º–µ–µ—Ç ${subs.length} –ø–æ–¥–ø–∏—Å–æ–∫ - –∏—Å–ø—Ä–∞–≤–ª—è—é:`);

        // –£–¥–∞–ª–∏—Ç—å –í–°–ï –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        const deleteResult = db.rocketchat_subscription.deleteMany({
            'u._id': owner._id,
            rid: channelId
        });
        print(`  ‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deleteResult.deletedCount} –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫`);

        // –°–æ–∑–¥–∞—Ç—å –û–î–ù–£ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
        const room = db.rocketchat_room.findOne({_id: channelId});
        if (room) {
            // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª–∏ –¥–ª—è –∫–∞–Ω–∞–ª–∞
            let roles = ['owner'];
            if (channelId === 'vip') {
                roles.push('vip');
            }
            if (channelId === 'moderators') {
                roles.push('moderator');
            }

            const newSubscription = {
                _id: owner._id + channelId,
                u: {
                    _id: owner._id,
                    username: owner.username,
                    name: owner.name || 'owner'
                },
                rid: channelId,
                name: room.name,
                fname: room.fname || room.name,
                t: room.t,
                open: true,
                alert: false,
                unread: 0,
                userMentions: 0,
                groupMentions: 0,
                ts: new Date(),
                ls: new Date(),
                lr: new Date(),
                roles: roles,
                _updatedAt: new Date()
            };

            db.rocketchat_subscription.insertOne(newSubscription);
            print(`  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –µ–¥–∏–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å —Ä–æ–ª—è–º–∏: ${JSON.stringify(roles)}`);
        }
    } else {
        print(`‚úÖ –ö–∞–Ω–∞–ª ${channelId} - –ø–æ–¥–ø–∏—Å–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞`);
    }
});

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
print('\n‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ü–†–ò–°–û–ï–î–ò–ù–ï–ù–ò–Ø:');

const autoJoinSettings = [
    {_id: 'Accounts_Default_User_Preferences_joinDefaultChannels', value: true},
    {_id: 'Accounts_OAuth_Custom-besedka-map_channels', value: true}
];

autoJoinSettings.forEach(setting => {
    db.rocketchat_settings.updateOne(
        {_id: setting._id},
        {$set: {value: setting.value, _updatedAt: new Date()}},
        {upsert: true}
    );
    print(`‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞: ${setting._id} = ${setting.value}`);
});

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print('\nüéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:');
const finalSubs = db.rocketchat_subscription.find({'u.username': 'owner'}).toArray();
finalSubs.forEach(s => {
    print(`  ‚úÖ ${s.name}: —Ä–æ–ª–∏ ${JSON.stringify(s.roles || [])}`);
});

print('\nüéâ –ì–û–¢–û–í–û! –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã, –∫–Ω–æ–ø–∫–∞ Join Channel –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å!')
