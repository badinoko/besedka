#!/usr/bin/env python3
"""
üöÄ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ROCKET.CHAT
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –í–°–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Rocket.Chat –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑.
–ë–û–õ–¨–®–ï –ù–ï –ù–£–ñ–ù–û –ù–ê–°–¢–†–ê–ò–í–ê–¢–¨ –í–†–£–ß–ù–£–Æ!

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
python scripts/rocketchat_full_auto_setup.py
"""

import requests
import json
import time
import sys
import pymongo
from pymongo import MongoClient

class RocketChatAutoSetup:
    def __init__(self):
        self.rocketchat_url = "http://127.0.0.1:3000"
        self.mongo_url = "mongodb://127.0.0.1:27017"
        self.db_name = "rocketchat"

        # –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
        self.admin_username = "owner"
        self.admin_password = "owner123secure"
        self.admin_email = "owner@besedka.com"

        # OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Django
        self.oauth_settings = {
            "Accounts_OAuth_Custom_Besedka": True,
            "Accounts_OAuth_Custom_Besedka_url": "http://127.0.0.1:8001",
            "Accounts_OAuth_Custom_Besedka_token_path": "/o/token/",
            "Accounts_OAuth_Custom_Besedka_identity_path": "/api/v1/auth/rocket/",
            "Accounts_OAuth_Custom_Besedka_authorize_path": "/o/authorize/",
            "Accounts_OAuth_Custom_Besedka_scope": "read",
            "Accounts_OAuth_Custom_Besedka_id": "BesedkaRocketChat2025",
            "Accounts_OAuth_Custom_Besedka_secret": "ZJwCaXXfQKHPbmdWo7RBSP7uv9M1hOTndbSbhqeJ29k",
            "Accounts_OAuth_Custom_Besedka_button_label_text": "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É",
            "Accounts_OAuth_Custom_Besedka_button_label_color": "#FFFFFF",
            "Accounts_OAuth_Custom_Besedka_button_color": "#1976D2",
            "Accounts_OAuth_Custom_Besedka_login_style": "redirect",
            "Accounts_OAuth_Custom_Besedka_show_button": True,
            "Accounts_OAuth_Custom_Besedka_merge_users": True,
            "Accounts_OAuth_Custom_Besedka_username_field": "username",
            "Accounts_OAuth_Custom_Besedka_email_field": "email",
            "Accounts_OAuth_Custom_Besedka_name_field": "name",
            "Accounts_OAuth_Custom_Besedka_roles_claim": "role",
            "Accounts_OAuth_Custom_Besedka_groups_claim": "groups",
            "Accounts_OAuth_Custom_Besedka_channels_admin": "admin,vip",
            "Accounts_OAuth_Custom_Besedka_map_channels": json.dumps({
                "owner": ["admin", "vip"],
                "moderator": ["admin"],
                "user": ["user"]
            }),
            # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è iframe –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞
            "Iframe_Restrict_Access": False,
            "Restrict_access_inside_any_Iframe": False,
            "Accounts_RequirePasswordConfirmation": False,
            "Accounts_TwoFactorAuthentication_Enabled": False,
            "Site_Url": "http://127.0.0.1:3000",
            "Accounts_DefaultUserPreferences_autoImageLoad": True,
            "Accounts_DefaultUserPreferences_joinDefaultChannels": True,
            "Accounts_DefaultUserPreferences_joinDefaultChannelsSilenced": False
        }

        # –ö–∞–Ω–∞–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
        self.channels = [
            {"name": "general", "type": "c", "members": [], "description": "–û–±—â–∏–π —á–∞—Ç - –ë–µ—Å–µ–¥–∫–∞ ‚Ä¢ –°–æ–æ–±—â–µ—Å—Ç–≤–æ —Ä–∞—Å—Ç–µ–Ω–∏–µ–≤–æ–¥–æ–≤"},
            {"name": "vip", "type": "p", "members": ["owner"], "description": "VIP –ë–µ—Å–µ–¥–∫–∞ - –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —á–∞—Ç –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"},
            {"name": "moderators", "type": "p", "members": ["owner"], "description": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã - –ê–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏"}
        ]

    def wait_for_rocketchat(self, max_attempts=30):
        """–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Rocket.Chat"""
        print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Rocket.Chat...")

        for attempt in range(max_attempts):
            try:
                response = requests.get(f"{self.rocketchat_url}/api/info", timeout=5)
                if response.status_code == 200:
                    print("‚úÖ Rocket.Chat –∑–∞–ø—É—â–µ–Ω!")
                    return True
            except:
                pass

            print(f"   –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_attempts}...")
            time.sleep(2)

        print("‚ùå Rocket.Chat –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
        return False

    def check_setup_wizard(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–µ–Ω –ª–∏ Setup Wizard"""
        try:
            response = requests.get(f"{self.rocketchat_url}/api/v1/setup/wizard", timeout=5)
            if response.status_code == 200:
                data = response.json()
                if data.get("wizard", {}).get("step") == "admin_user":
                    print("üéØ Setup Wizard —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                    return True
            print("‚úÖ Setup Wizard —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω")
            return False
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Setup Wizard: {e}")
            return True

    def complete_setup_wizard(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ Setup Wizard"""
        print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ Setup Wizard...")

        setup_data = {
            "admin_name": self.admin_username,
            "admin_username": self.admin_username,
            "admin_pass": self.admin_password,
            "admin_email": self.admin_email,
            "site_name": "Besedka Chat",
            "site_url": "http://127.0.0.1:3000",
            "language": "ru",
            "country": "RU",
            "agreement": True,
            "updates": False,
            "newsletter": False
        }

        try:
            response = requests.post(
                f"{self.rocketchat_url}/api/v1/setup/wizard",
                json=setup_data,
                timeout=10
            )

            if response.status_code == 200:
                print("‚úÖ Setup Wizard –∑–∞–≤–µ—Ä—à–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Setup Wizard: {response.status_code} {response.text}")
                return False

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ Setup Wizard: {e}")
            return False

    def get_auth_token(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")

        try:
            response = requests.post(
                f"{self.rocketchat_url}/api/v1/login",
                json={
                    "username": self.admin_username,
                    "password": self.admin_password
                },
                timeout=10
            )

            if response.status_code == 200:
                data = response.json()
                if data.get("status") == "success":
                    self.auth_token = data["data"]["authToken"]
                    self.user_id = data["data"]["userId"]
                    print("‚úÖ –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω!")
                    return True

            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code} {response.text}")
            return False

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
            return False

    def apply_oauth_settings_direct(self):
        """–ü—Ä—è–º–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ OAuth –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ MongoDB"""
        print("‚öôÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ OAuth –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ MongoDB...")

        try:
            client = MongoClient(self.mongo_url)
            db = client[self.db_name]
            settings_collection = db.rocketchat_settings

            applied_count = 0

            for setting_id, value in self.oauth_settings.items():
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                settings_collection.update_one(
                    {"_id": setting_id},
                    {
                        "$set": {
                            "value": value,
                            "type": "boolean" if isinstance(value, bool) else "string",
                            "group": "OAuth",
                            "section": "Custom OAuth: Besedka" if "Besedka" in setting_id else "General",
                            "packageValue": value,
                            "valueSource": "meteorSettingsValue",
                            "hidden": False,
                            "blocked": False,
                            "sorter": applied_count,
                            "i18nLabel": setting_id,
                            "autocomplete": True,
                            "_updatedAt": {"$date": int(time.time() * 1000)},
                            "meteorSettingsValue": value
                        }
                    },
                    upsert=True
                )
                applied_count += 1

            client.close()
            print(f"‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ {applied_count} OAuth –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ MongoDB!")
            return True

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            return False

    def create_channels(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤"""
        print("üì¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤...")

        headers = {
            "X-Auth-Token": self.auth_token,
            "X-User-Id": self.user_id,
            "Content-Type": "application/json"
        }

        created_count = 0

        for channel in self.channels:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª
                check_response = requests.get(
                    f"{self.rocketchat_url}/api/v1/channels.info?roomName={channel['name']}",
                    headers=headers,
                    timeout=5
                )

                if check_response.status_code == 200:
                    print(f"   ‚úÖ –ö–∞–Ω–∞–ª #{channel['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    continue

                # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
                create_data = {
                    "name": channel["name"],
                    "description": channel["description"],
                    "type": channel["type"],
                    "readOnly": False
                }

                if channel["type"] == "c":  # –ø—É–±–ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª
                    endpoint = "/api/v1/channels.create"
                else:  # –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª
                    endpoint = "/api/v1/groups.create"

                response = requests.post(
                    f"{self.rocketchat_url}{endpoint}",
                    json=create_data,
                    headers=headers,
                    timeout=10
                )

                if response.status_code == 200:
                    print(f"   ‚úÖ –ö–∞–Ω–∞–ª #{channel['name']} —Å–æ–∑–¥–∞–Ω!")
                    created_count += 1
                else:
                    print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ #{channel['name']}: {response.text}")

            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ #{channel['name']}: {e}")

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {created_count} –Ω–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤!")
        return True

    def set_default_channel(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        print("üéØ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–∞ general –∫–∞–∫ –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")

        try:
            client = MongoClient(self.mongo_url)
            db = client[self.db_name]
            settings_collection = db.rocketchat_settings

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º general –∫–∞–∫ –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            settings_collection.update_one(
                {"_id": "Accounts_DefaultUserPreferences_openFirstDirectMessage"},
                {
                    "$set": {
                        "value": "general",
                        "type": "string",
                        "_updatedAt": {"$date": int(time.time() * 1000)}
                    }
                },
                upsert=True
            )

            client.close()
            print("‚úÖ –ö–∞–Ω–∞–ª general —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!")
            return True

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {e}")
            return False

    def restart_rocketchat_service(self):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Rocket.Chat –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Rocket.Chat –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...")

        try:
            headers = {
                "X-Auth-Token": self.auth_token,
                "X-User-Id": self.user_id,
                "Content-Type": "application/json"
            }

            # –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ API
            response = requests.post(
                f"{self.rocketchat_url}/api/v1/service.configurations",
                json={"action": "restart"},
                headers=headers,
                timeout=5
            )

            print("‚úÖ –°–∏–≥–Ω–∞–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
            time.sleep(5)

            return True

        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ API (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ): {e}")
            return True

    def run_full_setup(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        print("üöÄ –ü–û–õ–ù–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ROCKET.CHAT")
        print("=" * 60)

        # –®–∞–≥ 1: –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Rocket.Chat
        if not self.wait_for_rocketchat():
            print("‚ùå –û–®–ò–ë–ö–ê: Rocket.Chat –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!")
            return False

        # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ Setup Wizard
        if self.check_setup_wizard():
            if not self.complete_setup_wizard():
                print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–π—Ç–∏ Setup Wizard!")
                return False

            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            print("‚è≥ –ü–∞—É–∑–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            time.sleep(3)

        # –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if not self.get_auth_token():
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!")
            return False

        # –®–∞–≥ 4: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ OAuth –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ MongoDB
        if not self.apply_oauth_settings_direct():
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!")
            return False

        # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
        if not self.create_channels():
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª—ã!")
            return False

        # –®–∞–≥ 6: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if not self.set_default_channel():
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!")
            return False

        # –®–∞–≥ 7: –°–∏–≥–Ω–∞–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        self.restart_rocketchat_service()

        print("\n" + "=" * 60)
        print("üéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: owner / owner123secure")
        print("‚úÖ OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä 'Besedka' –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("‚úÖ –ö–∞–Ω–∞–ª—ã —Å–æ–∑–¥–∞–Ω—ã: #general, #vip, #moderators")
        print("‚úÖ Iframe –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª–∞–º –≤–∫–ª—é—á–µ–Ω–æ")
        print("\nüöÄ Rocket.Chat –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:8001/chat/integrated/")
        print("=" * 60)

        return True

if __name__ == "__main__":
    try:
        setup = RocketChatAutoSetup()
        success = setup.run_full_setup()

        if success:
            print("\n‚úÖ –í–°–ï –ì–û–¢–û–í–û! –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é!")
            sys.exit(0)
        else:
            print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ!")
            sys.exit(1)

    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
