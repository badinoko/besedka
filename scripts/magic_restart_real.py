#!/usr/bin/env python3
"""
ü™Ñ –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö - –†–ï–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ:
1. –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª—ã VIP
2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç OAuth –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
3. –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
4. –ë–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –Ω—É–∂–µ–Ω Setup Wizard
"""

import subprocess
import time
import os

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ –í—ã–ø–æ–ª–Ω—è—é: {cmd}")
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {result.stderr}")
    return result

def magic_restart():
    """–ú–∞–≥–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ - —Ä–µ—à–∞–µ—Ç –í–°–ï –ø—Ä–æ–±–ª–µ–º—ã"""
    print("ü™Ñ –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø...")

    # 1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python –ø—Ä–æ—Ü–µ—Å—Å—ã
    print("\n1Ô∏è‚É£ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Python –ø—Ä–æ—Ü–µ—Å—Å—ã...")
    run_command("taskkill /f /im python.exe")

    # 2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ
    print("\n2Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...")
    run_command("docker-compose -f docker-compose.local.yml stop web")
    run_command("docker-compose -f docker-compose.local.yml up -d postgres redis mongo")

    time.sleep(5)  # –ñ–¥–µ–º MongoDB

    # 3. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã Rocket.Chat
    print("\n3Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è—é –ø—Ä–æ–±–ª–µ–º—ã Rocket.Chat...")

    # JavaScript –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í–°–ï–• –ø—Ä–æ–±–ª–µ–º
    fix_script = """
// –ú–ê–ì–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú ROCKET.CHAT

print('ü™Ñ –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –°–ö–†–ò–ü–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø...');

// 1. –§–∏–∫—Å–∏—Ä—É–µ–º Setup Wizard –Ω–∞–≤—Å–µ–≥–¥–∞
print('üîß –§–∏–∫—Å–∏—Ä—É—é Setup Wizard...');
db.rocketchat_settings.updateOne(
    {_id: 'Show_Setup_Wizard'},
    {$set: {value: 'completed', valueSource: 'customValue', _updatedAt: new Date()}}
);

// 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª vip-chat -> vip
print('üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∫–∞–Ω–∞–ª—ã...');
const vipChatRoom = db.rocketchat_room.findOne({_id: 'vip-chat'});
if (vipChatRoom) {
    // –ú–µ–Ω—è–µ–º ID –∫–∞–Ω–∞–ª–∞ —Å vip-chat –Ω–∞ vip
    db.rocketchat_room.updateOne(
        {_id: 'vip-chat'},
        {$set: {_id: 'vip', name: 'vip', _updatedAt: new Date()}}
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
    db.rocketchat_subscription.updateMany(
        {rid: 'vip-chat'},
        {$set: {rid: 'vip', name: 'vip', _updatedAt: new Date()}}
    );

    print('‚úÖ –ö–∞–Ω–∞–ª vip-chat –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ vip');
}

// 3. –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const owner = db.users.findOne({ username: 'owner' });
if (!owner) {
    print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    quit();
}

// 4. –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –í–°–ï –∫–∞–Ω–∞–ª—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
const allChannels = ['general', 'vip', 'moderators'];
allChannels.forEach(channelId => {
    const room = db.rocketchat_room.findOne({ _id: channelId });
    if (!room) {
        print('‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + channelId);
        return;
    }

    let subscription = db.rocketchat_subscription.findOne({
        'u._id': owner._id,
        rid: channelId
    });

    if (!subscription) {
        print('üìù –°–æ–∑–¥–∞—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª: ' + room.name);

        db.rocketchat_subscription.insertOne({
            _id: owner._id + channelId,
            u: {
                _id: owner._id,
                username: owner.username
            },
            rid: channelId,
            name: room.name,
            fname: room.fname || room.name,
            t: room.t,
            ts: new Date(),
            ls: new Date(),
            lr: new Date(),
            f: false,
            open: true,
            alert: false,
            roles: ['owner'],
            unread: 0,
            _updatedAt: new Date()
        });

        print('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ' + room.name);
    } else {
        print('‚ÑπÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –µ—Å—Ç—å: ' + room.name);
    }
});

// 5. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OAuth –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
print('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é OAuth...');

// –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
db.rocketchat_settings.deleteMany({_id: /^Accounts_OAuth_Custom/});

// –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä
const oauthSettings = [
    {_id: 'Accounts_OAuth_Custom-besedka', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-url', value: 'http://127.0.0.1:8001', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-token_path', value: '/o/token/', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-identity_path', value: '/api/v1/auth/rocket/user/', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-authorize_path', value: '/o/authorize/', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-scope', value: 'read', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-id', value: 'BesedkaRocketChat2025', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-secret', value: 'pbkdf2_sha256$600000$SJWzPbA9fRm98aaxqdzQI2$lskAN7LEKlEGkUP9DT6k/6SpPbESh2rnotOAHYsmkZc=', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-button_label_text', value: '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-button_color', value: '#1976d2', type: 'color', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-login_style', value: 'redirect', type: 'select', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-merge_users', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-show_button', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-roles_claim', value: 'roles', type: 'string', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-merge_roles', value: true, type: 'boolean', valueSource: 'customValue'},
    {_id: 'Accounts_OAuth_Custom-besedka-roles_to_groups_mapping', value: '{"owner":"admin,vip","moderator":"admin","user":"user"}', type: 'string', valueSource: 'customValue'}
];

oauthSettings.forEach(setting => {
    db.rocketchat_settings.updateOne(
        {_id: setting._id},
        {$set: {...setting, _updatedAt: new Date()}},
        {upsert: true}
    );
});

// 6. –û—Ç–∫–ª—é—á–∞–µ–º iframe –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
db.rocketchat_settings.updateOne(
    {_id: 'Iframe_Restrict_Access'},
    {$set: {value: false, valueSource: 'customValue', _updatedAt: new Date()}}
);

// 7. –û—Ç–∫–ª—é—á–∞–µ–º Service Worker –∏ Content-Security-Policy
print('üîß –û—Ç–∫–ª—é—á–∞—é Service Worker –∏ CSP...');
db.rocketchat_settings.updateOne(
    {_id: 'Register_ServiceWorker'},
    {$set: {value: false, valueSource: 'customValue', _updatedAt: new Date()}},
    {upsert: true}
);

db.rocketchat_settings.updateOne(
    {_id: 'Content_Security_Policy_Enable'},
    {$set: {value: false, valueSource: 'customValue', _updatedAt: new Date()}},
    {upsert: true}
);

// (–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö RC —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ–±—â–∏–π —Ñ–ª–∞–≥ Enable_PWA)
db.rocketchat_settings.updateOne(
    {_id: 'Enable_PWA'},
    {$set: {value: false, valueSource: 'customValue', _updatedAt: new Date()}},
    {upsert: true}
);

print('‚úÖ OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

// –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
print('\\n=== –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ ===');
print('‚úÖ Setup Wizard –æ—Ç–∫–ª—é—á–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞');
print('‚úÖ –ö–∞–Ω–∞–ª—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã: general, vip, moderators');
print('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã');
print('‚úÖ OAuth –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
print('‚úÖ Iframe —Ä–∞–∑—Ä–µ—à–µ–Ω');
print('\\nü™Ñ –ú–ê–ì–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
"""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç
    with open('magic_fix.js', 'w', encoding='utf-8') as f:
        f.write(fix_script)

    # –ñ–¥–µ–º –ø–æ–∫–∞ MongoDB –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
    print("‚è≥ –ñ–¥—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ MongoDB...")
    for i in range(10):
        result = run_command("docker exec magic_beans_new-mongo-1 mongosh --eval 'db.runCommand(\"ping\")'")
        if result.returncode == 0:
            break
        time.sleep(1)

    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("üîß –ü—Ä–∏–º–µ–Ω—è—é –º–∞–≥–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    run_command("docker cp magic_fix.js magic_beans_new-mongo-1:/tmp/")
    result = run_command("docker exec magic_beans_new-mongo-1 mongosh rocketchat /tmp/magic_fix.js")
    print(result.stdout)

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    os.remove('magic_fix.js')

    # 4. –ó–∞–ø—É—Å–∫–∞–µ–º Rocket.Chat
    print("\n4Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞—é Rocket.Chat...")
    run_command("docker-compose -f docker-compose.local.yml up -d rocketchat")

    time.sleep(10)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Rocket.Chat

    # 5. –ó–∞–ø—É—Å–∫–∞–µ–º Django
    print("\n5Ô∏è‚É£ –ì–æ—Ç–æ–≤–ª—é Django...")
    print("üöÄ –°–µ–π—á–∞—Å –∑–∞–ø—É—Å–∫–∞–π: daphne -b 127.0.0.1 -p 8001 config.asgi:application")

    print("\nü™Ñ –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –ó–ê–í–ï–†–®–ï–ù!")
    print("üéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´:")
    print("  ‚úÖ Setup Wizard –æ—Ç–∫–ª—é—á–µ–Ω –ù–ê–í–°–ï–ì–î–ê")
    print("  ‚úÖ –ö–∞–Ω–∞–ª—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
    print("  ‚úÖ OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print("  ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("  ‚úÖ –ë–æ–ª—å—à–µ –ù–ò–ö–û–ì–î–ê –Ω–µ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é!")

if __name__ == "__main__":
    magic_restart()
