// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ Rocket.Chat
print("=== –ü–†–û–í–ï–†–ö–ê –ö–ê–ù–ê–õ–û–í ROCKET.CHAT ===");

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã
const rooms = db.rocketchat_room.find({}, {_id: 1, name: 1, fname: 1, t: 1}).toArray();

print("\nüìä –ù–ê–ô–î–ï–ù–û –ö–ê–ù–ê–õ–û–í:", rooms.length);

rooms.forEach(room => {
    print(`\nüè† –ö–∞–Ω–∞–ª: ${room.name || 'unnamed'}`);
    print(`   ID: ${room._id}`);
    print(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${room.fname || '–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
    print(`   –¢–∏–ø: ${room.t}`);
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
print("\n=== –ü–û–î–ü–ò–°–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø OWNER ===");

const subscriptions = db.rocketchat_subscription.find(
    {'u.username': 'owner'},
    {rid: 1, name: 1, fname: 1}
).toArray();

print("\nüìä –ü–û–î–ü–ò–°–û–ö OWNER:", subscriptions.length);

subscriptions.forEach(sub => {
    print(`\n‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ${sub.name || 'unnamed'}`);
    print(`   ID –∫–∞–Ω–∞–ª–∞: ${sub.rid}`);
    print(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${sub.fname || '–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
});

print("\n=== –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù ===");
