#!/usr/bin/env python3
"""
üõ°Ô∏è –ë–ï–ó–û–ü–ê–°–ù–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –ë–ï–ó –ü–û–¢–ï–†–ò –î–ê–ù–ù–´–•
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –ë–ï–ó —É–¥–∞–ª–µ–Ω–∏—è volumes
"""

import subprocess
import time
import requests

def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"üîÑ {description}")
    print(f"   –ö–æ–º–∞–Ω–¥–∞: {cmd}")

    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, timeout=30)
        if result.returncode == 0:
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ")
            if result.stdout.strip():
                print(f"   –í—ã–≤–æ–¥: {result.stdout.strip()}")
        else:
            print(f"   ‚ö†Ô∏è –ö–æ–¥ –æ—à–∏–±–∫–∏: {result.returncode}")
            if result.stderr.strip():
                print(f"   –û—à–∏–±–∫–∞: {result.stderr.strip()}")
        return result.returncode == 0
    except subprocess.TimeoutExpired:
        print(f"   ‚è≥ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ–ª—å—à–µ 30 —Å–µ–∫—É–Ω–¥...")
        return True
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_service(url, name, expected_code=200):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == expected_code:
            print(f"   ‚úÖ {name}: HTTP {response.status_code} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"   ‚ö†Ô∏è {name}: HTTP {response.status_code} - –ø—Ä–æ–±–ª–µ–º—ã")
            return False
    except Exception as e:
        print(f"   ‚ùå {name}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({e})")
        return False

def safe_restart():
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö"""
    print("üõ°Ô∏è –ë–ï–ó–û–ü–ê–°–ù–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    print("‚ö†Ô∏è –í–ê–ñ–ù–û: –î–∞–Ω–Ω—ã–µ volumes –ù–ï –ë–£–î–£–¢ —É–¥–∞–ª–µ–Ω—ã!")
    print("=" * 50)

    # –®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    run_command(
        "taskkill /f /im python.exe",
        "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    )

    # –®–∞–≥ 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ web –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ù–ï –£–î–ê–õ–Ø–Ø volumes!)
    run_command(
        "docker-compose -f docker-compose.local.yml stop web",
        "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ web –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    )

    # –®–∞–≥ 3: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–ë–ï–ó —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö)
    print("\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤ (–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è)...")
    run_command(
        "docker-compose -f docker-compose.local.yml up -d postgres redis mongo rocketchat",
        "–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    )

    # –®–∞–≥ 4: –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MongoDB
    print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MongoDB...")
    time.sleep(10)

    # –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:")
    run_command(
        "docker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"",
        "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    )

    # –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ Django —á–µ—Ä–µ–∑ Daphne
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞...")
    print("   –ö–æ–º–∞–Ω–¥–∞: daphne -b 127.0.0.1 -p 8001 config.asgi:application")
    print("   ‚ö†Ô∏è –í–´–ü–û–õ–ù–ò–¢–ï –≠–¢–£ –ö–û–ú–ê–ù–î–£ –í–†–£–ß–ù–£–Æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ!")

    # –®–∞–≥ 7: –û–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫)...")
    time.sleep(30)

    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:")
    django_ok = check_service("http://127.0.0.1:8001", "Django")
    rocket_ok = check_service("http://127.0.0.1:3000", "Rocket.Chat")

    # –®–∞–≥ 8: –†–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    if django_ok and rocket_ok:
        print("üéâ –í–°–ï –°–ï–†–í–ò–°–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        print("‚úÖ Django: http://127.0.0.1:8001")
        print("‚úÖ Rocket.Chat: http://127.0.0.1:3000")
        print("üîÑ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print("   python scripts/auto_rocketchat.py")
    else:
        print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –°–ï–†–í–ò–°–´ –ù–ï –û–¢–í–ï–ß–ê–Æ–¢")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:")
        print("   docker-compose -f docker-compose.local.yml logs rocketchat")

    print("=" * 50)

if __name__ == "__main__":
    try:
        safe_restart()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
