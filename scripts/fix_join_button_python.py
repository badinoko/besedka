#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–Ω–æ–ø–∫–æ–π "Join the Channel"
–ü—Ä–æ–±–ª–µ–º–∞: —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç—ã–µ —Ä–æ–ª–∏ –≤ –ø–æ–¥–ø–∏—Å–∫–∞—Ö –Ω–∞ –∫–∞–Ω–∞–ª—ã
–†–µ—à–µ–Ω–∏–µ: –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ä–æ–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–∏—Å—Ç–µ–º–µ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞
"""

import pymongo
import sys

def fix_join_channel_issue():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ö–ù–û–ü–ö–û–ô 'JOIN THE CHANNEL'")
    print("=" * 60)

    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
        client = pymongo.MongoClient('mongodb://127.0.0.1:27017/rocketchat')
        db = client.rocketchat

        # –ö–æ–ª–ª–µ–∫—Ü–∏–∏
        subscriptions = db.rocketchat_subscription
        rooms = db.rocketchat_room

        print("\nüìä –¢–ï–ö–£–©–ò–ï –ü–û–î–ü–ò–°–ö–ò:")
        current_subs = list(subscriptions.find({}, {
            'u': 1,
            'name': 1,
            'roles': 1,
            'joined': 1,
            'autoJoin': 1
        }))

        for sub in current_subs:
            username = sub.get('u', {}).get('username', 'Unknown')
            name = sub.get('name', 'Unknown')
            roles = sub.get('roles', [])
            joined = sub.get('joined', False)
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}, –ö–∞–Ω–∞–ª: {name}, –†–æ–ª–∏: {roles}, Joined: {joined}")

        print("\nüõ†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–û–õ–ï–ô:")
        fixes = 0

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
        print("–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'owner'...")
        owner_updates = [
            ({'u.username': 'owner', 'name': 'general'},
             {'$set': {'roles': ['owner'], 'joined': True, 'autoJoin': True}}),
            ({'u.username': 'owner', 'name': 'vip'},
             {'$set': {'roles': ['owner', 'vip'], 'joined': True, 'autoJoin': True}}),
            ({'u.username': 'owner', 'name': 'moderators'},
             {'$set': {'roles': ['owner', 'moderator'], 'joined': True, 'autoJoin': True}})
        ]

        owner_modified = 0
        for query, update in owner_updates:
            result = subscriptions.update_one(query, update)
            owner_modified += result.modified_count

        if owner_modified > 0:
            fixes += 1
            print("‚úÖ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'owner' –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä)
        print("–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'admin'...")

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–æ–ª—å admin –≤ general (—É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Ä–æ–ª–∏)
        admin_general_result = subscriptions.update_one(
            {'u.username': 'admin', 'name': 'general'},
            {'$set': {'roles': ['user'], 'joined': True, 'autoJoin': True}}
        )

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–æ–ª—å admin –≤ moderators
        admin_mod_result = subscriptions.update_one(
            {'u.username': 'admin', 'name': 'moderators'},
            {'$set': {'roles': ['moderator'], 'joined': True, 'autoJoin': True}}
        )

        # –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É admin –Ω–∞ VIP –µ—Å–ª–∏ –µ—Å—Ç—å
        admin_vip_removal = subscriptions.delete_many({'u.username': 'admin', 'name': 'vip'})

        if admin_general_result.modified_count > 0 or admin_mod_result.modified_count > 0 or admin_vip_removal.deleted_count > 0:
            fixes += 1
            print("‚úÖ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'admin' –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
            if admin_vip_removal.deleted_count > 0:
                print("‚úÖ –£–±—Ä–∞–Ω –¥–æ—Å—Ç—É–ø admin –∫ VIP –∫–∞–Ω–∞–ª—É")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ autoJoin
        print("\nüîß –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –ö–ê–ù–ê–õ–û–í:")
        channels = ['general', 'vip', 'moderators']
        for channel_name in channels:
            channel = rooms.find_one({'name': channel_name})
            if channel:
                update_data = {}
                channel_updated = False

                if not channel.get('autoJoin', False):
                    update_data['autoJoin'] = True
                    channel_updated = True
                if channel.get('joinCodeRequired', False):
                    update_data['joinCodeRequired'] = False
                    channel_updated = True
                if channel.get('broadcast', False):
                    update_data['broadcast'] = False
                    channel_updated = True

                if channel_updated:
                    rooms.update_one({'name': channel_name}, {'$set': update_data})
                    print(f"‚úÖ –ö–∞–Ω–∞–ª '{channel_name}' –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
                    fixes += 1
                else:
                    print(f"‚úÖ –ö–∞–Ω–∞–ª '{channel_name}' —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")

        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\nüìä –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–î–ü–ò–°–û–ö:")
        final_subs = list(subscriptions.find({}, {
            'u': 1,
            'name': 1,
            'roles': 1,
            'joined': 1,
            'autoJoin': 1
        }))

        for sub in final_subs:
            username = sub.get('u', {}).get('username', 'Unknown')
            name = sub.get('name', 'Unknown')
            roles = sub.get('roles', [])
            joined = sub.get('joined', False)
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}, –ö–∞–Ω–∞–ª: {name}, –†–æ–ª–∏: {roles}, Joined: {joined}")

        # –†–µ–∑—é–º–µ
        print("\n" + "=" * 60)
        print(f"üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixes} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ö–Ω–æ–ø–∫–∞ 'Join the Channel' –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å")
        print("üìù –õ–û–ì–ò–ö–ê –†–û–õ–ï–ô:")
        print("   - owner: –≤—Å–µ –∫–∞–Ω–∞–ª—ã (general, vip, moderators)")
        print("   - admin: –æ–±—â–∏–π + –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã (general, moderators)")
        print("   - user: —Ç–æ–ª—å–∫–æ –æ–±—â–∏–π (general)")
        print("=" * 60)

        client.close()
        return True

    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

if __name__ == '__main__':
    success = fix_join_channel_issue()
    sys.exit(0 if success else 1)
