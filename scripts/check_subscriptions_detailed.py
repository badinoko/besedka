#!/usr/bin/env python3
"""
üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–î–ü–ò–°–û–ö MONGODB
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
–î–∞—Ç–∞: 23 –∏—é–Ω—è 2025
"""

import pymongo
from datetime import datetime

def check_owner_subscriptions():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ owner –≤ MongoDB"""

    print("üöÄ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–î–ü–ò–°–û–ö ROCKET.CHAT")
    print("="*50)

    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
        client = pymongo.MongoClient('mongodb://127.0.0.1:27017/rocketchat?directConnection=true')
        db = client['rocketchat']

        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ")

        # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
        users_collection = db['rocketchat_users']
        owner_user = users_collection.find_one({'username': 'owner'})

        if not owner_user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!")
            return

        owner_id = owner_user['_id']
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–∞–π–¥–µ–Ω: {owner_id}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫
        subscriptions_collection = db['rocketchat_subscription']
        owner_subscriptions = list(subscriptions_collection.find({'u._id': owner_id}))

        print(f"\nüìä –ù–ê–ô–î–ï–ù–û –ü–û–î–ü–ò–°–û–ö: {len(owner_subscriptions)}")
        print("-"*50)

        if not owner_subscriptions:
            print("‚ùå –ù–ï–¢ –ü–û–î–ü–ò–°–û–ö! –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç –∫–Ω–æ–ø–∫—É Join Channel!")
            return

        # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
        for i, sub in enumerate(owner_subscriptions, 1):
            print(f"\nüîπ –ü–û–î–ü–ò–°–ö–ê #{i}:")
            print(f"   –ö–∞–Ω–∞–ª: {sub.get('name', '–ù–ï–¢ –ò–ú–ï–ù–ò')}")
            print(f"   Room ID: {sub.get('rid', '–ù–ï–¢ ID')}")
            print(f"   –¢–∏–ø: {sub.get('t', '–ù–ï–¢ –¢–ò–ü–ê')}")
            print(f"   –û—Ç–∫—Ä—ã—Ç: {sub.get('open', '–ù–ï–¢ –°–¢–ê–¢–£–°–ê')}")
            print(f"   –†–æ–ª–∏: {sub.get('roles', [])}")
            print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {sub.get('active', '–ù–ï–¢ –°–¢–ê–¢–£–°–ê')}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            missing_fields = []
            for field in ['name', 'rid', 'open', 'u']:
                if field not in sub:
                    missing_fields.append(field)

            if missing_fields:
                print(f"   ‚ö†Ô∏è –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ü–û–õ–Ø: {missing_fields}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ
        print(f"\nüè† –ü–†–û–í–ï–†–ö–ê –ö–ê–ù–ê–õ–û–í –í –ë–ê–ó–ï:")
        print("-"*30)

        rooms_collection = db['rocketchat_room']
        channels = ['general', 'vip', 'moderators']

        for channel in channels:
            room = rooms_collection.find_one({'name': channel})
            if room:
                room_id = room['_id']

                # –ï—Å—Ç—å –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª?
                has_subscription = any(sub['rid'] == room_id for sub in owner_subscriptions)

                print(f"   üìÅ {channel}: ID={room_id}, –ø–æ–¥–ø–∏—Å–∫–∞={'‚úÖ' if has_subscription else '‚ùå'}")

                if not has_subscription:
                    print(f"      üî¥ –ù–ï–¢ –ü–û–î–ü–ò–°–ö–ò –ù–ê –ö–ê–ù–ê–õ {channel.upper()}!")
            else:
                print(f"   üìÅ {channel}: ‚ùå –ö–ê–ù–ê–õ –ù–ï –ù–ê–ô–î–ï–ù –í –ë–ê–ó–ï!")

        # –ò—Ç–æ–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        print(f"\nüéØ –ò–¢–û–ì–û–í–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
        print("="*30)

        expected_channels = {'general', 'vip', 'moderators'}
        subscribed_channels = {sub.get('name') for sub in owner_subscriptions}

        missing_subscriptions = expected_channels - subscribed_channels
        extra_subscriptions = subscribed_channels - expected_channels

        if missing_subscriptions:
            print(f"‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ü–û–î–ü–ò–°–ö–ò: {missing_subscriptions}")
            print("   ‚û§ –≠–¢–û –û–ë–™–Ø–°–ù–Ø–ï–¢ –ö–ù–û–ü–ö–£ JOIN CHANNEL!")

        if extra_subscriptions:
            print(f"‚ÑπÔ∏è –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–û–î–ü–ò–°–ö–ò: {extra_subscriptions}")

        if not missing_subscriptions:
            print("‚úÖ –í–°–ï –û–ñ–ò–î–ê–ï–ú–´–ï –ü–û–î–ü–ò–°–ö–ò –ï–°–¢–¨")
            print("   ‚û§ –ü–†–û–ë–õ–ï–ú–ê –ù–ï –í –ü–û–î–ü–ò–°–ö–ê–•, –ê –í –ü–†–ê–í–ê–• –î–û–°–¢–£–ü–ê")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–æ–∫
        inactive_subs = [sub for sub in owner_subscriptions if not sub.get('open', True)]
        if inactive_subs:
            print(f"‚ö†Ô∏è –ù–ï–ê–ö–¢–ò–í–ù–´–ï –ü–û–î–ü–ò–°–ö–ò: {len(inactive_subs)}")
            for sub in inactive_subs:
                print(f"   ‚îî‚îÄ {sub.get('name')}: open={sub.get('open')}")

    except Exception as e:
        print(f"üí• –û–®–ò–ë–ö–ê: {e}")

    finally:
        try:
            client.close()
            print("\nüîö –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ")
        except:
            pass

if __name__ == "__main__":
    check_owner_subscriptions()
