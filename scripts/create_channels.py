#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ VIP –∏ Moderators –≤ Rocket.Chat
"""

import pymongo
import sys
from datetime import datetime

def connect_to_mongodb():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB"""
    try:
        client = pymongo.MongoClient("mongodb://127.0.0.1:27017/")
        db = client["rocketchat"]
        return db
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: {e}")
        return None

def check_existing_channels(db):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    print("=== –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –ö–ê–ù–ê–õ–û–í ===")
    channels = db.rocketchat_room.find({"t": {"$in": ["c", "p"]}})
    for channel in channels:
        channel_type = "PUBLIC" if channel['t'] == 'c' else "PRIVATE"
        print(f"–ö–∞–Ω–∞–ª: {channel['name']} ({channel_type})")

def create_channel(db, channel_name, is_private, description):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª
    existing = db.rocketchat_room.find_one({"name": channel_name})
    if existing:
        print(f"–ö–∞–Ω–∞–ª '{channel_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return existing

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã
    import random
    import string
    room_id = channel_name + ''.join(random.choices(string.ascii_lowercase + string.digits, k=9))

    # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
    room = {
        "_id": room_id,
        "name": channel_name,
        "fname": channel_name,
        "t": "p" if is_private else "c",  # 'c' = public channel, 'p' = private group
        "msgs": 0,
        "usersCount": 0,
        "u": {
            "_id": "owner",  # ID –≤–ª–∞–¥–µ–ª—å—Ü–∞
            "username": "owner"
        },
        "ts": datetime.now(),
        "ro": False,  # read-only
        "sysMes": True,
        "_updatedAt": datetime.now(),
        "description": description
    }

    try:
        db.rocketchat_room.insert_one(room)
        print(f"‚úÖ –ö–∞–Ω–∞–ª '{channel_name}' —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ (ID: {room_id})")

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏
        sub_id = f"{channel_name}_owner_sub"
        subscription = {
            "_id": sub_id,
            "open": True,
            "alert": True,
            "unread": 0,
            "userMentions": 0,
            "groupMentions": 0,
            "ts": datetime.now(),
            "rid": room_id,
            "name": channel_name,
            "fname": channel_name,
            "t": "p" if is_private else "c",
            "u": {
                "_id": "owner",
                "username": "owner"
            },
            "_updatedAt": datetime.now()
        }

        db.rocketchat_subscription.insert_one(subscription)
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ (ID: {sub_id})")

        return room
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ '{channel_name}': {e}")
        return None

def setup_auto_join_general(db):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª—É general"""
    print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ü–†–ò–°–û–ï–î–ò–ù–ï–ù–ò–Ø –ö –ö–ê–ù–ê–õ–£ GENERAL ===")

    # –ù–∞—Ö–æ–¥–∏–º –∫–∞–Ω–∞–ª general
    general_room = db.rocketchat_room.find_one({"name": "general"})
    if not general_room:
        print("‚ùå –ö–∞–Ω–∞–ª 'general' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    print(f"‚úÖ –ö–∞–Ω–∞–ª 'general' –Ω–∞–π–¥–µ–Ω (ID: {general_room['_id']})")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    auto_join_settings = [
        {
            "_id": "Accounts_Default_User_Preferences_joinDefaultChannels",
            "value": True,
            "ts": datetime.now(),
            "_updatedAt": datetime.now()
        },
        {
            "_id": "Accounts_Default_User_Preferences_joinDefaultChannelsSilenced",
            "value": False,
            "ts": datetime.now(),
            "_updatedAt": datetime.now()
        }
    ]

    # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\n=== –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö ===")
    for setting in auto_join_settings:
        try:
            db.rocketchat_settings.replace_one(
                {"_id": setting["_id"]},
                setting,
                upsert=True
            )
            print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ '{setting['_id']}' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ '{setting['_id']}': {e}")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª general –∫–∞–∫ –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    try:
        db.rocketchat_room.update_one(
            {"name": "general"},
            {
                "$set": {
                    "default": True,
                    "featured": True,
                    "broadcast": False
                }
            }
        )
        print("‚úÖ –ö–∞–Ω–∞–ª 'general' –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–∞–∫ –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ 'general': {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–û–ó–î–ê–ù–ò–ï –ö–ê–ù–ê–õ–û–í ROCKET.CHAT")

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    db = connect_to_mongodb()
    if db is None:
        sys.exit(1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã
    check_existing_channels(db)

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
    print("\n=== –°–û–ó–î–ê–ù–ò–ï –ù–û–í–´–• –ö–ê–ù–ê–õ–û–í ===")

    # VIP –∫–∞–Ω–∞–ª (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π)
    create_channel(db, "vip", True, "VIP —á–∞—Ç –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞ –ë–µ—Å–µ–¥–∫–∞")

    # Moderators –∫–∞–Ω–∞–ª (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π)
    create_channel(db, "moderators", True, "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    setup_auto_join_general(db)

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("\n=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ===")
    final_channels = list(db.rocketchat_room.find({"t": {"$in": ["c", "p"]}}))
    print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤: {len(final_channels)}")
    for channel in final_channels:
        channel_type = "PUBLIC" if channel['t'] == 'c' else "PRIVATE"
        print(f"–ö–∞–Ω–∞–ª: {channel['name']} ({channel_type})")

    print("\n‚úÖ –°–û–ó–î–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    main()
