#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Rocket.Chat
"""

import requests
import json
import re
from urllib.parse import urlencode

def test_rocket_oauth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Rocket.Chat"""

    base_url = "http://127.0.0.1:8001"
    session = requests.Session()

    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Rocket.Chat")
    print("=" * 50)

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:")

    try:
        django_response = session.get(f"{base_url}/")
        print(f"   Django: {django_response.status_code}")

        rocket_response = session.get("http://127.0.0.1:3000/")
        print(f"   Rocket.Chat: {rocket_response.status_code}")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

    # 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Django
    print("\n2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Django:")

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ –¥–ª—è CSRF —Ç–æ–∫–µ–Ω–∞
        login_page = session.get(f"{base_url}/accounts/login/")
        print(f"   –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞: {login_page.status_code}")

        # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
        csrf_token = None

        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ meta —Ç–µ–≥–µ
        csrf_meta_match = re.search(r'<meta name="csrf-token" content="([^"]+)"', login_page.text)
        if csrf_meta_match:
            csrf_token = csrf_meta_match.group(1)

        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ input –ø–æ–ª–µ
        if not csrf_token:
            csrf_input_match = re.search(r'name="csrfmiddlewaretoken" value="([^"]+)"', login_page.text)
            if csrf_input_match:
                csrf_token = csrf_input_match.group(1)

        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ cookies
        if not csrf_token and 'csrftoken' in session.cookies:
            csrf_token = session.cookies['csrftoken']

        if not csrf_token:
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å CSRF —Ç–æ–∫–µ–Ω")
            print("   üîç –ü–æ–∏—Å–∫ –≤ —Ç–µ–∫—Å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            # –í—ã–≤–æ–¥–∏–º —á–∞—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            if 'csrf' in login_page.text.lower():
                print("   ‚ÑπÔ∏è  CSRF –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            else:
                print("   ‚ö†Ô∏è  CSRF –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            return False

        print(f"   ‚úÖ CSRF —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {csrf_token[:10]}...")

        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        login_data = {
            'username': 'owner',
            'password': 'owner123secure',
            'csrfmiddlewaretoken': csrf_token
        }

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = {
            'X-CSRFToken': csrf_token,
            'Referer': f"{base_url}/accounts/login/"
        }

        login_response = session.post(f"{base_url}/accounts/login/",
                                    data=login_data,
                                    headers=headers,
                                    allow_redirects=False)

        print(f"   –û—Ç–≤–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")

        if login_response.status_code in [200, 302]:
            print("   ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç
            if login_response.status_code == 302:
                redirect_location = login_response.headers.get('Location', '')
                print(f"   üîó –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {redirect_location}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
            print(f"   üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞: {login_response.text[:200]}...")
            return False

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        profile_response = session.get(f"{base_url}/users/cabinet/")
        print(f"   –î–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É: {profile_response.status_code}")

        if profile_response.status_code == 200:
            print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        elif profile_response.status_code == 302:
            print("   ‚ö†Ô∏è  –†–µ–¥–∏—Ä–µ–∫—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)")
        else:
            print("   ‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            return False

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False

    # 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth endpoint
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth endpoint:")

    try:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º OAuth –∑–∞–ø—Ä–æ—Å —Å —Ç–æ–∫–µ–Ω–æ–º
        oauth_params = {
            'client_id': 'BesedkaRocketChat2025',
            'redirect_uri': 'http://127.0.0.1:3000/_oauth/besedka',
            'response_type': 'code',
            'scope': 'read',
            'state': 'test_state_123'
        }

        oauth_url = f"{base_url}/o/authorize/?" + urlencode(oauth_params)
        print(f"   OAuth URL: {oauth_url}")

        oauth_response = session.get(oauth_url, allow_redirects=False)
        print(f"   OAuth –∑–∞–ø—Ä–æ—Å: {oauth_response.status_code}")

        if oauth_response.status_code == 302:
            redirect_url = oauth_response.headers.get('Location', '')
            if 'code=' in redirect_url:
                print("   ‚úÖ OAuth authorization code –ø–æ–ª—É—á–µ–Ω")
                auth_code = redirect_url.split('code=')[1].split('&')[0]
                print(f"   üîë –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {auth_code[:10]}...")
                print(f"   üîó –ü–æ–ª–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç: {redirect_url}")
            else:
                print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç: {redirect_url}")
        else:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {oauth_response.status_code}")
            if oauth_response.text:
                print(f"   üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {oauth_response.text[:200]}...")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ OAuth: {e}")
        return False

    # 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")

    try:
        integrated_response = session.get(f"{base_url}/chat/integrated/")
        print(f"   –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {integrated_response.status_code}")

        if integrated_response.status_code == 200:
            print("   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if 'rocketchat_url' in integrated_response.text:
                print("   ‚úÖ Rocket.Chat URL –Ω–∞–π–¥–µ–Ω –≤ —à–∞–±–ª–æ–Ω–µ")
            else:
                print("   ‚ö†Ô∏è  Rocket.Chat URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —à–∞–±–ª–æ–Ω–µ")

            if 'owner' in integrated_response.text:
                print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —à–∞–±–ª–æ–Ω–µ")
            else:
                print("   ‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —à–∞–±–ª–æ–Ω–µ")

        elif integrated_response.status_code == 302:
            redirect_location = integrated_response.headers.get('Location', '')
            print(f"   üîó –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {redirect_location}")
            print("   ‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {integrated_response.status_code}")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return False

    # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint
    print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint:")

    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401)
        api_response = session.get(f"{base_url}/api/v1/auth/rocket/")
        print(f"   API endpoint (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞): {api_response.status_code}")

        if api_response.status_code == 401:
            print("   ‚úÖ API —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–æ–∂–∏–¥–∞–µ–º–æ)")
        elif api_response.status_code == 200:
            print("   ‚úÖ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ")
            try:
                api_data = api_response.json()
                print(f"   üìä –î–∞–Ω–Ω—ã–µ API: {json.dumps(api_data, indent=2)}")
            except:
                print("   ‚ö†Ô∏è  –û—Ç–≤–µ—Ç API –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON")
        else:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å API: {api_response.status_code}")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {e}")
        return False

    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞")
    print("üîó –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print(f"   - –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–∞—Ç: {base_url}/chat/integrated/")
    print(f"   - –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {base_url}/chat/test/")
    print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ë–µ—Å–µ–¥–∫—É' –≤ Rocket.Chat")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")

    return True

if __name__ == "__main__":
    test_rocket_oauth()
