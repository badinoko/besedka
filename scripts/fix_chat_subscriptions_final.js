// –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú –ß–ê–¢–ê
print("üöÄ –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú –ß–ê–¢–ê");
print("=" . repeat(50));

// 1. –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
const user = db.users.findOne({username: "owner"});
if (!user) {
    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    quit();
}
print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:", user.username);

// 2. –ù–∞–π—Ç–∏ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
const channels = db.rocketchat_room.find({t: "c"}).toArray();
print("üìã –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤:", channels.length);

channels.forEach(function(channel) {
    print("  - " + channel.name + " (ID: " + channel._id + ")");
});

// 3. –£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const deletedSubs = db.rocketchat_subscription.deleteMany({
    "u._id": user._id
});
print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫:", deletedSubs.deletedCount);

// 4. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
let createdSubscriptions = 0;

channels.forEach(function(channel) {
    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–∞–Ω–∞–ª–∞
    let roles = ["owner"];
    if (channel.name === "vip" || channel._id === "vip") {
        roles.push("vip");
    }
    if (channel.name === "moderators" || channel._id === "moderators") {
        roles.push("moderator");
    }

    // –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
    const subscription = {
        "_id": new ObjectId(),
        "open": true,
        "alert": true,
        "unread": 0,
        "userMentions": 0,
        "groupMentions": 0,
        "ts": new Date(),
        "rid": channel._id,
        "name": channel.name,
        "fname": channel.fname || channel.name,
        "customFields": {},
        "t": "c",
        "u": {
            "_id": user._id,
            "username": user.username,
            "name": user.name || user.username
        },
        "ls": new Date(),
        "lr": new Date(),
        "roles": roles,
        "_updatedAt": new Date()
    };

    const result = db.rocketchat_subscription.insertOne(subscription);
    if (result.acknowledged) {
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:", channel.name);
        createdSubscriptions++;
    } else {
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª:", channel.name);
    }
});

print("");
print("üìä –ò–¢–û–ì–û –°–û–ó–î–ê–ù–û –ü–û–î–ü–ò–°–û–ö:", createdSubscriptions);

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print("");
print("üîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:");
const finalSubscriptions = db.rocketchat_subscription.find({
    "u._id": user._id
}).toArray();

finalSubscriptions.forEach(function(sub) {
    print("  ‚úÖ " + sub.name + " - —Ä–æ–ª–∏: " + sub.roles.join(", "));
});

// 6. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
print("");
print("üë• –î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –í –£–ß–ê–°–¢–ù–ò–ö–ò –ö–ê–ù–ê–õ–û–í:");

channels.forEach(function(channel) {
    // –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤ usernames –∫–∞–Ω–∞–ª–∞ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω)
    const updateResult = db.rocketchat_room.updateOne(
        { _id: channel._id },
        {
            $addToSet: {
                usernames: user.username,
                "u._id": user._id
            },
            $set: {
                msgs: channel.msgs || 0,
                usersCount: (channel.usersCount || 0) + 1,
                "_updatedAt": new Date()
            }
        }
    );

    if (updateResult.modifiedCount > 0) {
        print("  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∏:", channel.name);
    } else {
        print("  ‚ÑπÔ∏è –£–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫:", channel.name);
    }
});

print("");
print("üéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!");
print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner —Ç–µ–ø–µ—Ä—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã");
print("‚úÖ –ë–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∏ 'Join the Channel'");
print("‚úÖ –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ");
print("");
print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Rocket.Chat –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
print("   docker-compose -f docker-compose.local.yml restart rocketchat");
