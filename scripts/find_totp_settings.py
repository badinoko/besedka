import requests
import json

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Rocket.Chat
ROCKETCHAT_URL = "http://127.0.0.1:3000"
ADMIN_USERNAME = "owner"
ADMIN_PASSWORD = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ Rocket.Chat: ")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏–Ω–∞
def login_to_rocketchat():
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Rocket.Chat...")

    login_data = {
        "user": ADMIN_USERNAME,
        "password": ADMIN_PASSWORD
    }

    response = requests.post(
        f"{ROCKETCHAT_URL}/api/v1/login",
        json=login_data
    )

    if response.status_code == 200:
        data = response.json()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
        return {
            "X-Auth-Token": data["data"]["authToken"],
            "X-User-Id": data["data"]["userId"]
        }
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
def find_totp_settings(headers):
    print("\nüîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å TOTP –∏ 2FA...")

    # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    response = requests.get(
        f"{ROCKETCHAT_URL}/api/v1/settings",
        headers=headers
    )

    if response.status_code == 200:
        settings = response.json().get("settings", [])
        print(f"üìä –í—Å–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞–π–¥–µ–Ω–æ: {len(settings)}")

        # –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å TOTP, 2FA, Auth
        relevant_keywords = ["totp", "2fa", "twofactor", "auth", "security", "admin"]
        relevant_settings = []

        for setting in settings:
            setting_id = setting.get("_id", "").lower()
            for keyword in relevant_keywords:
                if keyword in setting_id:
                    relevant_settings.append(setting)
                    break

        print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {len(relevant_settings)}")

        # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        for setting in relevant_settings:
            print(f"\nüîπ {setting.get('_id')}")
            print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {setting.get('value')}")
            print(f"   –¢–∏–ø: {setting.get('type')}")
            if setting.get('public'):
                print(f"   –ü—É–±–ª–∏—á–Ω–∞—è: –î–∞")

        # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("\nüéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        critical_settings = [
            "Accounts_TwoFactorAuthentication_Enforce_For_Admin_Route",
            "Accounts_TwoFactorAuthentication_Enforce_For_Admin",
            "API_Force_Auth_To_Settings_Modify",
            "Accounts_RequirePasswordConfirmation"
        ]

        for setting_id in critical_settings:
            response = requests.get(
                f"{ROCKETCHAT_URL}/api/v1/settings/{setting_id}",
                headers=headers
            )
            if response.status_code == 200:
                value = response.json().get("value", "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                print(f"\n   {setting_id}: {value}")
            else:
                print(f"\n   {setting_id}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {response.text}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    print("üöÄ –ü–æ–∏—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ TOTP –≤ Rocket.Chat")
    print("=" * 50)

    headers = login_to_rocketchat()
    if not headers:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.")
        return

    find_totp_settings(headers)

    print("\n" + "=" * 50)
    print("\nüí° –í–ê–ñ–ù–û: –ò—â–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏–ø–∞:")
    print("- Enforce_For_Admin")
    print("- RequirePasswordConfirmation")
    print("- Force_Auth_To_Settings_Modify")

if __name__ == "__main__":
    main()
