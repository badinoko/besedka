from django.shortcuts import render, redirect
from django.views import View
from django.contrib.auth.mixins import LoginRequiredMixin, UserPassesTestMixin
from django.contrib.admin.views.decorators import staff_member_required
from django.utils.decorators import method_decorator
from django.contrib import messages
from django.urls import reverse_lazy
from django.contrib.auth import get_user_model
from django.contrib.auth.models import Group
from django.db import transaction
from django.core.exceptions import PermissionDenied
import logging

from .forms_owner_platform import AssignStoreOwnerForm, DeactivateStoreOwnerForm
from users.models import UserProfile
from .utils import TemporaryPasswordManager
from core.models import ActionLog

User = get_user_model()
logger = logging.getLogger(__name__)

class OwnerRequiredMixin(UserPassesTestMixin):
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"""

    def test_func(self):
        return (
            self.request.user.is_authenticated and
            self.request.user.role == User.Role.OWNER
        )

    def handle_no_permission(self):
        messages.error(self.request, "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞.")
        return redirect('owner_admin:index')

class ManageStoreOwnerView(OwnerRequiredMixin, LoginRequiredMixin, View):
    template_name = "owner_admin/manage_store_owner.html"
    assign_form_class = AssignStoreOwnerForm
    deactivate_form_class = DeactivateStoreOwnerForm

    def _get_common_context(self, request, assign_form=None, deactivate_form=None, temp_password_details=None):
        current_store_owner = User.objects.filter(role=User.Role.STORE_OWNER, is_active=True).first()
        context = {
            "form": assign_form if assign_form else self.assign_form_class(),
            "deactivate_form": deactivate_form if deactivate_form else self.deactivate_form_class(),
            "current_store_owner": current_store_owner,
            "title": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –í–ª–∞–¥–µ–ª—å—Ü–µ–º –ú–∞–≥–∞–∑–∏–Ω–∞",
            **(request.admin_site.each_context(request) if hasattr(request, 'admin_site') else {})
        }
        if temp_password_details:
            context["temp_password_details"] = temp_password_details
        return context

    def get(self, request, *args, **kwargs):
        return render(request, self.template_name, self._get_common_context(request))

    @transaction.atomic
    def post(self, request, *args, **kwargs):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (–ø–æ –Ω–∞–ª–∏—á–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—è/–∫–Ω–æ–ø–∫–∏)
        if "assign_owner_submit" in request.POST:
            return self._handle_assign_owner(request)
        elif "deactivate_owner_submit" in request.POST:
            return self._handle_deactivate_owner(request)

        messages.error(request, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
        return render(request, self.template_name, self._get_common_context(request))

    @transaction.atomic
    def _handle_assign_owner(self, request):
        assign_form = self.assign_form_class(request.POST)
        if assign_form.is_valid():
            username = assign_form.cleaned_data['username']
            email = assign_form.cleaned_data['email']
            first_name = assign_form.cleaned_data.get('first_name', '')
            last_name = assign_form.cleaned_data.get('last_name', '')

            # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–©–ò–¢–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            if username == 'owner_user':
                messages.error(
                    request,
                    "üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã! "
                    "–≠—Ç–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —Å–∏—Å—Ç–µ–º—ã."
                )
                return render(request, self.template_name, self._get_common_context(request, assign_form=assign_form))

            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞
                existing_store_owner = User.objects.filter(role=User.Role.STORE_OWNER, is_active=True).first()
                if existing_store_owner:
                    messages.warning(
                        request,
                        f"‚ö†Ô∏è –£–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞: {existing_store_owner.username}. "
                        f"–°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –Ω–æ–≤–æ–≥–æ."
                    )
                    return render(request, self.template_name, self._get_common_context(request, assign_form=assign_form))

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
                existing_user = User.objects.filter(username=username).first()
                if existing_user:
                    # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                    if existing_user.username == 'owner_user' or existing_user.role == 'owner':
                        messages.error(
                            request,
                            "üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã!"
                        )
                        return render(request, self.template_name, self._get_common_context(request, assign_form=assign_form))

                    # –ü–æ–≤—ã—à–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞
                    existing_user.role = User.Role.STORE_OWNER
                    existing_user.is_staff = True
                    existing_user.is_active = True
                    if first_name:
                        existing_user.first_name = first_name
                    if last_name:
                        existing_user.last_name = last_name
                    if first_name or last_name:
                        existing_user.name = f"{first_name} {last_name}".strip()
                    existing_user.save()

                    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
                    temp_password_details = TemporaryPasswordManager.create_temporary_password_for_user(
                        existing_user, valid_hours=24
                    )

                    messages.success(
                        request,
                        f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –º–∞–≥–∞–∑–∏–Ω–∞. "
                        f"–í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å —Å–æ–∑–¥–∞–Ω –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 24 —á–∞—Å–∞."
                    )

                    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                    ActionLog.objects.create(
                        user=request.user,
                        action_type=ActionLog.ACTION_EDIT,
                        model_name=User.__name__,
                        object_id=existing_user.pk,
                        object_repr=str(existing_user),
                        details=f'–ù–∞–∑–Ω–∞—á–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –º–∞–≥–∞–∑–∏–Ω–∞. –°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å.'
                    )

                    return render(request, self.template_name,
                                self._get_common_context(request, temp_password_details=temp_password_details))

                else:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    new_user = User.objects.create_user(
                        username=username,
                        email=email,
                        first_name=first_name,
                        last_name=last_name,
                        role=User.Role.STORE_OWNER,
                        is_staff=True,
                        is_active=True
                    )

                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–µ name
                    new_user.name = f"{first_name} {last_name}".strip()
                    new_user.save()

                    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
                    temp_password_details = TemporaryPasswordManager.create_temporary_password_for_user(
                        new_user, valid_hours=24
                    )

                    messages.success(
                        request,
                        f"‚úÖ –ù–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ '{username}' —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ. "
                        f"–í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 24 —á–∞—Å–∞."
                    )

                    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                    ActionLog.objects.create(
                        user=request.user,
                        action_type=ActionLog.ACTION_ADD,
                        model_name=User.__name__,
                        object_id=new_user.pk,
                        object_repr=str(new_user),
                        details=f'–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞. –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.'
                    )

                    return render(request, self.template_name,
                                self._get_common_context(request, temp_password_details=temp_password_details))

            except Exception as e:
                messages.error(request, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                return render(request, self.template_name, self._get_common_context(request, assign_form=assign_form))
        else:
            # –§–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞
            return render(request, self.template_name, self._get_common_context(request, assign_form=assign_form))

    def _handle_deactivate_owner(self, request):
        deactivate_form = self.deactivate_form_class(request.POST)
        current_store_owner = User.objects.filter(role=User.Role.STORE_OWNER, is_active=True).first()

        if not current_store_owner:
            messages.warning(request, "‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –í–ª–∞–¥–µ–ª—å—Ü–∞ –ú–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏.")
            return redirect(reverse_lazy("owner_admin:manage_store_owner"))

        # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–©–ò–¢–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        if current_store_owner.username == 'owner_user' or current_store_owner.role == 'owner':
            messages.error(
                request,
                "üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ–ª—å–∑—è –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã! "
                "–≠—Ç–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —Å–∏—Å—Ç–µ–º—ã."
            )
            return render(request, self.template_name, self._get_common_context(request, deactivate_form=deactivate_form))

        if deactivate_form.is_valid():
            confirm_deactivation = deactivate_form.cleaned_data.get('confirm_deactivation')
            if confirm_deactivation:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
                original_username = current_store_owner.username

                # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞
                current_store_owner.role = User.Role.USER
                current_store_owner.is_staff = False
                current_store_owner.is_active = False
                current_store_owner.save()

                # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
                store_admins = User.objects.filter(role=User.Role.STORE_ADMIN, is_active=True)
                deactivated_admins_usernames = []
                for admin in store_admins:
                    # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    if admin.username == 'owner_user' or admin.role == 'owner':
                        continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

                    admin.role = User.Role.USER
                    admin.is_staff = False
                    admin.is_active = False
                    admin.save()
                    deactivated_admins_usernames.append(admin.username)

                logger.info(f"–í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ {original_username} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, —Ä–æ–ª—å –ø–æ–Ω–∏–∂–µ–Ω–∞ –¥–æ USER, is_staff —Å–±—Ä–æ—à–µ–Ω.")

                # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å —É –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞
                UserProfile.objects.filter(user=current_store_owner).update(temp_password=False, password_expires_at=None)

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
                ActionLog.objects.create(
                    user=request.user,
                    action_type=ActionLog.ACTION_EDIT,
                    model_name=User.__name__,
                    object_id=current_store_owner.pk,
                    object_repr=original_username,
                    details=f'–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –ø–æ–Ω–∏–∂–µ–Ω –≤ —Ä–æ–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞: {original_username}. '
                            f'–¢–∞–∫–∂–µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –∏ –ø–æ–Ω–∏–∂–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {", ".join(deactivated_admins_usernames) if deactivated_admins_usernames else "–Ω–µ—Ç"}.'
                )

                success_message = f"‚úÖ –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ '{original_username}' –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –ø–æ–Ω–∏–∂–µ–Ω –≤ —Ä–æ–ª–∏."
                if deactivated_admins_usernames:
                    success_message += f" –¢–∞–∫–∂–µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –∏ –ø–æ–Ω–∏–∂–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞: {', '.join(deactivated_admins_usernames)}."
                messages.success(request, success_message)
            else:
                messages.error(request, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é.")
        else:
            messages.error(request, "‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏.")

        return render(request, self.template_name, self._get_common_context(request, deactivate_form=deactivate_form))

# TODO:
# - –î–æ–±–∞–≤–∏—Ç—å name –∞—Ç—Ä–∏–±—É—Ç—ã "assign_owner_submit" –∏ "deactivate_owner_submit" –∫ –∫–Ω–æ–ø–∫–∞–º –≤ —à–∞–±–ª–æ–Ω–µ.
# - –¢—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é –ª–æ–≥–∏–∫—É, –≤–∫–ª—é—á–∞—è –∫—Ä–∞–µ–≤—ã–µ —Å–ª—É—á–∞–∏.
# - –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–ø—Ä–æ—Å –æ —Å—É–¥—å–±–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ú–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –í–ª–∞–¥–µ–ª—å—Ü–∞ –ú–∞–≥–∞–∑–∏–Ω–∞.
# - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (has_permission –≤ OwnerAdminSite) —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
