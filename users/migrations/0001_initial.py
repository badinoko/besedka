# Generated by Django 4.2.21 on 2025-06-26 16:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "–í–ª–∞–¥–µ–ª–µ—Ü –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"),
                            ("moderator", "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"),
                            ("store_owner", "–í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞"),
                            ("store_admin", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞"),
                            ("user", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"),
                            ("guest", "–ì–æ—Å—Ç—å"),
                        ],
                        default="user",
                        max_length=20,
                        verbose_name="–†–æ–ª—å",
                    ),
                ),
                (
                    "role_icon",
                    models.CharField(
                        blank=True,
                        help_text="–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —ç–º–æ–¥–∑–∏-–∑–Ω–∞—á–æ–∫ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                        max_length=10,
                        null=True,
                        verbose_name="–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∑–Ω–∞—á–æ–∫",
                    ),
                ),
                (
                    "telegram_id",
                    models.BigIntegerField(
                        blank=True,
                        help_text="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram",
                        null=True,
                        unique=True,
                        verbose_name="Telegram ID",
                    ),
                ),
                (
                    "telegram_username",
                    models.CharField(
                        blank=True,
                        help_text="–í–∞—à username –≤ Telegram (–±–µ–∑ @)",
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="Telegram Username",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 300x300px",
                        null=True,
                        upload_to="avatars/",
                        verbose_name="–ê–≤–∞—Ç–∞—Ä",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤)",
                        max_length=500,
                        verbose_name="–û —Å–µ–±–µ",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="–ì–æ—Ä–æ–¥, —Ä–µ–≥–∏–æ–Ω –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞",
                        max_length=100,
                        verbose_name="–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("beginner", "üå± –ù–æ–≤–∏—á–æ–∫"),
                            ("intermediate", "üåø –û–ø—ã—Ç–Ω—ã–π"),
                            ("advanced", "üå≥ –≠–∫—Å–ø–µ—Ä—Ç"),
                            ("master", "üèÜ –ú–∞—Å—Ç–µ—Ä"),
                        ],
                        default="beginner",
                        help_text="–í–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞ –≤ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–∏",
                        max_length=20,
                        verbose_name="–£—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="–í–∞—à –ª–∏—á–Ω—ã–π —Å–∞–π—Ç –∏–ª–∏ –±–ª–æ–≥",
                        verbose_name="–í–µ–±-—Å–∞–π—Ç",
                    ),
                ),
                (
                    "karma_points",
                    models.IntegerField(
                        default=0,
                        help_text="–û—á–∫–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ",
                        verbose_name="–û—á–∫–∏ –∫–∞—Ä–º—ã",
                    ),
                ),
                (
                    "followers_count",
                    models.IntegerField(
                        default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
                    ),
                ),
                (
                    "following_count",
                    models.IntegerField(default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫"),
                ),
                (
                    "posts_count",
                    models.IntegerField(default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤"),
                ),
                (
                    "photos_count",
                    models.IntegerField(
                        default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"
                    ),
                ),
                (
                    "likes_given",
                    models.IntegerField(default=0, verbose_name="–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤"),
                ),
                (
                    "likes_received",
                    models.IntegerField(default=0, verbose_name="–ü–æ–ª—É—á–µ–Ω–æ –ª–∞–π–∫–æ–≤"),
                ),
                (
                    "comments_count",
                    models.IntegerField(
                        default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"
                    ),
                ),
                (
                    "is_profile_public",
                    models.BooleanField(
                        default=True,
                        help_text="–†–∞–∑—Ä–µ—à–∏—Ç—å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–∏–¥–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å",
                        verbose_name="–ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å",
                    ),
                ),
                (
                    "show_experience_level",
                    models.BooleanField(
                        default=True, verbose_name="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞"
                    ),
                ),
                (
                    "show_karma",
                    models.BooleanField(default=True, verbose_name="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞—Ä–º—É"),
                ),
                (
                    "show_statistics",
                    models.BooleanField(
                        default=True, verbose_name="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
                    ),
                ),
                (
                    "allow_direct_messages",
                    models.BooleanField(
                        default=True, verbose_name="–†–∞–∑—Ä–µ—à–∏—Ç—å –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(default=True, verbose_name="Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"),
                ),
                (
                    "notify_new_followers",
                    models.BooleanField(
                        default=True, verbose_name="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–∞—Ö"
                    ),
                ),
                (
                    "notify_likes",
                    models.BooleanField(
                        default=True, verbose_name="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª–∞–π–∫–∞—Ö"
                    ),
                ),
                (
                    "notify_comments",
                    models.BooleanField(
                        default=True, verbose_name="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö"
                    ),
                ),
                (
                    "is_banned",
                    models.BooleanField(
                        default=False,
                        help_text="–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É",
                        verbose_name="–ó–∞–±–∞–Ω–µ–Ω",
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, verbose_name="–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                    ),
                ),
                (
                    "account_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                "verbose_name_plural": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "temp_password",
                    models.BooleanField(
                        default=False,
                        help_text="–û—Ç–º–µ—á–µ–Ω–æ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å",
                        verbose_name="–í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å",
                    ),
                ),
                (
                    "password_expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è",
                        null=True,
                        verbose_name="–ü–∞—Ä–æ–ª—å –∏—Å—Ç–µ–∫–∞–µ—Ç",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="–¢–µ–ª–µ—Ñ–æ–Ω"),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[
                            ("ru", "–†—É—Å—Å–∫–∏–π"),
                            ("en", "English"),
                            ("ua", "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"),
                        ],
                        default="ru",
                        max_length=10,
                        verbose_name="–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Europe/Moscow",
                        max_length=50,
                        verbose_name="–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å",
                    ),
                ),
                (
                    "theme_preference",
                    models.CharField(
                        choices=[
                            ("light", "–°–≤–µ—Ç–ª–∞—è"),
                            ("dark", "–¢–µ–º–Ω–∞—è"),
                            ("auto", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"),
                        ],
                        default="light",
                        max_length=10,
                        verbose_name="–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                    ),
                ),
                (
                    "favorite_strains",
                    models.TextField(
                        blank=True,
                        help_text="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Å–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
                        verbose_name="–õ—é–±–∏–º—ã–µ —Å–æ—Ä—Ç–∞",
                    ),
                ),
                (
                    "growing_style",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("indoor", "üè† –ò–Ω–¥–æ—Ä"),
                            ("outdoor", "üåû –ê—É—Ç–¥–æ—Ä"),
                            ("greenhouse", "üè° –¢–µ–ø–ª–∏—Ü–∞"),
                            ("mixed", "üîÑ –°–º–µ—à–∞–Ω–Ω—ã–π"),
                        ],
                        max_length=50,
                        verbose_name="–°—Ç–∏–ª—å –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è",
                    ),
                ),
                (
                    "equipment",
                    models.TextField(
                        blank=True,
                        help_text="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è",
                        verbose_name="–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_extra",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                    ),
                ),
            ],
            options={
                "verbose_name": "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å",
                "verbose_name_plural": "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("like", "üëç –õ–∞–π–∫"),
                            ("comment", "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"),
                            ("follow", "üë• –ü–æ–¥–ø–∏—Å–∫–∞"),
                            ("mention", "üì¢ –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ"),
                            ("system", "‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ"),
                            ("order", "üõçÔ∏è –ù–æ–≤—ã–π –∑–∞–∫–∞–∑"),
                            ("chat_message", "üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ"),
                        ],
                        max_length=20,
                        verbose_name="–¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")),
                ("message", models.TextField(verbose_name="–°–æ–æ–±—â–µ–Ω–∏–µ")),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "is_read",
                    models.BooleanField(default=False, verbose_name="–ü—Ä–æ—á–∏—Ç–∞–Ω–æ"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="–î–∞—Ç–∞"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="–ü–æ–ª—É—á–∞—Ç–µ–ª—å",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å",
                    ),
                ),
            ],
            options={
                "verbose_name": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
                "verbose_name_plural": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BanRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ban_type",
                    models.CharField(
                        choices=[
                            ("global", "Global Ban"),
                            ("chat", "Chat Ban"),
                            ("gallery", "Gallery Ban"),
                            ("growlogs", "Grow Logs Ban"),
                        ],
                        default="global",
                        max_length=20,
                        verbose_name="Ban Type",
                    ),
                ),
                ("reason", models.TextField(blank=True, verbose_name="Reason")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Leave empty for permanent ban",
                        null=True,
                        verbose_name="Expires at",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "banned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bans_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Ban Record",
                "verbose_name_plural": "Ban Records",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserFollow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="–î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏"
                    ),
                ),
                (
                    "followed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="–ù–∞ –∫–æ–≥–æ –ø–æ–¥–ø–∏—Å–∞–Ω",
                    ),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="–ü–æ–¥–ø–∏—Å—á–∏–∫",
                    ),
                ),
            ],
            options={
                "verbose_name": "–ü–æ–¥–ø–∏—Å–∫–∞",
                "verbose_name_plural": "–ü–æ–¥–ø–∏—Å–∫–∏",
                "ordering": ["-created_at"],
                "unique_together": {("follower", "followed")},
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="–î–∞—Ç–∞"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes_given_new",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                    ),
                ),
            ],
            options={
                "verbose_name": "–õ–∞–π–∫",
                "verbose_name_plural": "–õ–∞–π–∫–∏",
                "ordering": ["-created_at"],
                "unique_together": {("user", "content_type", "object_id")},
            },
        ),
    ]
