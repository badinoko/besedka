from django.shortcuts import redirect
from django.urls import reverse_lazy # –ò—Å–ø–æ–ª—å–∑—É–µ–º reverse_lazy –¥–ª—è class-based views
from django.views.generic.edit import FormView
from django.contrib import messages
from django.contrib.auth import get_user_model

from .forms import StoreOwnerForm
from .utils import TemporaryPasswordManager
from core.models import ActionLog
# –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ OwnerRequiredMixin —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ï—Å–ª–∏ –Ω–µ—Ç, –µ–≥–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å.
# –ü—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫ –æ–Ω –º–æ–≥ –±—ã –≤—ã–≥–ª—è–¥–µ—Ç—å:
# from django.contrib.auth.mixins import UserPassesTestMixin
# class OwnerRequiredMixin(UserPassesTestMixin):
#     def test_func(self):
#         return self.request.user.is_authenticated and getattr(self.request.user, 'role', None) == 'owner'
#     def handle_no_permission(self):
#         messages.error(self.request, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
#         return redirect('some_other_view') # –∏–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é, –∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞

# –ó–ê–ì–õ–£–®–ö–ê: –ï—Å–ª–∏ OwnerRequiredMixin –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º UserPassesTestMixin
from django.contrib.auth.mixins import UserPassesTestMixin

User = get_user_model()

class OwnerRequiredMixin(UserPassesTestMixin):
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"""

    def test_func(self):
        return (
            self.request.user.is_authenticated and
            getattr(self.request.user, 'role', None) == 'owner'
        )

    def handle_no_permission(self):
        messages.error(self.request, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞.")
        return redirect('owner_admin:index')

class StoreOwnerManagementView(OwnerRequiredMixin, FormView):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è Owner –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)."""
    template_name = 'owner_admin/store_owner_management.html'
    form_class = StoreOwnerForm
    success_url = reverse_lazy('users:store_owner_management')

    def get_context_data(self, **kwargs):
        """–î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç"""
        context = super().get_context_data(**kwargs)

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
        current_store_owners = User.objects.filter(
            role='store_owner'
        ).select_related('profile_extra').order_by('-date_joined')

        context['current_store_owners'] = current_store_owners
        return context

    def form_valid(self, form):
        action = form.cleaned_data['action']
        current_user = self.request.user

        if action == 'create_new':
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞
            username = form.cleaned_data['username']
            email = form.cleaned_data['email']

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if User.objects.filter(username=username).exists():
                messages.error(self.request, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º "{username}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
                return self.form_invalid(form)

            if User.objects.filter(email=email).exists():
                messages.error(self.request, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email "{email}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
                return self.form_invalid(form)

            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            new_owner = User.objects.create_user(
                username=username,
                email=email,
                role='store_owner',
                is_staff=True  # –í–ª–∞–¥–µ–ª—å—Ü—ã –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ
            )

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
            from .models import UserProfile
            profile, created = UserProfile.objects.get_or_create(user=new_owner)

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            temp_creds = TemporaryPasswordManager.create_temp_credentials(new_owner, role='store_owner')

            messages.success(
                self.request,
                f'‚úÖ –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ "{temp_creds["username"]}" —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! '
                f'–í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: <strong>{temp_creds["password"]}</strong> '
                f'(–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ {temp_creds["expires_at"].strftime("%d.m.Y %H:%M") if temp_creds["expires_at"] else "–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"}). '
                f'üìß –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–º—É –≤–ª–∞–¥–µ–ª—å—Ü—É.'
            )

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç –∏–º–µ–Ω–∏ Owner –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            if isinstance(current_user, User) and current_user.is_authenticated:
                ActionLog.objects.create(
                    user=current_user,
                    action_type=ActionLog.ACTION_ADD,
                    model_name=User.__name__,
                    object_id=new_owner.pk,
                    object_repr=str(new_owner),
                    details=f'–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞: {new_owner.username}. –í—Ä–µ–º–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã.'
                )

        elif action == 'revoke_access':
            # –û—Ç–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø —É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞
            user_to_revoke = form.cleaned_data['user_to_revoke']

            if user_to_revoke:
                # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                user_to_revoke.is_active = False
                user_to_revoke.save()

                messages.success(
                    self.request,
                    f'üö´ –î–æ—Å—Ç—É–ø –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞ "{user_to_revoke.username}" –æ—Ç–æ–∑–≤–∞–Ω. '
                    f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É.'
                )

                # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
                if isinstance(current_user, User) and current_user.is_authenticated:
                    ActionLog.objects.create(
                        user=current_user,
                        action_type=ActionLog.ACTION_EDIT,
                        model_name=User.__name__,
                        object_id=user_to_revoke.pk,
                        object_repr=str(user_to_revoke),
                        details=f'–î–æ—Å—Ç—É–ø –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞ {user_to_revoke.username} –æ—Ç–æ–∑–≤–∞–Ω'
                    )
            else:
                messages.error(self.request, '–ù–µ –≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç–∑—ã–≤–∞ –¥–æ—Å—Ç—É–ø–∞.')
                return self.form_invalid(form)

        return super().form_valid(form)
