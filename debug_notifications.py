#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import os
import django

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.local')
django.setup()

from users.models import User, Notification
from core.context_processors.navigation import get_notifications_count, navigation_context
from django.test import RequestFactory

def main():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ß–ï–¢–ß–ò–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è owner
    try:
        owner = User.objects.get(username='owner')
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {owner.username} (id: {owner.id})")
    except User.DoesNotExist:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ë–î
    total_notifications = owner.notifications.count()
    unread_notifications_db = owner.notifications.filter(is_read=False).count()

    print(f"\nüìä –î–ê–ù–ù–´–ï –ò–ó –ë–î:")
    print(f"  –í—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {total_notifications}")
    print(f"  –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread_notifications_db}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ —Å–≤–æ–π—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏
    unread_from_property = owner.unread_notifications_count
    print(f"\nüè∑Ô∏è  –ß–ï–†–ï–ó –°–í–û–ô–°–¢–í–û –ú–û–î–ï–õ–ò:")
    print(f"  unread_notifications_count: {unread_from_property}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ context processor
    factory = RequestFactory()
    request = factory.get('/')
    request.user = owner

    context = navigation_context(request)
    unread_from_context = context.get('unread_notifications_count', '–ù–ï –ù–ê–ô–î–ï–ù–û')

    print(f"\nüîß –ß–ï–†–ï–ó CONTEXT PROCESSOR:")
    print(f"  unread_notifications_count: {unread_from_context}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print(f"\nüìã –ü–û–°–õ–ï–î–ù–ò–ï 5 –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
    recent = owner.notifications.all()[:5]
    if recent:
        for i, notification in enumerate(recent, 1):
            print(f"  {i}. {notification.title}")
            print(f"     –ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {notification.is_read}")
            print(f"     –î–∞—Ç–∞: {notification.created_at}")
            print(f"     ID: {notification.id}")
            print()
    else:
        print("  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ—Ç")

    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"\nüîç –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print(f"  –ë–î (–ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å): {unread_notifications_db}")
    print(f"  –°–≤–æ–π—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏:    {unread_from_property}")
    print(f"  Context processor:  {unread_from_context}")

    if unread_notifications_db == unread_from_property == unread_from_context:
        print("  ‚úÖ –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã")
    else:
        print("  ‚ùå –ù–ê–ô–î–ï–ù–û –†–ê–°–•–û–ñ–î–ï–ù–ò–ï!")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    print(f"\nüî¨ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å is_read=None
    none_read = owner.notifications.filter(is_read__isnull=True).count()
    print(f"  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å is_read=None: {none_read}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notification_types = owner.notifications.values('notification_type').distinct()
    print(f"  –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {list(notification_types)}")

    print(f"\n" + "=" * 50)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == '__main__':
    main()
