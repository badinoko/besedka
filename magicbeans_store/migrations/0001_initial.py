# Generated by Django 4.2.21 on 2025-06-26 16:35

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=40,
                        null=True,
                        verbose_name="Ключ сессии гостя",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создана"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлена"),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Сумма скидки",
                    ),
                ),
            ],
            options={
                "verbose_name": "Корзина",
                "verbose_name_plural": "Корзины",
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Код купона"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Процент скидки",
                    ),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Максимальное количество использований"
                    ),
                ),
                (
                    "uses_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество использований"
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="Дата начала")),
                ("end_date", models.DateTimeField(verbose_name="Дата окончания")),
                (
                    "min_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Минимальная сумма заказа",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
            ],
            options={
                "verbose_name": "Купон",
                "verbose_name_plural": "Купоны",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InventoryReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("current", "Текущий остаток"),
                            ("movement", "Движение товара"),
                            ("low_stock", "Низкий остаток"),
                            ("custom", "Пользовательский"),
                        ],
                        default="current",
                        max_length=20,
                        verbose_name="Тип отчета",
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="Дата начала")),
                ("end_date", models.DateTimeField(verbose_name="Дата окончания")),
                (
                    "total_items",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Всего товаров"
                    ),
                ),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Общая стоимость",
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=5, verbose_name="Порог низкого остатка"
                    ),
                ),
                (
                    "report_data",
                    models.JSONField(
                        default=dict,
                        help_text="Детальные данные отчета в формате JSON",
                        verbose_name="Данные отчета",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
            ],
            options={
                "verbose_name": "Отчет по складу",
                "verbose_name_plural": "Отчеты по складу",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Стоимость доставки",
                    ),
                ),
                (
                    "subtotal_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Сумма товаров (до скидки)",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Сумма скидки",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Общая сумма (с учетом скидки и доставки)",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, verbose_name="Комментарий к заказу"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                (
                    "guest_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email гостя",
                    ),
                ),
                (
                    "guest_full_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Полное имя гостя",
                    ),
                ),
                (
                    "guest_phone_number",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Телефон гостя",
                    ),
                ),
                (
                    "guest_address_line_1",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Адрес гостя (улица, дом)",
                    ),
                ),
                (
                    "guest_address_line_2",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Адрес гостя (дополнительно)",
                    ),
                ),
                (
                    "guest_city",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Город гостя",
                    ),
                ),
                (
                    "guest_state_province_region",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Область/Край гостя",
                    ),
                ),
                (
                    "guest_postal_code",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Почтовый индекс гостя",
                    ),
                ),
                (
                    "guest_country",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Страна гостя",
                    ),
                ),
                (
                    "applied_coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="magicbeans_store.coupon",
                        verbose_name="Примененный купон",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
                "ordering": ["-created_at"],
                "permissions": [
                    ("view_critical_data", "Can view critical store data"),
                    ("export_customer_data", "Can export customer data"),
                ],
            },
        ),
        migrations.CreateModel(
            name="OrderStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "color",
                    models.CharField(
                        default="#000000",
                        help_text="HEX код цвета",
                        max_length=7,
                        verbose_name="Цвет",
                    ),
                ),
                (
                    "is_final",
                    models.BooleanField(default=False, verbose_name="Финальный статус"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="Порядок"),
                ),
            ],
            options={
                "verbose_name": "Статус заказа",
                "verbose_name_plural": "Статусы заказов",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        help_text="Инструкции, которые будут показаны клиенту при выборе этого способа оплаты",
                        verbose_name="Инструкции по оплате",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="Порядок"),
                ),
            ],
            options={
                "verbose_name": "Способ оплаты",
                "verbose_name_plural": "Способы оплаты",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Promotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Процент"),
                            ("fixed", "Фиксированная сумма"),
                        ],
                        default="percentage",
                        max_length=20,
                        verbose_name="Тип скидки",
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Значение скидки",
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="Дата начала")),
                ("end_date", models.DateTimeField(verbose_name="Дата окончания")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создана"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлена"),
                ),
            ],
            options={
                "verbose_name": "Акция",
                "verbose_name_plural": "Акции",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="SalesReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily", "Ежедневный"),
                            ("weekly", "Еженедельный"),
                            ("monthly", "Ежемесячный"),
                            ("yearly", "Годовой"),
                            ("custom", "Пользовательский"),
                        ],
                        default="daily",
                        max_length=20,
                        verbose_name="Тип отчета",
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="Дата начала")),
                ("end_date", models.DateTimeField(verbose_name="Дата окончания")),
                (
                    "total_orders",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Всего заказов"
                    ),
                ),
                (
                    "total_sales",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Общая сумма продаж",
                    ),
                ),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Средний чек",
                    ),
                ),
                (
                    "report_data",
                    models.JSONField(
                        default=dict,
                        help_text="Детальные данные отчета в формате JSON",
                        verbose_name="Данные отчета",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
            ],
            options={
                "verbose_name": "Отчет по продажам",
                "verbose_name_plural": "Отчеты по продажам",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="SBPSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        help_text="Например: Сбербанк, ВТБ, Тинькофф",
                        max_length=200,
                        verbose_name="Название банка",
                    ),
                ),
                (
                    "account_holder",
                    models.CharField(
                        help_text="ФИО или название организации",
                        max_length=200,
                        verbose_name="Получатель платежа",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Номер телефона, привязанный к СБП",
                        max_length=20,
                        verbose_name="Номер телефона для СБП",
                    ),
                ),
                (
                    "bank_account",
                    models.CharField(
                        blank=True,
                        help_text="Номер банковского счета (опционально)",
                        max_length=50,
                        verbose_name="Номер счета",
                    ),
                ),
                (
                    "bik",
                    models.CharField(
                        blank=True,
                        help_text="БИК банка (опционально)",
                        max_length=9,
                        verbose_name="БИК банка",
                    ),
                ),
                (
                    "inn",
                    models.CharField(
                        blank=True,
                        help_text="ИНН получателя (опционально)",
                        max_length=12,
                        verbose_name="ИНН",
                    ),
                ),
                (
                    "payment_instructions",
                    models.TextField(
                        default="Для оплаты заказа через СБП:\n1. Наш менеджер свяжется с вами и предоставит реквизиты для оплаты\n2. Откройте приложение вашего банка\n3. Найдите функцию 'Переводы' или 'СБП'\n4. Введите номер телефона получателя или отсканируйте QR-код\n5. Укажите сумму заказа и подтвердите платеж\n6. Сообщите менеджеру о совершенном платеже",
                        help_text="Инструкции, которые будут показаны клиенту при выборе СБП",
                        verbose_name="Инструкции по оплате",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Показывать ли эти настройки клиентам",
                        verbose_name="Активны",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
            ],
            options={
                "verbose_name": "Настройки СБП",
                "verbose_name_plural": "Настройки СБП",
            },
        ),
        migrations.CreateModel(
            name="SeedBank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(blank=True, max_length=255, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("website", models.URLField(blank=True, verbose_name="Веб-сайт")),
                (
                    "logo",
                    models.ImageField(
                        blank=True, upload_to="seedbanks/logos/", verbose_name="Логотип"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Виден")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
            ],
            options={
                "verbose_name": "Сидбанк",
                "verbose_name_plural": "Сидбанки",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ShippingMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Стоимость",
                    ),
                ),
                (
                    "estimated_days",
                    models.CharField(
                        help_text="Например: 1-3 дня",
                        max_length=50,
                        verbose_name="Примерное время доставки",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="Порядок"),
                ),
            ],
            options={
                "verbose_name": "Способ доставки",
                "verbose_name_plural": "Способы доставки",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="StoreSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_name",
                    models.CharField(max_length=255, verbose_name="Название сайта"),
                ),
                (
                    "store_email",
                    models.EmailField(max_length=254, verbose_name="Email магазина"),
                ),
                (
                    "store_phone",
                    models.CharField(max_length=50, verbose_name="Телефон магазина"),
                ),
                (
                    "store_address",
                    models.TextField(blank=True, verbose_name="Адрес магазина"),
                ),
                (
                    "min_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Минимальная сумма заказа",
                    ),
                ),
                (
                    "free_shipping_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Сумма для бесплатной доставки",
                    ),
                ),
                (
                    "maintenance_mode",
                    models.BooleanField(
                        default=False,
                        help_text="Если включено, сайт будет недоступен для посетителей",
                        verbose_name="Режим обслуживания",
                    ),
                ),
                (
                    "maintenance_message",
                    models.TextField(
                        blank=True, verbose_name="Сообщение о техническом обслуживании"
                    ),
                ),
            ],
            options={
                "verbose_name": "Настройки магазина",
                "verbose_name_plural": "Настройки магазина",
            },
        ),
        migrations.CreateModel(
            name="Strain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "strain_type",
                    models.CharField(
                        choices=[
                            ("regular", "Регулярный"),
                            ("feminized", "Феминизированный"),
                            ("autoflowering", "Автоцветущий"),
                        ],
                        default="regular",
                        max_length=20,
                        verbose_name="Тип",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "genetics",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Генетика"
                    ),
                ),
                (
                    "thc_content",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0-5", "0-5%"),
                            ("5-10", "5-10%"),
                            ("10-15", "10-15%"),
                            ("15-20", "15-20%"),
                            ("20-25", "20-25%"),
                            ("25-30", "25-30%"),
                            ("30+", "30%+"),
                            ("unknown", "Неизвестно"),
                        ],
                        default="unknown",
                        max_length=20,
                        verbose_name="Содержание THC",
                    ),
                ),
                (
                    "cbd_content",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0-0.5", "0-0.5%"),
                            ("0.5-1", "0.5-1%"),
                            ("1-1.5", "1-1.5%"),
                            ("1.5-2", "1.5-2%"),
                            ("2-2.5", "2-2.5%"),
                            ("2.5-3", "2.5-3%"),
                            ("3+", "3%+"),
                            ("unknown", "Неизвестно"),
                        ],
                        default="unknown",
                        max_length=20,
                        verbose_name="Содержание CBD",
                    ),
                ),
                (
                    "flowering_time",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("6-8", "6-8 недель"),
                            ("8-10", "8-10 недель"),
                            ("10-12", "10-12 недель"),
                            ("12+", "12+ недель"),
                            ("auto", "Автоцвет"),
                            ("unknown", "Неизвестно"),
                        ],
                        default="unknown",
                        max_length=20,
                        verbose_name="Время цветения",
                    ),
                ),
                (
                    "height",
                    models.CharField(blank=True, max_length=50, verbose_name="Высота"),
                ),
                (
                    "yield_indoor",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Урожайность (indoor)"
                    ),
                ),
                (
                    "yield_outdoor",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Урожайность (outdoor)"
                    ),
                ),
                ("effect", models.TextField(blank=True, verbose_name="Эффект")),
                ("flavor", models.TextField(blank=True, verbose_name="Вкус и аромат")),
                ("is_active", models.BooleanField(default=True, verbose_name="Виден")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                (
                    "seedbank",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="strains",
                        to="magicbeans_store.seedbank",
                        verbose_name="Сидбанк",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сорт",
                "verbose_name_plural": "Сорта",
                "ordering": ["seedbank", "name"],
            },
        ),
        migrations.CreateModel(
            name="StrainImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Изображение товара",
                        upload_to="strains/",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Порядок"),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, verbose_name="Основное изображение"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Описание изображения для доступности",
                        max_length=255,
                        verbose_name="Альтернативный текст",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                (
                    "strain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="magicbeans_store.strain",
                        verbose_name="Сорт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение сорта",
                "verbose_name_plural": "Изображения сортов",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="StockItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seeds_count",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Количество семян",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Цена",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество на складе"
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Генерируется автоматически при сохранении",
                        max_length=50,
                        unique=True,
                        verbose_name="Артикул",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создан"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлен"),
                ),
                (
                    "strain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_items",
                        to="magicbeans_store.strain",
                        verbose_name="Сорт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар на складе",
                "verbose_name_plural": "Товары на складе",
                "ordering": ["strain", "seeds_count"],
            },
        ),
        migrations.CreateModel(
            name="ShippingAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        max_length=255, verbose_name="Полное имя получателя"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=30, verbose_name="Номер телефона"),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        max_length=255, verbose_name="Адрес (улица, дом, квартира)"
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Адрес (дополнительно)",
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="Город")),
                (
                    "state_province_region",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Область/Край/Республика",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=20, verbose_name="Почтовый индекс"),
                ),
                ("country", models.CharField(max_length=100, verbose_name="Страна")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Основной адрес"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipping_addresses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Адрес доставки",
                "verbose_name_plural": "Адреса доставки",
                "ordering": ["-is_default", "-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="Количество")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена за единицу"
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Общая стоимость"
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="magicbeans_store.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "stock_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="magicbeans_store.stockitem",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Позиция заказа",
                "verbose_name_plural": "Позиции заказа",
            },
        ),
        migrations.AddField(
            model_name="order",
            name="payment_method",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders",
                to="magicbeans_store.paymentmethod",
                verbose_name="Способ оплаты",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="shipping_address",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orders",
                to="magicbeans_store.shippingaddress",
                verbose_name="Адрес доставки (для зарегистрированных)",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="shipping_method",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders",
                to="magicbeans_store.shippingmethod",
                verbose_name="Способ доставки",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders",
                to="magicbeans_store.orderstatus",
                verbose_name="Статус",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orders",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="Количество"),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Добавлен"),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="magicbeans_store.cart",
                        verbose_name="Корзина",
                    ),
                ),
                (
                    "stock_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_items",
                        to="magicbeans_store.stockitem",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Элемент корзины",
                "verbose_name_plural": "Элементы корзины",
            },
        ),
        migrations.AddField(
            model_name="cart",
            name="applied_coupon",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="magicbeans_store.coupon",
                verbose_name="Примененный купон",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="carts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.AddConstraint(
            model_name="strainimage",
            constraint=models.UniqueConstraint(
                fields=("strain", "order"), name="unique_strain_image_order"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="strain",
            unique_together={("seedbank", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="stockitem",
            unique_together={("strain", "seeds_count")},
        ),
        migrations.AlterUniqueTogether(
            name="cartitem",
            unique_together={("cart", "stock_item")},
        ),
    ]
