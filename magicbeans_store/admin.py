from django.contrib import admin
from django.utils.translation import gettext_lazy as _
from django.urls import path, reverse
from django.template.response import TemplateResponse
from import_export.admin import ImportExportModelAdmin
from import_export import resources
from import_export.fields import Field
from .models import (
    SeedBank, Strain, StockItem, Order, OrderStatus,
    Promotion, Coupon, ShippingMethod, PaymentMethod,
    StoreSettings, SalesReport, InventoryReport, OrderItem,
    SBPSettings
)
from .resources import StockItemResource
from django.utils.html import format_html
from core.admin_site import store_admin_site, store_owner_site, owner_admin_site
from django.http import HttpResponseRedirect
from django.contrib.admin.templatetags.admin_urls import add_preserved_filters
from core.admin_mixins import StoreAdminMixin
from django.contrib.auth import get_user_model
from django.db import models

# ======================================================================
# –ë–ê–ó–û–í–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –î–õ–Ø –í–°–ï–• –ê–î–ú–ò–ù–û–ö –ú–ê–ì–ê–ó–ò–ù–ê
# ======================================================================

# StoreAdminMixin —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ core.admin_mixins

# ======================================================================
# –†–µ—Å—É—Ä—Å—ã –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞/—ç–∫—Å–ø–æ—Ä—Ç–∞
# ======================================================================

class SeedBankResource(resources.ModelResource):
    class Meta:
        model = SeedBank
        skip_unchanged = True
        report_skipped = False
        fields = ('id', 'name', 'description', 'website', 'is_active')

class StrainResource(resources.ModelResource):
    seedbank_name = Field(column_name='seedbank_name')

    def dehydrate_seedbank_name(self, strain):
        return strain.seedbank.name if strain.seedbank else ''

    class Meta:
        model = Strain
        skip_unchanged = True
        report_skipped = False
        fields = ('id', 'name', 'seedbank', 'seedbank_name', 'strain_type', 'description', 'is_active')

class StockItemResource(resources.ModelResource):
    strain_name = Field(column_name='strain_name')
    seedbank_name = Field(column_name='seedbank_name')

    def dehydrate_strain_name(self, stock_item):
        return stock_item.strain.name

    def dehydrate_seedbank_name(self, stock_item):
        return stock_item.strain.seedbank.name if stock_item.strain.seedbank else ''

    class Meta:
        model = StockItem
        skip_unchanged = True
        report_skipped = False
        fields = ('id', 'strain', 'strain_name', 'seedbank_name', 'seeds_count', 'price', 'quantity', 'sku')

# ======================================================================
# –ò–ù–õ–ê–ô–ù –ö–õ–ê–°–°–´ –î–õ–Ø –°–í–Ø–ó–ê–ù–ù–´–• –ú–û–î–ï–õ–ï–ô
# ======================================================================

class OrderItemInline(admin.TabularInline):
    """–ò–Ω–ª–∞–π–Ω –¥–ª—è –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–∞"""
    model = OrderItem
    extra = 0
    readonly_fields = ['total']
    autocomplete_fields = ['stock_item']

# ======================================================================
# –ê–î–ú–ò–ù–ö–ò –°–ò–î–ë–ê–ù–ö–û–í
# ======================================================================

class SeedBankAdmin(StoreAdminMixin, ImportExportModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å–∏–¥–±–∞–Ω–∫–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    resource_class = SeedBankResource
    list_display = ['name', 'strains_count', 'stock_items_count', 'website', 'is_active', 'created_at']
    list_filter = ['is_active', 'created_at']
    search_fields = ['name', 'description']
    readonly_fields = ['created_at', 'updated_at', 'strains_count', 'stock_items_count']

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'description', 'website', 'logo', 'is_active')
        }),
        ('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', {
            'fields': ('strains_count', 'stock_items_count'),
            'classes': ('collapse',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        })
    )

    def strains_count(self, obj):
        """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ä—Ç–æ–≤ –≤ —Å–∏–¥–±–∞–Ω–∫–µ"""
        count = obj.strains.count()
        active_count = obj.strains.filter(is_active=True).count()
        if count == 0:
            return format_html('<span style="color: #999;">0 —Å–æ—Ä—Ç–æ–≤</span>')

        color = '#28a745' if active_count > 0 else '#6c757d'
        return format_html(
            '<span style="color: {}; font-weight: bold;">üåø {} —Å–æ—Ä—Ç–æ–≤</span><br>'
            '<small style="color: #666;">({} –∞–∫—Ç–∏–≤–Ω—ã—Ö)</small>',
            color, count, active_count
        )
    strains_count.short_description = "–°–æ—Ä—Ç–∞"
    strains_count.admin_order_field = 'strains__count'

    def stock_items_count(self, obj):
        """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–∏–¥–±–∞–Ω–∫–µ"""
        count = StockItem.objects.filter(strain__seedbank=obj).count()
        active_count = StockItem.objects.filter(strain__seedbank=obj, is_active=True).count()
        total_seeds = StockItem.objects.filter(
            strain__seedbank=obj, is_active=True
        ).aggregate(total=models.Sum('seeds_count'))['total'] or 0

        if count == 0:
            return format_html('<span style="color: #999;">0 —Ç–æ–≤–∞—Ä–æ–≤</span>')

        color = '#28a745' if active_count > 0 else '#6c757d'
        return format_html(
            '<span style="color: {}; font-weight: bold;">üì¶ {} —Ç–æ–≤–∞—Ä–æ–≤</span><br>'
            '<small style="color: #666;">({} –∞–∫—Ç–∏–≤–Ω—ã—Ö, {} —Å–µ–º—è–Ω)</small>',
            color, count, active_count, total_seeds
        )
    stock_items_count.short_description = "–¢–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–µ"

    def get_queryset(self, request):
        return super().get_queryset(request).prefetch_related('strains')

class SeedBankStoreOwnerAdmin(StoreAdminMixin, ImportExportModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å–∏–¥–±–∞–Ω–∫–æ–≤ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    resource_class = SeedBankResource
    list_display = ['name', 'strains_count', 'stock_items_count', 'website', 'is_active', 'created_at']
    list_filter = ['is_active', 'created_at']
    search_fields = ['name', 'description']
    readonly_fields = ['created_at', 'updated_at']

    def strains_count(self, obj):
        count = obj.strains.count()
        return format_html('<span style="font-weight: bold;">üåø {} —Å–æ—Ä—Ç–æ–≤</span>', count)
    strains_count.short_description = "–°–æ—Ä—Ç–∞"

    def stock_items_count(self, obj):
        count = StockItem.objects.filter(strain__seedbank=obj).count()
        return format_html('<span style="font-weight: bold;">üì¶ {} —Ç–æ–≤–∞—Ä–æ–≤</span>', count)
    stock_items_count.short_description = "–¢–æ–≤–∞—Ä—ã"

# ======================================================================
# –ê–î–ú–ò–ù–ö–ò –°–û–†–¢–û–í
# ======================================================================

class StrainAdmin(StoreAdminMixin, ImportExportModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å–æ—Ä—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    resource_class = StrainResource
    list_display = [
        'name', 'seedbank', 'strain_type', 'stock_count', 'total_seeds',
        'thc_content', 'cbd_content', 'is_visible'
    ]
    list_filter = [
        'strain_type', 'seedbank', 'is_active', 'flowering_time',
        'thc_content', 'cbd_content'
    ]
    search_fields = ['name', 'description', 'genetics']
    readonly_fields = ['created_at', 'updated_at', 'stock_count', 'total_seeds']
    autocomplete_fields = ['seedbank']

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'seedbank', 'strain_type', 'is_active')
        }),
        ('–û–ø–∏—Å–∞–Ω–∏–µ', {
            'fields': ('description',)
        }),
        ('–ì–µ–Ω–µ—Ç–∏–∫–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', {
            'fields': ('genetics', 'thc_content', 'cbd_content', 'flowering_time', 'height', 'yield_indoor', 'yield_outdoor')
        }),
        ('üìä –°–∫–ª–∞–¥—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', {
            'fields': ('stock_count', 'total_seeds'),
            'classes': ('collapse',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        })
    )

    def stock_count(self, obj):
        """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ —ç—Ç–æ–≥–æ —Å–æ—Ä—Ç–∞"""
        count = obj.stock_items.count()
        active_count = obj.stock_items.filter(is_active=True).count()

        if count == 0:
            return format_html('<span style="color: #999;">üì¶ 0 —Ç–æ–≤–∞—Ä–æ–≤</span>')

        color = '#28a745' if active_count > 0 else '#6c757d'
        return format_html(
            '<span style="color: {}; font-weight: bold;">üì¶ {} —Ç–æ–≤–∞—Ä–æ–≤</span><br>'
            '<small style="color: #666;">({} –∞–∫—Ç–∏–≤–Ω—ã—Ö)</small>',
            color, count, active_count
        )
    stock_count.short_description = "–¢–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–µ"

    def total_seeds(self, obj):
        """–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω —ç—Ç–æ–≥–æ —Å–æ—Ä—Ç–∞"""
        total = obj.stock_items.filter(is_active=True).aggregate(
            total=models.Sum('seeds_count')
        )['total'] or 0

        total_quantity = obj.stock_items.filter(is_active=True).aggregate(
            total=models.Sum('quantity')
        )['total'] or 0

        if total == 0:
            return format_html('<span style="color: #999;">üå± 0 —Å–µ–º—è–Ω</span>')

        return format_html(
            '<span style="color: #28a745; font-weight: bold;">üå± {} —Å–µ–º—è–Ω</span><br>'
            '<small style="color: #666;">(–≤ {} —É–ø–∞–∫–æ–≤–∫–∞—Ö)</small>',
            total, total_quantity
        )
    total_seeds.short_description = "–í—Å–µ–≥–æ —Å–µ–º—è–Ω"

    def is_visible(self, obj):
        return "‚úÖ –í–∏–¥–∏–º—ã–π" if obj.is_active else "‚ùå –°–∫—Ä—ã—Ç—ã–π"
    is_visible.short_description = "–°—Ç–∞—Ç—É—Å –≤–∏–¥–∏–º–æ—Å—Ç–∏"
    is_visible.admin_order_field = 'is_active'

    def get_queryset(self, request):
        return super().get_queryset(request).select_related('seedbank').prefetch_related('stock_items')

class StrainStoreOwnerAdmin(StoreAdminMixin, ImportExportModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å–æ—Ä—Ç–æ–≤ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    resource_class = StrainResource
    list_display = [
        'name', 'seedbank', 'strain_type', 'stock_count',
        'thc_content', 'cbd_content', 'flowering_time', 'is_active'
    ]
    list_filter = [
        'strain_type', 'seedbank', 'is_active', 'flowering_time',
        'thc_content', 'cbd_content'
    ]
    search_fields = ['name', 'description', 'genetics']
    readonly_fields = ['created_at', 'updated_at']
    autocomplete_fields = ['seedbank']

    def stock_count(self, obj):
        count = obj.stock_items.count()
        return format_html('<span style="font-weight: bold;">üì¶ {} —Ç–æ–≤–∞—Ä–æ–≤</span>', count)
    stock_count.short_description = "–¢–æ–≤–∞—Ä—ã"

# ======================================================================
# –ê–î–ú–ò–ù–ö–ò –¢–û–í–ê–†–û–í
# ======================================================================

class StockItemAdmin(StoreAdminMixin, ImportExportModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    resource_class = StockItemResource
    list_display = [
        '__str__', 'strain', 'seeds_count', 'price', 'quantity',
        'total_value', 'availability_status', 'is_active'
    ]
    list_filter = [
        'seeds_count', 'is_active', 'strain__seedbank',
        'strain__strain_type', 'created_at'
    ]
    search_fields = ['strain__name', 'strain__seedbank__name', 'sku']
    readonly_fields = ['created_at', 'updated_at', 'sku', 'total_value']
    autocomplete_fields = ['strain']

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('strain', 'seeds_count', 'is_active')
        }),
        ('–¶–µ–Ω–∞ –∏ —Å–∫–ª–∞–¥', {
            'fields': ('price', 'quantity', 'total_value', 'sku')
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        })
    )

    def total_value(self, obj):
        """–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ"""
        if obj.price and obj.quantity:
            total = float(obj.price * obj.quantity)
            return format_html(
                '<span style="color: #28a745; font-weight: bold;">üí∞ {} ‚ÇΩ</span>',
                f"{total:.2f}"
            )
        return format_html('<span style="color: #999;">‚Äî</span>')
    total_value.short_description = "–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å"

    def availability_status(self, obj):
        """–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞"""
        if not obj.is_active:
            return format_html('<span style="color: #dc3545;">‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω</span>')

        if obj.quantity == 0:
            return format_html('<span style="color: #ffc107;">‚ö†Ô∏è –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span>')
        elif obj.quantity <= 5:
            return format_html('<span style="color: #fd7e14;">üìä –ú–∞–ª–æ ({})</span>', obj.quantity)
        else:
            return format_html('<span style="color: #28a745;">‚úÖ –í –Ω–∞–ª–∏—á–∏–∏ ({})</span>', obj.quantity)
    availability_status.short_description = "–ù–∞–ª–∏—á–∏–µ"
    availability_status.admin_order_field = 'quantity'

class StockItemStoreOwnerAdmin(StoreAdminMixin, ImportExportModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    resource_class = StockItemResource
    list_display = [
        '__str__', 'strain', 'seeds_count', 'price',
        'quantity', 'total_value', 'is_active'
    ]
    list_filter = [
        'seeds_count', 'is_active', 'strain__seedbank',
        'strain__strain_type', 'created_at'
    ]
    search_fields = ['strain__name', 'strain__seedbank__name', 'sku']
    readonly_fields = ['created_at', 'updated_at', 'sku']
    autocomplete_fields = ['strain']

    def total_value(self, obj):
        if obj.price and obj.quantity:
            total = float(obj.price * obj.quantity)
            return format_html('<span style="font-weight: bold;">üí∞ {} ‚ÇΩ</span>', f"{total:.2f}")
        return '‚Äî'
    total_value.short_description = "–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å"

# ======================================================================
# –ê–î–ú–ò–ù–ö–ò –ó–ê–ö–ê–ó–û–í
# ======================================================================

class OrderAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    model = Order
    list_display = [
        'id', 'user', 'status', 'total_amount',
        'payment_method', 'created_at', 'can_be_cancelled'
    ]
    list_filter = [
        'status', 'payment_method', 'shipping_method', 'created_at'
    ]
    search_fields = ['id', 'user__username', 'user__first_name', 'user__last_name']
    readonly_fields = ['created_at', 'updated_at']
    actions = ['cancel_selected_orders']

    fieldsets = (
        ('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ', {
            'fields': ('user', 'status')
        }),
        ('–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('total_amount', 'payment_method', 'shipping_cost')
        }),
        ('–î–æ—Å—Ç–∞–≤–∫–∞', {
            'fields': ('shipping_method', 'shipping_address')
        }),
        ('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('comment',),
            'classes': ('collapse',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        })
    )

    inlines = [OrderItemInline]

    def has_add_permission(self, request):
        return False

    def can_be_cancelled(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞"""
        return obj.can_be_cancelled
    can_be_cancelled.short_description = "–ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å"
    can_be_cancelled.boolean = True

    def cancel_selected_orders(self, request, queryset):
        """–ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–º–µ–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤"""
        cancelled_count = 0
        failed_count = 0

        for order in queryset:
            if order.cancel_order(cancelled_by_user=request.user, reason="–û—Ç–º–µ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"):
                cancelled_count += 1
            else:
                failed_count += 1

        if cancelled_count > 0:
            self.message_user(
                request,
                f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {cancelled_count}. –¢–æ–≤–∞—Ä—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ —Å–∫–ª–∞–¥."
            )

        if failed_count > 0:
            self.message_user(
                request,
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑–æ–≤: {failed_count} (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ —É–∂–µ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∞—Ç—É—Å–µ).",
                level='warning'
            )

    cancel_selected_orders.short_description = "–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã (—Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥)"

# OrderStoreOwnerAdmin —É–¥–∞–ª–µ–Ω - –≤–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫–∞–∑–∞–º
# —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞

# ======================================================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ú–û–î–ï–õ–ò –ú–ê–ì–ê–ó–ò–ù–ê
# ======================================================================

# –ö–ª–∞—Å—Å—ã –∞–¥–º–∏–Ω–æ–∫ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
class OrderStatusAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤"""
    list_display = ['name', 'color', 'is_final', 'order']
    list_filter = ['is_final']
    search_fields = ['name', 'description']

class ShippingMethodAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    list_display = ['name', 'price', 'estimated_days', 'is_active']
    list_filter = ['is_active']
    search_fields = ['name', 'description']

class PaymentMethodAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã"""
    list_display = ['name', 'is_active']
    list_filter = ['is_active']
    search_fields = ['name', 'description']

class SBPSettingsAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –°–ë–ü"""
    list_display = ['bank_name', 'account_holder', 'phone_number', 'is_active', 'updated_at']
    list_filter = ['is_active', 'bank_name']
    search_fields = ['bank_name', 'account_holder', 'phone_number']
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', {
            'fields': ('bank_name', 'account_holder', 'phone_number')
        }),
        ('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', {
            'fields': ('bank_account', 'bik', 'inn'),
            'classes': ('collapse',)
        }),
        ('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤', {
            'fields': ('payment_instructions',)
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
    )
    readonly_fields = ('created_at', 'updated_at')

class PromotionAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –∞–∫—Ü–∏–π"""
    list_display = ['name', 'discount_type', 'discount_value', 'start_date', 'end_date', 'is_active']
    list_filter = ['is_active', 'discount_type', 'start_date', 'end_date']
    search_fields = ['name', 'description']

class CouponAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –∫—É–ø–æ–Ω–æ–≤"""
    list_display = ['code', 'discount_percentage', 'max_uses', 'uses_count', 'start_date', 'end_date', 'is_active']
    list_filter = ['is_active', 'start_date', 'end_date']
    search_fields = ['code', 'description']

class SalesReportAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º"""
    change_list_template = 'admin/store/sales_report.html'

    def has_add_permission(self, request):
        return False

    def has_change_permission(self, request, obj=None):
        return False

    def has_delete_permission(self, request, obj=None):
        return False

class InventoryReportAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–û—Ç—á–µ—Ç—ã –ø–æ —Å–∫–ª–∞–¥—É"""
    change_list_template = 'admin/store/inventory_report.html'

    def has_add_permission(self, request):
        return False

    def has_change_permission(self, request, obj=None):
        return False

    def has_delete_permission(self, request, obj=None):
        return False

class StoreSettingsAdmin(StoreAdminMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞"""
    list_display = ['site_name', 'store_email', 'store_phone', 'maintenance_mode']

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('site_name', 'store_email', 'store_phone', 'store_address')
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–∫–∞–∑–æ–≤', {
            'fields': ('min_order_amount', 'free_shipping_amount')
        }),
        ('–†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è', {
            'fields': ('maintenance_mode', 'maintenance_message')
        }),
    )

    def has_add_permission(self, request):
        return not StoreSettings.objects.exists()

    def has_delete_permission(self, request, obj=None):
        return False

# ======================================================================
# –ê–î–ú–ò–ù–ö–ê –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê–ú–ò –ú–ê–ì–ê–ó–ò–ù–ê
# ======================================================================

User = get_user_model()

class StoreAdminUserAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è store_owner)"""
    list_display = ['username', 'name', 'telegram_username', 'is_active', 'date_joined']
    list_filter = ['is_active', 'date_joined']
    search_fields = ['username', 'name', 'telegram_username']
    readonly_fields = ['date_joined', 'last_login']

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('username', 'name', 'telegram_username')
        }),
        ('–°—Ç–∞—Ç—É—Å', {
            'fields': ('is_active',)
        }),
        ('–î–∞—Ç—ã', {
            'fields': ('date_joined', 'last_login'),
            'classes': ('collapse',)
        }),
    )

    def get_queryset(self, request):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é store_admin"""
        qs = super().get_queryset(request)
        return qs.filter(role='store_admin')

    def has_add_permission(self, request):
        """–ó–∞–ø—Ä–µ—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ"""
        return False

    def has_delete_permission(self, request, obj=None):
        """–†–∞–∑—Ä–µ—à–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ (—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
        return True

# ======================================================================
# –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ú–û–î–ï–õ–ï–ô –í –ê–î–ú–ò–ù–ö–ê–• –ü–û –†–û–õ–Ø–ú
# ======================================================================

# üè™ –í–õ–ê–î–ï–õ–ï–¶ –ú–ê–ì–ê–ó–ò–ù–ê - –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
# –¢–æ–ª—å–∫–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏, –ë–ï–ó –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö

store_owner_site.register(User, StoreAdminUserAdmin)
store_owner_site.register(StoreSettings, StoreSettingsAdmin)
store_owner_site.register(SalesReport, SalesReportAdmin)
store_owner_site.register(InventoryReport, InventoryReportAdmin)
store_owner_site.register(PaymentMethod, PaymentMethodAdmin)
store_owner_site.register(ShippingMethod, ShippingMethodAdmin)
store_owner_site.register(SBPSettings, SBPSettingsAdmin)
store_owner_site.register(Promotion, PromotionAdmin)
store_owner_site.register(Coupon, CouponAdmin)

# üì¶ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–† –ú–ê–ì–ê–ó–ò–ù–ê - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º
# –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ —Ç–æ–ª—å–∫–æ –≤ store_admin

store_admin_site.register(SeedBank, SeedBankAdmin)
store_admin_site.register(Strain, StrainAdmin)
store_admin_site.register(StockItem, StockItemAdmin)
store_admin_site.register(OrderStatus, OrderStatusAdmin)
store_admin_site.register(Order, OrderAdmin)
store_admin_site.register(Promotion, PromotionAdmin)
store_admin_site.register(Coupon, CouponAdmin)
